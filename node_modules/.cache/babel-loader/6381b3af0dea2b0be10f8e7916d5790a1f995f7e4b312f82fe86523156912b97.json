{"ast":null,"code":"import _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport * as symbol from './symbol.js';\nimport * as time from './time.js';\nimport * as env from './environment.js';\nimport * as func from './function.js';\nexport var BOLD = symbol.create();\nexport var UNBOLD = symbol.create();\nexport var BLUE = symbol.create();\nexport var GREY = symbol.create();\nexport var GREEN = symbol.create();\nexport var RED = symbol.create();\nexport var PURPLE = symbol.create();\nexport var ORANGE = symbol.create();\nexport var UNCOLOR = symbol.create();\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nexport var computeNoColorLoggingArgs = function computeNoColorLoggingArgs(args) {\n  var strBuilder = [];\n  var logArgs = [];\n  // try with formatting until we find something unsupported\n  var i = 0;\n  for (; i < args.length; i++) {\n    var arg = args[i];\n    if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg);\n    } else if (arg.constructor === Object) {\n      logArgs.push(JSON.stringify(arg));\n    }\n  }\n  return logArgs;\n};\n/* c8 ignore stop */\n\nvar loggingColors = [GREEN, PURPLE, ORANGE, BLUE];\nvar nextColor = 0;\nvar lastLoggingTime = time.getUnixTime();\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport var createModuleLogger = function createModuleLogger(_print, moduleName) {\n  var color = loggingColors[nextColor];\n  var debugRegexVar = env.getVariable('log');\n  var doLogging = debugRegexVar !== null && (debugRegexVar === '*' || debugRegexVar === 'true' || new RegExp(debugRegexVar, 'gi').test(moduleName));\n  nextColor = (nextColor + 1) % loggingColors.length;\n  moduleName += ': ';\n  return !doLogging ? func.nop : function () {\n    var timeNow = time.getUnixTime();\n    var timeDiff = timeNow - lastLoggingTime;\n    lastLoggingTime = timeNow;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _print.apply(void 0, [color, moduleName, UNCOLOR].concat(_toConsumableArray(args.map(function (arg) {\n      return typeof arg === 'string' || typeof arg === 'symbol' ? arg : JSON.stringify(arg);\n    })), [color, ' +' + timeDiff + 'ms']));\n  };\n};\n/* c8 ignore stop */","map":{"version":3,"names":["symbol","time","env","func","BOLD","create","UNBOLD","BLUE","GREY","GREEN","RED","PURPLE","ORANGE","UNCOLOR","computeNoColorLoggingArgs","args","strBuilder","logArgs","i","length","arg","constructor","String","Number","push","Object","JSON","stringify","loggingColors","nextColor","lastLoggingTime","getUnixTime","createModuleLogger","_print","moduleName","color","debugRegexVar","getVariable","doLogging","RegExp","test","nop","timeNow","timeDiff","_len","arguments","Array","_key","apply","concat","_toConsumableArray","map"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/lib0/logging.common.js"],"sourcesContent":["import * as symbol from './symbol.js'\nimport * as time from './time.js'\nimport * as env from './environment.js'\nimport * as func from './function.js'\n\nexport const BOLD = symbol.create()\nexport const UNBOLD = symbol.create()\nexport const BLUE = symbol.create()\nexport const GREY = symbol.create()\nexport const GREEN = symbol.create()\nexport const RED = symbol.create()\nexport const PURPLE = symbol.create()\nexport const ORANGE = symbol.create()\nexport const UNCOLOR = symbol.create()\n\n/* c8 ignore start */\n/**\n * @param {Array<string|Symbol|Object|number>} args\n * @return {Array<string|object|number>}\n */\nexport const computeNoColorLoggingArgs = args => {\n  const strBuilder = []\n  const logArgs = []\n  // try with formatting until we find something unsupported\n  let i = 0\n  for (; i < args.length; i++) {\n    const arg = args[i]\n    if (arg.constructor === String || arg.constructor === Number) {\n      strBuilder.push(arg)\n    } else if (arg.constructor === Object) {\n      logArgs.push(JSON.stringify(arg))\n    }\n  }\n  return logArgs\n}\n/* c8 ignore stop */\n\nconst loggingColors = [GREEN, PURPLE, ORANGE, BLUE]\nlet nextColor = 0\nlet lastLoggingTime = time.getUnixTime()\n\n/* c8 ignore start */\n/**\n * @param {function(...any):void} _print\n * @param {string} moduleName\n * @return {function(...any):void}\n */\nexport const createModuleLogger = (_print, moduleName) => {\n  const color = loggingColors[nextColor]\n  const debugRegexVar = env.getVariable('log')\n  const doLogging = debugRegexVar !== null &&\n    (debugRegexVar === '*' || debugRegexVar === 'true' ||\n      new RegExp(debugRegexVar, 'gi').test(moduleName))\n  nextColor = (nextColor + 1) % loggingColors.length\n  moduleName += ': '\n  return !doLogging\n    ? func.nop\n    : (...args) => {\n        const timeNow = time.getUnixTime()\n        const timeDiff = timeNow - lastLoggingTime\n        lastLoggingTime = timeNow\n        _print(\n          color,\n          moduleName,\n          UNCOLOR,\n          ...args.map((arg) =>\n            (typeof arg === 'string' || typeof arg === 'symbol')\n              ? arg\n              : JSON.stringify(arg)\n          ),\n          color,\n          ' +' + timeDiff + 'ms'\n        )\n      }\n}\n/* c8 ignore stop */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}