{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { Box2d, toDomPrecision, Vec2d } from \"@tldraw/primitives\";\nimport { ShapeUtil } from \"../ShapeUtil.mjs\";\nimport { FONT_FAMILIES, LABEL_FONT_SIZES, TEXT_PROPS } from \"../shared/default-shape-constants.mjs\";\nimport { getTextLabelSvgElement } from \"../shared/getTextLabelSvgElement.mjs\";\nimport { HyperlinkButton } from \"../shared/HyperlinkButton.mjs\";\nimport { TextLabel } from \"../shared/TextLabel.mjs\";\nvar NOTE_SIZE = 200;\nvar NoteShapeUtil = /*#__PURE__*/function (_ShapeUtil) {\n  _inherits(NoteShapeUtil, _ShapeUtil);\n  var _super = _createSuper(NoteShapeUtil);\n  function NoteShapeUtil() {\n    var _this;\n    _classCallCheck(this, NoteShapeUtil);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"canEdit\", function () {\n      return true;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"hideResizeHandles\", function () {\n      return true;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"hideSelectionBoundsBg\", function () {\n      return true;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"hideSelectionBoundsFg\", function () {\n      return true;\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onBeforeCreate\", function (next) {\n      return getGrowY(_this.editor, next, next.props.growY);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onBeforeUpdate\", function (prev, next) {\n      if (prev.props.text === next.props.text && prev.props.font === next.props.font && prev.props.size === next.props.size) {\n        return;\n      }\n      return getGrowY(_this.editor, next, prev.props.growY);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onEditEnd\", function (shape) {\n      var id = shape.id,\n        type = shape.type,\n        text = shape.props.text;\n      if (text.trimEnd() !== shape.props.text) {\n        _this.editor.updateShapes([{\n          id: id,\n          type: type,\n          props: {\n            text: text.trimEnd()\n          }\n        }]);\n      }\n    });\n    return _this;\n  }\n  _createClass(NoteShapeUtil, [{\n    key: \"defaultProps\",\n    value: function defaultProps() {\n      return {\n        color: \"black\",\n        size: \"m\",\n        text: \"\",\n        font: \"draw\",\n        align: \"middle\",\n        verticalAlign: \"middle\",\n        growY: 0,\n        url: \"\"\n      };\n    }\n  }, {\n    key: \"getHeight\",\n    value: function getHeight(shape) {\n      return NOTE_SIZE + shape.props.growY;\n    }\n  }, {\n    key: \"getBounds\",\n    value: function getBounds(shape) {\n      var height = this.getHeight(shape);\n      return new Box2d(0, 0, NOTE_SIZE, height);\n    }\n  }, {\n    key: \"getOutline\",\n    value: function getOutline(shape) {\n      return this.bounds(shape).corners;\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(_shape) {\n      return new Vec2d(NOTE_SIZE / 2, this.getHeight(_shape) / 2);\n    }\n  }, {\n    key: \"component\",\n    value: function component(shape) {\n      var id = shape.id,\n        type = shape.type,\n        _shape$props = shape.props,\n        color = _shape$props.color,\n        font = _shape$props.font,\n        size = _shape$props.size,\n        align = _shape$props.align,\n        text = _shape$props.text,\n        verticalAlign = _shape$props.verticalAlign;\n      var adjustedColor = color === \"black\" ? \"yellow\" : color;\n      return /* @__PURE__ */jsxs(Fragment, {\n        children: [/* @__PURE__ */jsx(\"div\", {\n          style: {\n            position: \"absolute\",\n            width: NOTE_SIZE,\n            height: this.getHeight(shape)\n          },\n          children: /* @__PURE__ */jsxs(\"div\", {\n            className: \"tl-note__container tl-hitarea-fill\",\n            style: {\n              color: \"var(--palette-\".concat(adjustedColor, \")\"),\n              backgroundColor: \"var(--palette-\".concat(adjustedColor, \")\")\n            },\n            children: [/* @__PURE__ */jsx(\"div\", {\n              className: \"tl-note__scrim\"\n            }), /* @__PURE__ */jsx(TextLabel, {\n              id: id,\n              type: type,\n              font: font,\n              size: size,\n              align: align,\n              verticalAlign: verticalAlign,\n              text: text,\n              labelColor: adjustedColor,\n              wrap: true\n            })]\n          })\n        }), \"url\" in shape.props && shape.props.url && /* @__PURE__ */jsx(HyperlinkButton, {\n          url: shape.props.url,\n          zoomLevel: this.editor.zoomLevel\n        })]\n      });\n    }\n  }, {\n    key: \"indicator\",\n    value: function indicator(shape) {\n      return /* @__PURE__ */jsx(\"rect\", {\n        rx: \"7\",\n        width: toDomPrecision(NOTE_SIZE),\n        height: toDomPrecision(this.getHeight(shape))\n      });\n    }\n  }, {\n    key: \"toSvg\",\n    value: function toSvg(shape, font, colors) {\n      var bounds = this.bounds(shape);\n      var g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n      var adjustedColor = shape.props.color === \"black\" ? \"yellow\" : shape.props.color;\n      var rect1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect1.setAttribute(\"rx\", \"10\");\n      rect1.setAttribute(\"width\", NOTE_SIZE.toString());\n      rect1.setAttribute(\"height\", bounds.height.toString());\n      rect1.setAttribute(\"fill\", colors.fill[adjustedColor]);\n      rect1.setAttribute(\"stroke\", colors.fill[adjustedColor]);\n      rect1.setAttribute(\"stroke-width\", \"1\");\n      g.appendChild(rect1);\n      var rect2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect2.setAttribute(\"rx\", \"10\");\n      rect2.setAttribute(\"width\", NOTE_SIZE.toString());\n      rect2.setAttribute(\"height\", bounds.height.toString());\n      rect2.setAttribute(\"fill\", colors.background);\n      rect2.setAttribute(\"opacity\", \".28\");\n      g.appendChild(rect2);\n      var textElm = getTextLabelSvgElement({\n        editor: this.editor,\n        shape: shape,\n        font: font,\n        bounds: bounds\n      });\n      textElm.setAttribute(\"fill\", colors.text);\n      textElm.setAttribute(\"stroke\", \"none\");\n      g.appendChild(textElm);\n      return g;\n    }\n  }]);\n  return NoteShapeUtil;\n}(ShapeUtil);\n_defineProperty(NoteShapeUtil, \"type\", \"note\");\nfunction getGrowY(editor, shape) {\n  var prevGrowY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var PADDING = 17;\n  var nextTextSize = editor.textMeasure.measureText(shape.props.text, _objectSpread(_objectSpread({}, TEXT_PROPS), {}, {\n    fontFamily: FONT_FAMILIES[shape.props.font],\n    fontSize: LABEL_FONT_SIZES[shape.props.size],\n    width: NOTE_SIZE - PADDING * 2 + \"px\"\n  }));\n  var nextHeight = nextTextSize.h + PADDING * 2;\n  var growY = null;\n  if (nextHeight > NOTE_SIZE) {\n    growY = nextHeight - NOTE_SIZE;\n  } else {\n    if (prevGrowY) {\n      growY = 0;\n    }\n  }\n  if (growY !== null) {\n    return _objectSpread(_objectSpread({}, shape), {}, {\n      props: _objectSpread(_objectSpread({}, shape.props), {}, {\n        growY: growY\n      })\n    });\n  }\n}\nexport { NoteShapeUtil };","map":{"version":3,"names":["Fragment","jsx","jsxs","Box2d","toDomPrecision","Vec2d","ShapeUtil","FONT_FAMILIES","LABEL_FONT_SIZES","TEXT_PROPS","getTextLabelSvgElement","HyperlinkButton","TextLabel","NOTE_SIZE","NoteShapeUtil","_ShapeUtil","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","next","getGrowY","editor","props","growY","prev","text","font","size","shape","id","type","trimEnd","updateShapes","_createClass","key","value","defaultProps","color","align","verticalAlign","url","getHeight","getBounds","height","getOutline","bounds","corners","getCenter","_shape","component","_shape$props","adjustedColor","children","style","position","width","className","backgroundColor","labelColor","wrap","zoomLevel","indicator","rx","toSvg","colors","g","document","createElementNS","rect1","setAttribute","toString","fill","appendChild","rect2","background","textElm","prevGrowY","undefined","PADDING","nextTextSize","textMeasure","measureText","_objectSpread","fontFamily","fontSize","nextHeight","h"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/note/NoteShapeUtil.tsx"],"sourcesContent":["import { Box2d, toDomPrecision, Vec2d } from '@tldraw/primitives'\nimport { TLNoteShape } from '@tldraw/tlschema'\nimport { Editor } from '../../Editor'\nimport { ShapeUtil, TLOnEditEndHandler } from '../ShapeUtil'\nimport { FONT_FAMILIES, LABEL_FONT_SIZES, TEXT_PROPS } from '../shared/default-shape-constants'\nimport { getTextLabelSvgElement } from '../shared/getTextLabelSvgElement'\nimport { HyperlinkButton } from '../shared/HyperlinkButton'\nimport { TextLabel } from '../shared/TextLabel'\nimport { TLExportColors } from '../shared/TLExportColors'\n\nconst NOTE_SIZE = 200\n\n/** @public */\nexport class NoteShapeUtil extends ShapeUtil<TLNoteShape> {\n\tstatic override type = 'note' as const\n\n\tcanEdit = () => true\n\thideResizeHandles = () => true\n\thideSelectionBoundsBg = () => true\n\thideSelectionBoundsFg = () => true\n\n\tdefaultProps(): TLNoteShape['props'] {\n\t\treturn {\n\t\t\tcolor: 'black',\n\t\t\tsize: 'm',\n\t\t\ttext: '',\n\t\t\tfont: 'draw',\n\t\t\talign: 'middle',\n\t\t\tverticalAlign: 'middle',\n\t\t\tgrowY: 0,\n\t\t\turl: '',\n\t\t}\n\t}\n\n\tgetHeight(shape: TLNoteShape) {\n\t\treturn NOTE_SIZE + shape.props.growY\n\t}\n\n\tgetBounds(shape: TLNoteShape) {\n\t\tconst height = this.getHeight(shape)\n\t\treturn new Box2d(0, 0, NOTE_SIZE, height)\n\t}\n\n\tgetOutline(shape: TLNoteShape) {\n\t\treturn this.bounds(shape).corners\n\t}\n\n\tgetCenter(_shape: TLNoteShape) {\n\t\treturn new Vec2d(NOTE_SIZE / 2, this.getHeight(_shape) / 2)\n\t}\n\n\tcomponent(shape: TLNoteShape) {\n\t\tconst {\n\t\t\tid,\n\t\t\ttype,\n\t\t\tprops: { color, font, size, align, text, verticalAlign },\n\t\t} = shape\n\n\t\tconst adjustedColor = color === 'black' ? 'yellow' : color\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\twidth: NOTE_SIZE,\n\t\t\t\t\t\theight: this.getHeight(shape),\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"tl-note__container tl-hitarea-fill\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: `var(--palette-${adjustedColor})`,\n\t\t\t\t\t\t\tbackgroundColor: `var(--palette-${adjustedColor})`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"tl-note__scrim\" />\n\t\t\t\t\t\t<TextLabel\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\tfont={font}\n\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\talign={align}\n\t\t\t\t\t\t\tverticalAlign={verticalAlign}\n\t\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\t\tlabelColor={adjustedColor}\n\t\t\t\t\t\t\twrap\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{'url' in shape.props && shape.props.url && (\n\t\t\t\t\t<HyperlinkButton url={shape.props.url} zoomLevel={this.editor.zoomLevel} />\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t}\n\n\tindicator(shape: TLNoteShape) {\n\t\treturn (\n\t\t\t<rect\n\t\t\t\trx=\"7\"\n\t\t\t\twidth={toDomPrecision(NOTE_SIZE)}\n\t\t\t\theight={toDomPrecision(this.getHeight(shape))}\n\t\t\t/>\n\t\t)\n\t}\n\n\ttoSvg(shape: TLNoteShape, font: string, colors: TLExportColors) {\n\t\tconst bounds = this.bounds(shape)\n\n\t\tconst g = document.createElementNS('http://www.w3.org/2000/svg', 'g')\n\n\t\tconst adjustedColor = shape.props.color === 'black' ? 'yellow' : shape.props.color\n\n\t\tconst rect1 = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\n\t\trect1.setAttribute('rx', '10')\n\t\trect1.setAttribute('width', NOTE_SIZE.toString())\n\t\trect1.setAttribute('height', bounds.height.toString())\n\t\trect1.setAttribute('fill', colors.fill[adjustedColor])\n\t\trect1.setAttribute('stroke', colors.fill[adjustedColor])\n\t\trect1.setAttribute('stroke-width', '1')\n\t\tg.appendChild(rect1)\n\n\t\tconst rect2 = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\n\t\trect2.setAttribute('rx', '10')\n\t\trect2.setAttribute('width', NOTE_SIZE.toString())\n\t\trect2.setAttribute('height', bounds.height.toString())\n\t\trect2.setAttribute('fill', colors.background)\n\t\trect2.setAttribute('opacity', '.28')\n\t\tg.appendChild(rect2)\n\n\t\tconst textElm = getTextLabelSvgElement({\n\t\t\teditor: this.editor,\n\t\t\tshape,\n\t\t\tfont,\n\t\t\tbounds,\n\t\t})\n\n\t\ttextElm.setAttribute('fill', colors.text)\n\t\ttextElm.setAttribute('stroke', 'none')\n\t\tg.appendChild(textElm)\n\n\t\treturn g\n\t}\n\n\tonBeforeCreate = (next: TLNoteShape) => {\n\t\treturn getGrowY(this.editor, next, next.props.growY)\n\t}\n\n\tonBeforeUpdate = (prev: TLNoteShape, next: TLNoteShape) => {\n\t\tif (\n\t\t\tprev.props.text === next.props.text &&\n\t\t\tprev.props.font === next.props.font &&\n\t\t\tprev.props.size === next.props.size\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\treturn getGrowY(this.editor, next, prev.props.growY)\n\t}\n\n\tonEditEnd: TLOnEditEndHandler<TLNoteShape> = (shape) => {\n\t\tconst {\n\t\t\tid,\n\t\t\ttype,\n\t\t\tprops: { text },\n\t\t} = shape\n\n\t\tif (text.trimEnd() !== shape.props.text) {\n\t\t\tthis.editor.updateShapes([\n\t\t\t\t{\n\t\t\t\t\tid,\n\t\t\t\t\ttype,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\ttext: text.trimEnd(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t])\n\t\t}\n\t}\n}\n\nfunction getGrowY(editor: Editor, shape: TLNoteShape, prevGrowY = 0) {\n\tconst PADDING = 17\n\n\tconst nextTextSize = editor.textMeasure.measureText(shape.props.text, {\n\t\t...TEXT_PROPS,\n\t\tfontFamily: FONT_FAMILIES[shape.props.font],\n\t\tfontSize: LABEL_FONT_SIZES[shape.props.size],\n\t\twidth: NOTE_SIZE - PADDING * 2 + 'px',\n\t})\n\n\tconst nextHeight = nextTextSize.h + PADDING * 2\n\n\tlet growY: number | null = null\n\n\tif (nextHeight > NOTE_SIZE) {\n\t\tgrowY = nextHeight - NOTE_SIZE\n\t} else {\n\t\tif (prevGrowY) {\n\t\t\tgrowY = 0\n\t\t}\n\t}\n\n\tif (growY !== null) {\n\t\treturn {\n\t\t\t...shape,\n\t\t\tprops: {\n\t\t\t\t...shape.props,\n\t\t\t\tgrowY,\n\t\t\t},\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}