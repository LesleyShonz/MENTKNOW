{"ast":null,"code":"function isRecord(record) {\n  return typeof record === \"object\" && record !== null && \"id\" in record && \"typeName\" in record;\n}\nexport { isRecord };","map":{"version":3,"names":["isRecord","record"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/store/src/lib/BaseRecord.ts"],"sourcesContent":["/** @public */\nexport type RecordId<R extends UnknownRecord> = string & { __type__: R }\n\n/** @public */\nexport type IdOf<R extends UnknownRecord> = R['id']\n\n/**\n * The base record that all records must extend.\n *\n * @public\n */\nexport interface BaseRecord<TypeName extends string, Id extends RecordId<UnknownRecord>> {\n\treadonly id: Id\n\treadonly typeName: TypeName\n}\n\n/** @public */\nexport type UnknownRecord = BaseRecord<string, RecordId<UnknownRecord>>\n\nexport type OmitMeta<R extends UnknownRecord> = R extends R ? Omit<R, 'id' | 'typeName'> : R\n\nexport function isRecord(record: unknown): record is UnknownRecord {\n\treturn typeof record === 'object' && record !== null && 'id' in record && 'typeName' in record\n}\n"],"mappings":"AAqBO,SAASA,SAASC,MAAA,EAA0C;EAClE,OAAO,OAAOA,MAAA,KAAW,YAAYA,MAAA,KAAW,QAAQ,QAAQA,MAAA,IAAU,cAAcA,MAAA;AACzF"},"metadata":{},"sourceType":"module","externalDependencies":[]}