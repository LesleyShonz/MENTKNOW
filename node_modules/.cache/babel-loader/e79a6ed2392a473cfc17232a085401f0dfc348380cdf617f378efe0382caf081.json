{"ast":null,"code":"import _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js';\nimport * as set from './set.js';\nimport * as buffer from './buffer.js';\nimport * as storage from './storage.js';\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nvar channels = new Map();\n\n/* c8 ignore start */\nvar LocalStoragePolyfill = /*#__PURE__*/function () {\n  /**\n   * @param {string} room\n   */\n  function LocalStoragePolyfill(room) {\n    var _this = this;\n    _classCallCheck(this, LocalStoragePolyfill);\n    this.room = room;\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null;\n    /**\n     * @param {any} e\n     */\n    this._onChange = function (e) {\n      return e.key === room && _this.onmessage !== null && _this.onmessage({\n        data: buffer.fromBase64(e.newValue || '')\n      });\n    };\n    storage.onChange(this._onChange);\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  _createClass(LocalStoragePolyfill, [{\n    key: \"postMessage\",\n    value: function postMessage(buf) {\n      storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)));\n    }\n  }, {\n    key: \"close\",\n    value: function close() {\n      storage.offChange(this._onChange);\n    }\n  }]);\n  return LocalStoragePolyfill;\n}();\n/* c8 ignore stop */\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nvar BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel;\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nvar getChannel = function getChannel(room) {\n  return map.setIfUndefined(channels, room, function () {\n    var subs = set.create();\n    var bc = new BC(room);\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = function (e) {\n      return subs.forEach(function (sub) {\n        return sub(e.data, 'broadcastchannel');\n      });\n    };\n    return {\n      bc: bc,\n      subs: subs\n    };\n  });\n};\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport var subscribe = function subscribe(room, f) {\n  getChannel(room).subs.add(f);\n  return f;\n};\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport var unsubscribe = function unsubscribe(room, f) {\n  var channel = getChannel(room);\n  var unsubscribed = channel.subs.delete(f);\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close();\n    channels.delete(room);\n  }\n  return unsubscribed;\n};\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport var publish = function publish(room, data) {\n  var origin = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var c = getChannel(room);\n  c.bc.postMessage(data);\n  c.subs.forEach(function (sub) {\n    return sub(data, origin);\n  });\n};","map":{"version":3,"names":["map","set","buffer","storage","channels","Map","LocalStoragePolyfill","room","_this","_classCallCheck","onmessage","_onChange","e","key","data","fromBase64","newValue","onChange","_createClass","value","postMessage","buf","varStorage","setItem","toBase64","createUint8ArrayFromArrayBuffer","close","offChange","BC","BroadcastChannel","getChannel","setIfUndefined","subs","create","bc","forEach","sub","subscribe","f","add","unsubscribe","channel","unsubscribed","delete","size","publish","origin","arguments","length","undefined","c"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/lib0/broadcastchannel.js"],"sourcesContent":["/* eslint-env browser */\n\n/**\n * Helpers for cross-tab communication using broadcastchannel with LocalStorage fallback.\n *\n * ```js\n * // In browser window A:\n * broadcastchannel.subscribe('my events', data => console.log(data))\n * broadcastchannel.publish('my events', 'Hello world!') // => A: 'Hello world!' fires synchronously in same tab\n *\n * // In browser window B:\n * broadcastchannel.publish('my events', 'hello from tab B') // => A: 'hello from tab B'\n * ```\n *\n * @module broadcastchannel\n */\n\n// @todo before next major: use Uint8Array instead as buffer object\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as buffer from './buffer.js'\nimport * as storage from './storage.js'\n\n/**\n * @typedef {Object} Channel\n * @property {Set<function(any, any):any>} Channel.subs\n * @property {any} Channel.bc\n */\n\n/**\n * @type {Map<string, Channel>}\n */\nconst channels = new Map()\n\n/* c8 ignore start */\nclass LocalStoragePolyfill {\n  /**\n   * @param {string} room\n   */\n  constructor (room) {\n    this.room = room\n    /**\n     * @type {null|function({data:ArrayBuffer}):void}\n     */\n    this.onmessage = null\n    /**\n     * @param {any} e\n     */\n    this._onChange = e => e.key === room && this.onmessage !== null && this.onmessage({ data: buffer.fromBase64(e.newValue || '') })\n    storage.onChange(this._onChange)\n  }\n\n  /**\n   * @param {ArrayBuffer} buf\n   */\n  postMessage (buf) {\n    storage.varStorage.setItem(this.room, buffer.toBase64(buffer.createUint8ArrayFromArrayBuffer(buf)))\n  }\n\n  close () {\n    storage.offChange(this._onChange)\n  }\n}\n/* c8 ignore stop */\n\n// Use BroadcastChannel or Polyfill\n/* c8 ignore next */\nconst BC = typeof BroadcastChannel === 'undefined' ? LocalStoragePolyfill : BroadcastChannel\n\n/**\n * @param {string} room\n * @return {Channel}\n */\nconst getChannel = room =>\n  map.setIfUndefined(channels, room, () => {\n    const subs = set.create()\n    const bc = new BC(room)\n    /**\n     * @param {{data:ArrayBuffer}} e\n     */\n    /* c8 ignore next */\n    bc.onmessage = e => subs.forEach(sub => sub(e.data, 'broadcastchannel'))\n    return {\n      bc, subs\n    }\n  })\n\n/**\n * Subscribe to global `publish` events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const subscribe = (room, f) => {\n  getChannel(room).subs.add(f)\n  return f\n}\n\n/**\n * Unsubscribe from `publish` global events.\n *\n * @function\n * @param {string} room\n * @param {function(any, any):any} f\n */\nexport const unsubscribe = (room, f) => {\n  const channel = getChannel(room)\n  const unsubscribed = channel.subs.delete(f)\n  if (unsubscribed && channel.subs.size === 0) {\n    channel.bc.close()\n    channels.delete(room)\n  }\n  return unsubscribed\n}\n\n/**\n * Publish data to all subscribers (including subscribers on this tab)\n *\n * @function\n * @param {string} room\n * @param {any} data\n * @param {any} [origin]\n */\nexport const publish = (room, data, origin = null) => {\n  const c = getChannel(room)\n  c.bc.postMessage(data)\n  c.subs.forEach(sub => sub(data, origin))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}