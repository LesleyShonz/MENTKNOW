{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nimport * as _Dialog from \"@radix-ui/react-dialog\";\nimport { useContainer } from \"@tldraw/editor\";\nimport React, { useCallback } from \"react\";\nimport { useDialogs } from \"../hooks/useDialogsProvider.mjs\";\nvar Dialog = function Dialog(_ref) {\n  var id = _ref.id,\n    ModalContent = _ref.component,\n    onClose = _ref.onClose;\n  var _useDialogs = useDialogs(),\n    removeDialog = _useDialogs.removeDialog;\n  var container = useContainer();\n  var handleOpenChange = useCallback(function (isOpen) {\n    if (!isOpen) {\n      if (onClose) {\n        try {\n          onClose();\n        } catch (err) {\n          console.warn(err);\n        }\n      }\n      removeDialog(id);\n    }\n  }, [id, onClose, removeDialog]);\n  return /* @__PURE__ */jsx(_Dialog.Root, {\n    onOpenChange: handleOpenChange,\n    defaultOpen: true,\n    children: /* @__PURE__ */jsx(_Dialog.Portal, {\n      container: container,\n      children: /* @__PURE__ */jsx(_Dialog.Overlay, {\n        dir: \"ltr\",\n        className: \"tlui-dialog__overlay\",\n        children: /* @__PURE__ */jsx(_Dialog.Content, {\n          dir: \"ltr\",\n          className: \"tlui-dialog__content\",\n          children: /* @__PURE__ */jsx(ModalContent, {\n            onClose: function onClose() {\n              return handleOpenChange(false);\n            }\n          })\n        })\n      })\n    })\n  });\n};\nfunction _Dialogs() {\n  var _useDialogs2 = useDialogs(),\n    dialogs = _useDialogs2.dialogs;\n  return /* @__PURE__ */jsx(Fragment, {\n    children: dialogs.map(function (dialog) {\n      return /* @__PURE__ */jsx(Dialog, _objectSpread({}, dialog), dialog.id);\n    })\n  });\n}\nvar Dialogs = React.memo(_Dialogs);\nexport { Dialogs };","map":{"version":3,"names":["Fragment","jsx","_Dialog","useContainer","React","useCallback","useDialogs","Dialog","_ref","id","ModalContent","component","onClose","_useDialogs","removeDialog","container","handleOpenChange","isOpen","err","console","warn","Root","onOpenChange","defaultOpen","children","Portal","Overlay","dir","className","Content","_Dialogs","_useDialogs2","dialogs","map","dialog","_objectSpread","Dialogs","memo"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/Dialogs.tsx"],"sourcesContent":["import * as _Dialog from '@radix-ui/react-dialog'\nimport { useContainer } from '@tldraw/editor'\nimport React, { useCallback } from 'react'\nimport { TLUiDialog, useDialogs } from '../hooks/useDialogsProvider'\n\nconst Dialog = ({ id, component: ModalContent, onClose }: TLUiDialog) => {\n\tconst { removeDialog } = useDialogs()\n\n\tconst container = useContainer()\n\n\tconst handleOpenChange = useCallback(\n\t\t(isOpen: boolean) => {\n\t\t\tif (!isOpen) {\n\t\t\t\tif (onClose) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tonClose()\n\t\t\t\t\t} catch (err: any) {\n\t\t\t\t\t\tconsole.warn(err)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tremoveDialog(id)\n\t\t\t}\n\t\t},\n\t\t[id, onClose, removeDialog]\n\t)\n\n\treturn (\n\t\t<_Dialog.Root onOpenChange={handleOpenChange} defaultOpen>\n\t\t\t<_Dialog.Portal container={container}>\n\t\t\t\t<_Dialog.Overlay dir=\"ltr\" className=\"tlui-dialog__overlay\">\n\t\t\t\t\t<_Dialog.Content dir=\"ltr\" className=\"tlui-dialog__content\">\n\t\t\t\t\t\t<ModalContent onClose={() => handleOpenChange(false)} />\n\t\t\t\t\t</_Dialog.Content>\n\t\t\t\t</_Dialog.Overlay>\n\t\t\t</_Dialog.Portal>\n\t\t</_Dialog.Root>\n\t)\n}\n\nfunction _Dialogs() {\n\tconst { dialogs } = useDialogs()\n\n\treturn (\n\t\t<>\n\t\t\t{dialogs.map((dialog: TLUiDialog) => (\n\t\t\t\t<Dialog key={dialog.id} {...dialog} />\n\t\t\t))}\n\t\t</>\n\t)\n}\n\nexport const Dialogs = React.memo(_Dialogs)\n"],"mappings":";AA+BM,SAYJA,QAAA,EAZIC,GAAA;AA/BN,YAAYC,OAAA,MAAa;AACzB,SAASC,YAAA,QAAoB;AAC7B,OAAOC,KAAA,IAASC,WAAA,QAAmB;AACnC,SAAqBC,UAAA,QAAkB;AAEvC,IAAMC,MAAA,GAAS,SAATA,OAAAC,IAAA,EAAmE;EAAA,IAAvDC,EAAA,GAAAD,IAAA,CAAAC,EAAA;IAAeC,YAAA,GAAAF,IAAA,CAAXG,SAAA;IAAyBC,OAAA,GAAAJ,IAAA,CAAAI,OAAA;EAC9C,IAAAC,WAAA,GAAyBP,UAAA,CAAW;IAA5BQ,YAAA,GAAAD,WAAA,CAAAC,YAAA;EAER,IAAMC,SAAA,GAAYZ,YAAA,CAAa;EAE/B,IAAMa,gBAAA,GAAmBX,WAAA,CACxB,UAACY,MAAA,EAAoB;IACpB,IAAI,CAACA,MAAA,EAAQ;MACZ,IAAIL,OAAA,EAAS;QACZ,IAAI;UACHA,OAAA,CAAQ;QACT,SAASM,GAAA,EAAP;UACDC,OAAA,CAAQC,IAAA,CAAKF,GAAG;QACjB;MACD;MACAJ,YAAA,CAAaL,EAAE;IAChB;EACD,GACA,CAACA,EAAA,EAAIG,OAAA,EAASE,YAAY,CAC3B;EAEA,OACC,eAAAb,GAAA,CAACC,OAAA,CAAQmB,IAAA,EAAR;IAAaC,YAAA,EAAcN,gBAAA;IAAkBO,WAAA,EAAW;IACxDC,QAAA,iBAAAvB,GAAA,CAACC,OAAA,CAAQuB,MAAA,EAAR;MAAeV,SAAA,EAAAA,SAAA;MACfS,QAAA,iBAAAvB,GAAA,CAACC,OAAA,CAAQwB,OAAA,EAAR;QAAgBC,GAAA,EAAI;QAAMC,SAAA,EAAU;QACpCJ,QAAA,iBAAAvB,GAAA,CAACC,OAAA,CAAQ2B,OAAA,EAAR;UAAgBF,GAAA,EAAI;UAAMC,SAAA,EAAU;UACpCJ,QAAA,iBAAAvB,GAAA,CAACS,YAAA;YAAaE,OAAA,EAAS,SAAAA,QAAA;cAAA,OAAMI,gBAAA,CAAiB,KAAK;YAAA;UAAA,CAAG;QAAA,CACvD;MAAA,CACD;IAAA,CACD;EAAA,CACD;AAEF;AAEA,SAASc,SAAA,EAAW;EACnB,IAAAC,YAAA,GAAoBzB,UAAA,CAAW;IAAvB0B,OAAA,GAAAD,YAAA,CAAAC,OAAA;EAER,OACC,eAAA/B,GAAA,CAAAD,QAAA;IACEwB,QAAA,EAAAQ,OAAA,CAAQC,GAAA,CAAI,UAACC,MAAA;MAAA,OACb,eAAAjC,GAAA,CAACM,MAAA,EAAA4B,aAAA,KAA2BD,MAAA,GAAfA,MAAA,CAAOzB,EAAgB,CACpC;IAAA;EAAA,CACF;AAEF;AAEO,IAAM2B,OAAA,GAAUhC,KAAA,CAAMiC,IAAA,CAAKP,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}