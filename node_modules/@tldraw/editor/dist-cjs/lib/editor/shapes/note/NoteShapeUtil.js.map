{
  "version": 3,
  "sources": ["../../../../../src/lib/editor/shapes/note/NoteShapeUtil.tsx"],
  "sourcesContent": ["import { Box2d, toDomPrecision, Vec2d } from '@tldraw/primitives'\nimport { TLNoteShape } from '@tldraw/tlschema'\nimport { Editor } from '../../Editor'\nimport { ShapeUtil, TLOnEditEndHandler } from '../ShapeUtil'\nimport { FONT_FAMILIES, LABEL_FONT_SIZES, TEXT_PROPS } from '../shared/default-shape-constants'\nimport { getTextLabelSvgElement } from '../shared/getTextLabelSvgElement'\nimport { HyperlinkButton } from '../shared/HyperlinkButton'\nimport { TextLabel } from '../shared/TextLabel'\nimport { TLExportColors } from '../shared/TLExportColors'\n\nconst NOTE_SIZE = 200\n\n/** @public */\nexport class NoteShapeUtil extends ShapeUtil<TLNoteShape> {\n\tstatic override type = 'note' as const\n\n\tcanEdit = () => true\n\thideResizeHandles = () => true\n\thideSelectionBoundsBg = () => true\n\thideSelectionBoundsFg = () => true\n\n\tdefaultProps(): TLNoteShape['props'] {\n\t\treturn {\n\t\t\tcolor: 'black',\n\t\t\tsize: 'm',\n\t\t\ttext: '',\n\t\t\tfont: 'draw',\n\t\t\talign: 'middle',\n\t\t\tverticalAlign: 'middle',\n\t\t\tgrowY: 0,\n\t\t\turl: '',\n\t\t}\n\t}\n\n\tgetHeight(shape: TLNoteShape) {\n\t\treturn NOTE_SIZE + shape.props.growY\n\t}\n\n\tgetBounds(shape: TLNoteShape) {\n\t\tconst height = this.getHeight(shape)\n\t\treturn new Box2d(0, 0, NOTE_SIZE, height)\n\t}\n\n\tgetOutline(shape: TLNoteShape) {\n\t\treturn this.bounds(shape).corners\n\t}\n\n\tgetCenter(_shape: TLNoteShape) {\n\t\treturn new Vec2d(NOTE_SIZE / 2, this.getHeight(_shape) / 2)\n\t}\n\n\tcomponent(shape: TLNoteShape) {\n\t\tconst {\n\t\t\tid,\n\t\t\ttype,\n\t\t\tprops: { color, font, size, align, text, verticalAlign },\n\t\t} = shape\n\n\t\tconst adjustedColor = color === 'black' ? 'yellow' : color\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\twidth: NOTE_SIZE,\n\t\t\t\t\t\theight: this.getHeight(shape),\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"tl-note__container tl-hitarea-fill\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tcolor: `var(--palette-${adjustedColor})`,\n\t\t\t\t\t\t\tbackgroundColor: `var(--palette-${adjustedColor})`,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"tl-note__scrim\" />\n\t\t\t\t\t\t<TextLabel\n\t\t\t\t\t\t\tid={id}\n\t\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\t\tfont={font}\n\t\t\t\t\t\t\tsize={size}\n\t\t\t\t\t\t\talign={align}\n\t\t\t\t\t\t\tverticalAlign={verticalAlign}\n\t\t\t\t\t\t\ttext={text}\n\t\t\t\t\t\t\tlabelColor={adjustedColor}\n\t\t\t\t\t\t\twrap\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{'url' in shape.props && shape.props.url && (\n\t\t\t\t\t<HyperlinkButton url={shape.props.url} zoomLevel={this.editor.zoomLevel} />\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t}\n\n\tindicator(shape: TLNoteShape) {\n\t\treturn (\n\t\t\t<rect\n\t\t\t\trx=\"7\"\n\t\t\t\twidth={toDomPrecision(NOTE_SIZE)}\n\t\t\t\theight={toDomPrecision(this.getHeight(shape))}\n\t\t\t/>\n\t\t)\n\t}\n\n\ttoSvg(shape: TLNoteShape, font: string, colors: TLExportColors) {\n\t\tconst bounds = this.bounds(shape)\n\n\t\tconst g = document.createElementNS('http://www.w3.org/2000/svg', 'g')\n\n\t\tconst adjustedColor = shape.props.color === 'black' ? 'yellow' : shape.props.color\n\n\t\tconst rect1 = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\n\t\trect1.setAttribute('rx', '10')\n\t\trect1.setAttribute('width', NOTE_SIZE.toString())\n\t\trect1.setAttribute('height', bounds.height.toString())\n\t\trect1.setAttribute('fill', colors.fill[adjustedColor])\n\t\trect1.setAttribute('stroke', colors.fill[adjustedColor])\n\t\trect1.setAttribute('stroke-width', '1')\n\t\tg.appendChild(rect1)\n\n\t\tconst rect2 = document.createElementNS('http://www.w3.org/2000/svg', 'rect')\n\t\trect2.setAttribute('rx', '10')\n\t\trect2.setAttribute('width', NOTE_SIZE.toString())\n\t\trect2.setAttribute('height', bounds.height.toString())\n\t\trect2.setAttribute('fill', colors.background)\n\t\trect2.setAttribute('opacity', '.28')\n\t\tg.appendChild(rect2)\n\n\t\tconst textElm = getTextLabelSvgElement({\n\t\t\teditor: this.editor,\n\t\t\tshape,\n\t\t\tfont,\n\t\t\tbounds,\n\t\t})\n\n\t\ttextElm.setAttribute('fill', colors.text)\n\t\ttextElm.setAttribute('stroke', 'none')\n\t\tg.appendChild(textElm)\n\n\t\treturn g\n\t}\n\n\tonBeforeCreate = (next: TLNoteShape) => {\n\t\treturn getGrowY(this.editor, next, next.props.growY)\n\t}\n\n\tonBeforeUpdate = (prev: TLNoteShape, next: TLNoteShape) => {\n\t\tif (\n\t\t\tprev.props.text === next.props.text &&\n\t\t\tprev.props.font === next.props.font &&\n\t\t\tprev.props.size === next.props.size\n\t\t) {\n\t\t\treturn\n\t\t}\n\n\t\treturn getGrowY(this.editor, next, prev.props.growY)\n\t}\n\n\tonEditEnd: TLOnEditEndHandler<TLNoteShape> = (shape) => {\n\t\tconst {\n\t\t\tid,\n\t\t\ttype,\n\t\t\tprops: { text },\n\t\t} = shape\n\n\t\tif (text.trimEnd() !== shape.props.text) {\n\t\t\tthis.editor.updateShapes([\n\t\t\t\t{\n\t\t\t\t\tid,\n\t\t\t\t\ttype,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\ttext: text.trimEnd(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t])\n\t\t}\n\t}\n}\n\nfunction getGrowY(editor: Editor, shape: TLNoteShape, prevGrowY = 0) {\n\tconst PADDING = 17\n\n\tconst nextTextSize = editor.textMeasure.measureText(shape.props.text, {\n\t\t...TEXT_PROPS,\n\t\tfontFamily: FONT_FAMILIES[shape.props.font],\n\t\tfontSize: LABEL_FONT_SIZES[shape.props.size],\n\t\twidth: NOTE_SIZE - PADDING * 2 + 'px',\n\t})\n\n\tconst nextHeight = nextTextSize.h + PADDING * 2\n\n\tlet growY: number | null = null\n\n\tif (nextHeight > NOTE_SIZE) {\n\t\tgrowY = nextHeight - NOTE_SIZE\n\t} else {\n\t\tif (prevGrowY) {\n\t\t\tgrowY = 0\n\t\t}\n\t}\n\n\tif (growY !== null) {\n\t\treturn {\n\t\t\t...shape,\n\t\t\tprops: {\n\t\t\t\t...shape.props,\n\t\t\t\tgrowY,\n\t\t\t},\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
