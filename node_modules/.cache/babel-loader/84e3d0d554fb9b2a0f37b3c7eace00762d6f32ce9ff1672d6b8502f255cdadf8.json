{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx } from \"react/jsx-runtime\";\nimport { uniqueId } from \"@tldraw/editor\";\nimport { createContext, useCallback, useContext, useState } from \"react\";\nvar ToastsContext = createContext({});\nfunction ToastsProvider(_ref) {\n  var children = _ref.children;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    toasts = _useState2[0],\n    setToasts = _useState2[1];\n  var addToast = useCallback(function (toast) {\n    var _toast$id;\n    var id = (_toast$id = toast.id) !== null && _toast$id !== void 0 ? _toast$id : uniqueId();\n    setToasts(function (d) {\n      return [].concat(_toConsumableArray(d.filter(function (m) {\n        return m.id !== toast.id;\n      })), [_objectSpread(_objectSpread({}, toast), {}, {\n        id: id\n      })]);\n    });\n    return id;\n  }, []);\n  var removeToast = useCallback(function (id) {\n    setToasts(function (d) {\n      return d.filter(function (m) {\n        return m.id !== id;\n      });\n    });\n    return id;\n  }, []);\n  var clearToasts = useCallback(function () {\n    setToasts(function () {\n      return [];\n    });\n  }, []);\n  return /* @__PURE__ */jsx(ToastsContext.Provider, {\n    value: {\n      toasts: toasts,\n      addToast: addToast,\n      removeToast: removeToast,\n      clearToasts: clearToasts\n    },\n    children: children\n  });\n}\nfunction useToasts() {\n  var ctx = useContext(ToastsContext);\n  if (!ctx) {\n    throw new Error(\"useToasts must be used within a ToastsProvider\");\n  }\n  return ctx;\n}\nexport { ToastsContext, ToastsProvider, useToasts };","map":{"version":3,"names":["jsx","uniqueId","createContext","useCallback","useContext","useState","ToastsContext","ToastsProvider","_ref","children","_useState","_useState2","_slicedToArray","toasts","setToasts","addToast","toast","_toast$id","id","d","concat","_toConsumableArray","filter","m","_objectSpread","removeToast","clearToasts","Provider","value","useToasts","ctx","Error"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useToastsProvider.tsx"],"sourcesContent":["import { Editor, uniqueId } from '@tldraw/editor'\nimport { createContext, useCallback, useContext, useState } from 'react'\n\n/** @public */\nexport interface TLUiToast {\n\tid: string\n\ticon?: string\n\ttitle?: string\n\tdescription?: string\n\tactions?: TLUiToastAction[]\n\tkeepOpen?: boolean\n\tcloseLabel?: string\n}\n\n/** @public */\nexport interface TLUiToastAction {\n\ttype: 'primary' | 'secondary' | 'warn'\n\tlabel: string\n\tonClick: () => void\n}\n\n/** @public */\nexport type TLUiToastsContextType = {\n\taddToast: (toast: Omit<TLUiToast, 'id'> & { id?: string }) => string\n\tremoveToast: (id: TLUiToast['id']) => string\n\tclearToasts: () => void\n\ttoasts: TLUiToast[]\n}\n\n/** @internal */\nexport const ToastsContext = createContext({} as TLUiToastsContextType)\n\n/** @internal */\nexport type ToastsProviderProps = {\n\toverrides?: (editor: Editor) => TLUiToastsContextType\n\tchildren: any\n}\n\n/** @internal */\nexport function ToastsProvider({ children }: ToastsProviderProps) {\n\tconst [toasts, setToasts] = useState<TLUiToast[]>([])\n\n\tconst addToast = useCallback((toast: Omit<TLUiToast, 'id'> & { id?: string }) => {\n\t\tconst id = toast.id ?? uniqueId()\n\t\tsetToasts((d) => [...d.filter((m) => m.id !== toast.id), { ...toast, id }])\n\t\treturn id\n\t}, [])\n\n\tconst removeToast = useCallback((id: string) => {\n\t\tsetToasts((d) => d.filter((m) => m.id !== id))\n\t\treturn id\n\t}, [])\n\n\tconst clearToasts = useCallback(() => {\n\t\tsetToasts(() => [])\n\t}, [])\n\n\treturn (\n\t\t<ToastsContext.Provider value={{ toasts, addToast, removeToast, clearToasts }}>\n\t\t\t{children}\n\t\t</ToastsContext.Provider>\n\t)\n}\n\n/** @public */\nexport function useToasts() {\n\tconst ctx = useContext(ToastsContext)\n\n\tif (!ctx) {\n\t\tthrow new Error('useToasts must be used within a ToastsProvider')\n\t}\n\n\treturn ctx\n}\n"],"mappings":";;;AA0DE,SAAAA,GAAA;AA1DF,SAAiBC,QAAA,QAAgB;AACjC,SAASC,aAAA,EAAeC,WAAA,EAAaC,UAAA,EAAYC,QAAA,QAAgB;AA6B1D,IAAMC,aAAA,GAAgBJ,aAAA,CAAc,CAAC,CAA0B;AAS/D,SAASK,eAAAC,IAAA,EAAkD;EAAA,IAAjCC,QAAA,GAAAD,IAAA,CAAAC,QAAA;EAChC,IAAAC,SAAA,GAA4BL,QAAA,CAAsB,EAAE;IAAAM,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7CG,MAAA,GAAAF,UAAA;IAAQG,SAAS,GAAAH,UAAA;EAExB,IAAMI,QAAA,GAAWZ,WAAA,CAAY,UAACa,KAAA,EAAmD;IAAA,IAAAC,SAAA;IAChF,IAAMC,EAAA,IAAAD,SAAA,GAAKD,KAAA,CAAME,EAAA,cAAAD,SAAA,cAAAA,SAAA,GAAMhB,QAAA,CAAS;IAChCa,SAAA,CAAU,UAACK,CAAA;MAAA,UAAAC,MAAA,CAAAC,kBAAA,CAAUF,CAAA,CAAEG,MAAA,CAAO,UAACC,CAAA;QAAA,OAAMA,CAAA,CAAEL,EAAA,KAAOF,KAAA,CAAME,EAAE;MAAA,MAAAM,aAAA,CAAAA,aAAA,KAAQR,KAAA;QAAOE,EAAA,EAAAA;MAAA;IAAA,CAAK;IAC1E,OAAOA,EAAA;EACR,GAAG,EAAE;EAEL,IAAMO,WAAA,GAActB,WAAA,CAAY,UAACe,EAAA,EAAe;IAC/CJ,SAAA,CAAU,UAACK,CAAA;MAAA,OAAMA,CAAA,CAAEG,MAAA,CAAO,UAACC,CAAA;QAAA,OAAMA,CAAA,CAAEL,EAAA,KAAOA,EAAE;MAAA,EAAC;IAAA;IAC7C,OAAOA,EAAA;EACR,GAAG,EAAE;EAEL,IAAMQ,WAAA,GAAcvB,WAAA,CAAY,YAAM;IACrCW,SAAA,CAAU;MAAA,OAAM,EAAE;IAAA;EACnB,GAAG,EAAE;EAEL,OACC,eAAAd,GAAA,CAACM,aAAA,CAAcqB,QAAA,EAAd;IAAuBC,KAAA,EAAO;MAAEf,MAAA,EAAAA,MAAA;MAAQE,QAAA,EAAAA,QAAA;MAAUU,WAAA,EAAAA,WAAA;MAAaC,WAAA,EAAAA;IAAY;IAC1EjB,QAAA,EAAAA;EAAA,CACF;AAEF;AAGO,SAASoB,UAAA,EAAY;EAC3B,IAAMC,GAAA,GAAM1B,UAAA,CAAWE,aAAa;EAEpC,IAAI,CAACwB,GAAA,EAAK;IACT,MAAM,IAAIC,KAAA,CAAM,gDAAgD;EACjE;EAEA,OAAOD,GAAA;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}