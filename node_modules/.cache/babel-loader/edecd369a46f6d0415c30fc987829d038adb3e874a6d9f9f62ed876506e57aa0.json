{"ast":null,"code":"import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { useKeyboardShortcutsSchema } from \"../hooks/useKeyboardShortcutsSchema.mjs\";\nimport { useReadonly } from \"../hooks/useReadonly.mjs\";\nimport { useTranslation } from \"../hooks/useTranslation/useTranslation.mjs\";\nimport * as Dialog from \"./primitives/Dialog.mjs\";\nimport { Kbd } from \"./primitives/Kbd.mjs\";\nvar KeyboardShortcutsDialog = function KeyboardShortcutsDialog() {\n  var msg = useTranslation();\n  var isReadonly = useReadonly();\n  var shortcutsItems = useKeyboardShortcutsSchema();\n  function getKeyboardShortcutItem(item) {\n    if (isReadonly && !item.readonlyOk) return null;\n    switch (item.type) {\n      case \"group\":\n        {\n          return /* @__PURE__ */jsxs(\"div\", {\n            className: \"tlui-shortcuts-dialog__group\",\n            children: [/* @__PURE__ */jsx(\"h2\", {\n              className: \"tlui-shortcuts-dialog__group__title\",\n              children: msg(item.id)\n            }), /* @__PURE__ */jsx(\"div\", {\n              className: \"tlui-shortcuts-dialog__group__content\",\n              children: item.children.filter(function (item2) {\n                return item2.type === \"item\" && item2.actionItem.kbd;\n              }).map(getKeyboardShortcutItem)\n            })]\n          }, item.id);\n        }\n      case \"item\":\n        {\n          var _item$actionItem = item.actionItem,\n            id = _item$actionItem.id,\n            label = _item$actionItem.label,\n            shortcutsLabel = _item$actionItem.shortcutsLabel,\n            kbd = _item$actionItem.kbd;\n          return /* @__PURE__ */jsxs(\"div\", {\n            className: \"tlui-shortcuts-dialog__key-pair\",\n            children: [/* @__PURE__ */jsx(\"div\", {\n              className: \"tlui-shortcuts-dialog__key-pair__key\",\n              children: msg(shortcutsLabel !== null && shortcutsLabel !== void 0 ? shortcutsLabel : label)\n            }), /* @__PURE__ */jsx(\"div\", {\n              className: \"tlui-shortcuts-dialog__key-pair__value\",\n              children: /* @__PURE__ */jsx(Kbd, {\n                children: kbd\n              })\n            })]\n          }, id);\n        }\n    }\n  }\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsxs(Dialog.Header, {\n      className: \"tlui-shortcuts-dialog__header\",\n      children: [/* @__PURE__ */jsx(Dialog.Title, {\n        children: msg(\"shortcuts-dialog.title\")\n      }), /* @__PURE__ */jsx(Dialog.CloseButton, {})]\n    }), /* @__PURE__ */jsx(Dialog.Body, {\n      className: \"tlui-shortcuts-dialog__body\",\n      children: shortcutsItems.map(getKeyboardShortcutItem)\n    }), /* @__PURE__ */jsx(\"div\", {\n      className: \"tlui-dialog__scrim\"\n    })]\n  });\n};\nexport { KeyboardShortcutsDialog };","map":{"version":3,"names":["Fragment","jsx","jsxs","useKeyboardShortcutsSchema","useReadonly","useTranslation","Dialog","Kbd","KeyboardShortcutsDialog","msg","isReadonly","shortcutsItems","getKeyboardShortcutItem","item","readonlyOk","type","className","children","id","filter","item2","actionItem","kbd","map","_item$actionItem","label","shortcutsLabel","Header","Title","CloseButton","Body"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/KeyboardShortcutsDialog.tsx"],"sourcesContent":["import { TLUiMenuChild } from '../hooks/menuHelpers'\nimport { useKeyboardShortcutsSchema } from '../hooks/useKeyboardShortcutsSchema'\nimport { useReadonly } from '../hooks/useReadonly'\nimport { TLUiTranslationKey } from '../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../hooks/useTranslation/useTranslation'\nimport * as Dialog from './primitives/Dialog'\nimport { Kbd } from './primitives/Kbd'\n\nexport const KeyboardShortcutsDialog = () => {\n\tconst msg = useTranslation()\n\tconst isReadonly = useReadonly()\n\tconst shortcutsItems = useKeyboardShortcutsSchema()\n\n\tfunction getKeyboardShortcutItem(item: TLUiMenuChild) {\n\t\tif (isReadonly && !item.readonlyOk) return null\n\n\t\tswitch (item.type) {\n\t\t\tcase 'group': {\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"tlui-shortcuts-dialog__group\" key={item.id}>\n\t\t\t\t\t\t<h2 className=\"tlui-shortcuts-dialog__group__title\">\n\t\t\t\t\t\t\t{msg(item.id as TLUiTranslationKey)}\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<div className=\"tlui-shortcuts-dialog__group__content\">\n\t\t\t\t\t\t\t{item.children\n\t\t\t\t\t\t\t\t.filter((item) => item.type === 'item' && item.actionItem.kbd)\n\t\t\t\t\t\t\t\t.map(getKeyboardShortcutItem)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t\tcase 'item': {\n\t\t\t\tconst { id, label, shortcutsLabel, kbd } = item.actionItem\n\n\t\t\t\treturn (\n\t\t\t\t\t<div className=\"tlui-shortcuts-dialog__key-pair\" key={id}>\n\t\t\t\t\t\t<div className=\"tlui-shortcuts-dialog__key-pair__key\">\n\t\t\t\t\t\t\t{msg((shortcutsLabel ?? label)!)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"tlui-shortcuts-dialog__key-pair__value\">\n\t\t\t\t\t\t\t<Kbd>{kbd!}</Kbd>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Dialog.Header className=\"tlui-shortcuts-dialog__header\">\n\t\t\t\t<Dialog.Title>{msg('shortcuts-dialog.title')}</Dialog.Title>\n\t\t\t\t<Dialog.CloseButton />\n\t\t\t</Dialog.Header>\n\t\t\t<Dialog.Body className=\"tlui-shortcuts-dialog__body\">\n\t\t\t\t{shortcutsItems.map(getKeyboardShortcutItem)}\n\t\t\t</Dialog.Body>\n\t\t\t<div className=\"tlui-dialog__scrim\" />\n\t\t</>\n\t)\n}\n"],"mappings":"AAmBK,SA8BHA,QAAA,EA7BIC,GAAA,EADDC,IAAA;AAlBL,SAASC,0BAAA,QAAkC;AAC3C,SAASC,WAAA,QAAmB;AAE5B,SAASC,cAAA,QAAsB;AAC/B,YAAYC,MAAA,MAAY;AACxB,SAASC,GAAA,QAAW;AAEb,IAAMC,uBAAA,GAA0B,SAA1BA,wBAAA,EAAgC;EAC5C,IAAMC,GAAA,GAAMJ,cAAA,CAAe;EAC3B,IAAMK,UAAA,GAAaN,WAAA,CAAY;EAC/B,IAAMO,cAAA,GAAiBR,0BAAA,CAA2B;EAElD,SAASS,wBAAwBC,IAAA,EAAqB;IACrD,IAAIH,UAAA,IAAc,CAACG,IAAA,CAAKC,UAAA,EAAY,OAAO;IAE3C,QAAQD,IAAA,CAAKE,IAAA;MACZ,KAAK;QAAS;UACb,OACC,eAAAb,IAAA,CAAC;YAAIc,SAAA,EAAU;YACdC,QAAA,kBAAAhB,GAAA,CAAC;cAAGe,SAAA,EAAU;cACZC,QAAA,EAAAR,GAAA,CAAII,IAAA,CAAKK,EAAwB;YAAA,CACnC,GACA,eAAAjB,GAAA,CAAC;cAAIe,SAAA,EAAU;cACbC,QAAA,EAAAJ,IAAA,CAAKI,QAAA,CACJE,MAAA,CAAO,UAACC,KAAA;gBAAA,OAASA,KAAA,CAAKL,IAAA,KAAS,UAAUK,KAAA,CAAKC,UAAA,CAAWC,GAAG;cAAA,GAC5DC,GAAA,CAAIX,uBAAuB;YAAA,CAC9B;UAAA,GARkDC,IAAA,CAAKK,EASxD;QAEF;MACA,KAAK;QAAQ;UACZ,IAAAM,gBAAA,GAA2CX,IAAA,CAAKQ,UAAA;YAAxCH,EAAA,GAAAM,gBAAA,CAAAN,EAAA;YAAIO,KAAA,GAAAD,gBAAA,CAAAC,KAAA;YAAOC,cAAA,GAAAF,gBAAA,CAAAE,cAAA;YAAgBJ,GAAA,GAAAE,gBAAA,CAAAF,GAAA;UAEnC,OACC,eAAApB,IAAA,CAAC;YAAIc,SAAA,EAAU;YACdC,QAAA,kBAAAhB,GAAA,CAAC;cAAIe,SAAA,EAAU;cACbC,QAAA,EAAAR,GAAA,CAAKiB,cAAA,aAAAA,cAAA,cAAAA,cAAA,GAAkBD,KAAO;YAAA,CAChC,GACA,eAAAxB,GAAA,CAAC;cAAIe,SAAA,EAAU;cACdC,QAAA,iBAAAhB,GAAA,CAACM,GAAA;gBAAKU,QAAA,EAAAK;cAAA,CAAK;YAAA,CACZ;UAAA,GANqDJ,EAOtD;QAEF;IACD;EACD;EAEA,OACC,eAAAhB,IAAA,CAAAF,QAAA;IACCiB,QAAA,kBAAAf,IAAA,CAACI,MAAA,CAAOqB,MAAA,EAAP;MAAcX,SAAA,EAAU;MACxBC,QAAA,kBAAAhB,GAAA,CAACK,MAAA,CAAOsB,KAAA,EAAP;QAAcX,QAAA,EAAAR,GAAA,CAAI,wBAAwB;MAAA,CAAE,GAC7C,eAAAR,GAAA,CAACK,MAAA,CAAOuB,WAAA,EAAP,EAAmB;IAAA,CACrB,GACA,eAAA5B,GAAA,CAACK,MAAA,CAAOwB,IAAA,EAAP;MAAYd,SAAA,EAAU;MACrBC,QAAA,EAAAN,cAAA,CAAeY,GAAA,CAAIX,uBAAuB;IAAA,CAC5C,GACA,eAAAX,GAAA,CAAC;MAAIe,SAAA,EAAU;IAAA,CAAqB;EAAA,CACrC;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}