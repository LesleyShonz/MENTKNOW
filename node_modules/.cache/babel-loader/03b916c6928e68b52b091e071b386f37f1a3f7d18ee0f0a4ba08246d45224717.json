{"ast":null,"code":"import _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { StateNode } from \"../../tools/StateNode.mjs\";\nimport { DrawShapeUtil } from \"./DrawShapeUtil.mjs\";\nimport { Drawing } from \"./toolStates/Drawing.mjs\";\nimport { Idle } from \"./toolStates/Idle.mjs\";\nvar DrawShapeTool = /*#__PURE__*/function (_StateNode) {\n  _inherits(DrawShapeTool, _StateNode);\n  var _super = _createSuper(DrawShapeTool);\n  function DrawShapeTool() {\n    var _this;\n    _classCallCheck(this, DrawShapeTool);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"shapeType\", DrawShapeUtil);\n    _defineProperty(_assertThisInitialized(_this), \"onExit\", function () {\n      var drawingState = _this.children[\"drawing\"];\n      drawingState.initialShape = void 0;\n    });\n    return _this;\n  }\n  return _createClass(DrawShapeTool);\n}(StateNode);\n_defineProperty(DrawShapeTool, \"id\", \"draw\");\n_defineProperty(DrawShapeTool, \"initial\", \"idle\");\n_defineProperty(DrawShapeTool, \"children\", function () {\n  return [Idle, Drawing];\n});\nexport { DrawShapeTool };","map":{"version":3,"names":["StateNode","DrawShapeUtil","Drawing","Idle","DrawShapeTool","_StateNode","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","drawingState","children","initialShape","_createClass"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/draw/DrawShapeTool.ts"],"sourcesContent":["import { StateNode } from '../../tools/StateNode'\nimport { DrawShapeUtil } from './DrawShapeUtil'\nimport { Drawing } from './toolStates/Drawing'\nimport { Idle } from './toolStates/Idle'\n\nexport class DrawShapeTool extends StateNode {\n\tstatic override id = 'draw'\n\tstatic initial = 'idle'\n\tstatic children = () => [Idle, Drawing]\n\n\tshapeType = DrawShapeUtil\n\n\tonExit = () => {\n\t\tconst drawingState = this.children!['drawing'] as Drawing\n\t\tdrawingState.initialShape = undefined\n\t}\n}\n"],"mappings":";;;;;;AAAA,SAASA,SAAA,QAAiB;AAC1B,SAASC,aAAA,QAAqB;AAC9B,SAASC,OAAA,QAAe;AACxB,SAASC,IAAA,QAAY;AAAA,IAERC,aAAA,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,aAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,aAAA;EAAA,SAAAA,cAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,aAAA;IAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,SAAAY,MAAA,CAAAL,IAAA;IAAAM,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,gBAKAR,aAAA;IAAAmB,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,aAEH,YAAM;MACd,IAAMa,YAAA,GAAeb,KAAA,CAAKc,QAAA,CAAU,SAAS;MAC7CD,YAAA,CAAaE,YAAA,GAAe;IAC7B;IAAA,OAAAf,KAAA;EAAA;EAAA,OAAAgB,YAAA,CAAArB,aAAA;AAAA,EAVkCJ,SAAA;AAAAoB,eAAA,CAAtBhB,aAAA,QACS;AAAAgB,eAAA,CADThB,aAAA,aAEK;AAAAgB,eAAA,CAFLhB,aAAA,cAGM;EAAA,OAAM,CAACD,IAAA,EAAMD,OAAO;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}