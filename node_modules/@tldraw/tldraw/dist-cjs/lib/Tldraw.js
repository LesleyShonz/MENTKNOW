"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var Tldraw_exports = {};
__export(Tldraw_exports, {
  Tldraw: () => Tldraw
});
module.exports = __toCommonJS(Tldraw_exports);
var import_jsx_runtime = require("react/jsx-runtime");
var import_editor = require("@tldraw/editor");
var import_ui = require("@tldraw/ui");
var import_react = require("react");
function Tldraw(props) {
  const { children, ...rest } = props;
  const withDefaults = {
    ...rest,
    shapes: (0, import_react.useMemo)(() => [...import_editor.defaultShapes, ...rest.shapes ?? []], [rest.shapes]),
    tools: (0, import_react.useMemo)(() => [...import_editor.defaultTools, ...rest.tools ?? []], [rest.tools])
  };
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_editor.TldrawEditor, { ...withDefaults, children: /* @__PURE__ */ (0, import_jsx_runtime.jsxs)(import_ui.TldrawUi, { ...withDefaults, children: [
    /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_ui.ContextMenu, { children: /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_editor.Canvas, {}) }),
    children
  ] }) });
}
//# sourceMappingURL=Tldraw.js.map
