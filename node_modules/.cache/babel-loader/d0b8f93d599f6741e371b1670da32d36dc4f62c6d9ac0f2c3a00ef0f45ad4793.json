{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { useEffect } from \"react\";\nimport { useValue } from \"signia-react\";\nimport { preventDefault } from \"../utils/dom.mjs\";\nimport { useContainer } from \"./useContainer.mjs\";\nimport { useEditor } from \"./useEditor.mjs\";\nfunction useDocumentEvents() {\n  var editor = useEditor();\n  var container = useContainer();\n  var isAppFocused = useValue(\"isFocused\", function () {\n    return editor.isFocused;\n  }, [editor]);\n  useEffect(function () {\n    if (!isAppFocused) return;\n    var handleKeyDown = function handleKeyDown(e) {\n      if (e.altKey && (editor.isIn(\"zoom\") || !editor.root.path.value.endsWith(\".idle\")) && !isFocusingInput()) {\n        preventDefault(e);\n      }\n      if (e.isKilled) return;\n      e.isKilled = true;\n      switch (e.key) {\n        case \"=\":\n          {\n            if (e.metaKey || e.ctrlKey) {\n              preventDefault(e);\n              return;\n            }\n            break;\n          }\n        case \"-\":\n          {\n            if (e.metaKey || e.ctrlKey) {\n              preventDefault(e);\n              return;\n            }\n            break;\n          }\n        case \"0\":\n          {\n            if (e.metaKey || e.ctrlKey) {\n              preventDefault(e);\n              return;\n            }\n            break;\n          }\n        case \"Tab\":\n          {\n            if (isFocusingInput() || editor.isMenuOpen) {\n              return;\n            }\n            break;\n          }\n        case \",\":\n          {\n            if (!isFocusingInput()) {\n              preventDefault(e);\n              if (!editor.inputs.keys.has(\"Comma\")) {\n                var _editor$inputs$curren = editor.inputs.currentScreenPoint,\n                  x = _editor$inputs$curren.x,\n                  y = _editor$inputs$curren.y,\n                  z = _editor$inputs$curren.z;\n                var hoveredId = editor.pageState.hoveredId;\n                editor.inputs.keys.add(\"Comma\");\n                var info2 = _objectSpread({\n                  type: \"pointer\",\n                  name: \"pointer_down\",\n                  point: {\n                    x: x,\n                    y: y,\n                    z: z\n                  },\n                  shiftKey: e.shiftKey,\n                  altKey: e.altKey,\n                  ctrlKey: e.metaKey || e.ctrlKey,\n                  pointerId: 0,\n                  button: 0,\n                  isPen: editor.isPenMode\n                }, hoveredId ? {\n                  target: \"shape\",\n                  shape: editor.getShapeById(hoveredId)\n                } : {\n                  target: \"canvas\"\n                });\n                editor.dispatch(info2);\n                return;\n              }\n            }\n            break;\n          }\n        case \"Escape\":\n          {\n            if (!editor.inputs.keys.has(\"Escape\")) {\n              editor.inputs.keys.add(\"Escape\");\n              editor.cancel();\n              container.focus();\n            }\n            return;\n          }\n        default:\n          {\n            if (isFocusingInput() || editor.isMenuOpen) {\n              return;\n            }\n          }\n      }\n      var info = {\n        type: \"keyboard\",\n        name: editor.inputs.keys.has(e.code) ? \"key_repeat\" : \"key_down\",\n        key: e.key,\n        code: e.code,\n        shiftKey: e.shiftKey,\n        altKey: e.altKey,\n        ctrlKey: e.metaKey || e.ctrlKey\n      };\n      editor.dispatch(info);\n    };\n    var handleKeyUp = function handleKeyUp(e) {\n      if (e.isKilled) return;\n      e.isKilled = true;\n      if (isFocusingInput() || editor.isMenuOpen) {\n        return;\n      }\n      if (e.key === \",\") {\n        var _document$activeEleme;\n        if ((_document$activeEleme = document.activeElement) !== null && _document$activeEleme !== void 0 && _document$activeEleme.ELEMENT_NODE) preventDefault(e);\n        if (editor.inputs.keys.has(e.code)) {\n          var _editor$inputs$curren2 = editor.inputs.currentScreenPoint,\n            x = _editor$inputs$curren2.x,\n            y = _editor$inputs$curren2.y,\n            z = _editor$inputs$curren2.z;\n          var hoveredId = editor.pageState.hoveredId;\n          editor.inputs.keys.delete(e.code);\n          var info2 = _objectSpread({\n            type: \"pointer\",\n            name: \"pointer_up\",\n            point: {\n              x: x,\n              y: y,\n              z: z\n            },\n            shiftKey: e.shiftKey,\n            altKey: e.altKey,\n            ctrlKey: e.metaKey || e.ctrlKey,\n            pointerId: 0,\n            button: 0,\n            isPen: editor.isPenMode\n          }, hoveredId ? {\n            target: \"shape\",\n            shape: editor.getShapeById(hoveredId)\n          } : {\n            target: \"canvas\"\n          });\n          editor.dispatch(info2);\n          return;\n        }\n      }\n      var info = {\n        type: \"keyboard\",\n        name: \"key_up\",\n        key: e.key,\n        code: e.code,\n        shiftKey: e.shiftKey,\n        altKey: e.altKey,\n        ctrlKey: e.metaKey || e.ctrlKey\n      };\n      editor.dispatch(info);\n    };\n    function handleTouchStart(e) {\n      if (container.contains(e.target)) {\n        var touchXPosition = e.touches[0].pageX;\n        var touchXRadius = e.touches[0].radiusX || 0;\n        if (touchXPosition - touchXRadius < 10 || touchXPosition + touchXRadius > editor.viewportScreenBounds.width - 10) {\n          var _e$target;\n          if (((_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.tagName) === \"BUTTON\") {\n            var _e$target2;\n            ;\n            (_e$target2 = e.target) === null || _e$target2 === void 0 || _e$target2.click();\n          }\n          preventDefault(e);\n        }\n      }\n    }\n    var handleWheel = function handleWheel(e) {\n      if (container.contains(e.target) && (e.ctrlKey || e.metaKey)) {\n        preventDefault(e);\n      }\n    };\n    function handleBlur() {\n      editor.complete();\n    }\n    function handleFocus() {\n      editor.updateViewportScreenBounds();\n    }\n    container.addEventListener(\"touchstart\", handleTouchStart, {\n      passive: false\n    });\n    document.addEventListener(\"wheel\", handleWheel, {\n      passive: false\n    });\n    document.addEventListener(\"gesturestart\", preventDefault);\n    document.addEventListener(\"gesturechange\", preventDefault);\n    document.addEventListener(\"gestureend\", preventDefault);\n    document.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"keyup\", handleKeyUp);\n    window.addEventListener(\"blur\", handleBlur);\n    window.addEventListener(\"focus\", handleFocus);\n    return function () {\n      container.removeEventListener(\"touchstart\", handleTouchStart);\n      document.removeEventListener(\"wheel\", handleWheel);\n      document.removeEventListener(\"gesturestart\", preventDefault);\n      document.removeEventListener(\"gesturechange\", preventDefault);\n      document.removeEventListener(\"gestureend\", preventDefault);\n      document.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"keyup\", handleKeyUp);\n      window.removeEventListener(\"blur\", handleBlur);\n      window.removeEventListener(\"focus\", handleFocus);\n    };\n  }, [editor, container, isAppFocused]);\n}\nvar INPUTS = [\"input\", \"select\", \"button\", \"textarea\"];\nfunction isFocusingInput() {\n  var _document = document,\n    activeElement = _document.activeElement;\n  if (activeElement && (activeElement.getAttribute(\"contenteditable\") || INPUTS.indexOf(activeElement.tagName.toLowerCase()) > -1)) {\n    return true;\n  }\n  return false;\n}\nexport { useDocumentEvents };","map":{"version":3,"names":["useEffect","useValue","preventDefault","useContainer","useEditor","useDocumentEvents","editor","container","isAppFocused","isFocused","handleKeyDown","e","altKey","isIn","root","path","value","endsWith","isFocusingInput","isKilled","key","metaKey","ctrlKey","isMenuOpen","inputs","keys","has","_editor$inputs$curren","currentScreenPoint","x","y","z","hoveredId","pageState","add","info2","_objectSpread","type","name","point","shiftKey","pointerId","button","isPen","isPenMode","target","shape","getShapeById","dispatch","cancel","focus","info","code","handleKeyUp","_document$activeEleme","document","activeElement","ELEMENT_NODE","_editor$inputs$curren2","delete","handleTouchStart","contains","touchXPosition","touches","pageX","touchXRadius","radiusX","viewportScreenBounds","width","_e$target","tagName","_e$target2","click","handleWheel","handleBlur","complete","handleFocus","updateViewportScreenBounds","addEventListener","passive","window","removeEventListener","INPUTS","_document","getAttribute","indexOf","toLowerCase"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/hooks/useDocumentEvents.ts"],"sourcesContent":["import { useEffect } from 'react'\nimport { useValue } from 'signia-react'\nimport { TLKeyboardEventInfo, TLPointerEventInfo } from '../editor/types/event-types'\nimport { preventDefault } from '../utils/dom'\nimport { useContainer } from './useContainer'\nimport { useEditor } from './useEditor'\n\nexport function useDocumentEvents() {\n\tconst editor = useEditor()\n\tconst container = useContainer()\n\n\tconst isAppFocused = useValue('isFocused', () => editor.isFocused, [editor])\n\n\tuseEffect(() => {\n\t\tif (!isAppFocused) return\n\n\t\tconst handleKeyDown = (e: KeyboardEvent) => {\n\t\t\tif (\n\t\t\t\te.altKey &&\n\t\t\t\t(editor.isIn('zoom') || !editor.root.path.value.endsWith('.idle')) &&\n\t\t\t\t!isFocusingInput()\n\t\t\t) {\n\t\t\t\t// On windows the alt key opens the menu bar.\n\t\t\t\t// We want to prevent that if the user is doing something else,\n\t\t\t\t// e.g. resizing a shape\n\t\t\t\tpreventDefault(e)\n\t\t\t}\n\n\t\t\tif ((e as any).isKilled) return\n\t\t\t;(e as any).isKilled = true\n\n\t\t\tswitch (e.key) {\n\t\t\t\tcase '=': {\n\t\t\t\t\tif (e.metaKey || e.ctrlKey) {\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase '-': {\n\t\t\t\t\tif (e.metaKey || e.ctrlKey) {\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase '0': {\n\t\t\t\t\tif (e.metaKey || e.ctrlKey) {\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'Tab': {\n\t\t\t\t\tif (isFocusingInput() || editor.isMenuOpen) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase ',': {\n\t\t\t\t\tif (!isFocusingInput()) {\n\t\t\t\t\t\tpreventDefault(e)\n\t\t\t\t\t\tif (!editor.inputs.keys.has('Comma')) {\n\t\t\t\t\t\t\tconst { x, y, z } = editor.inputs.currentScreenPoint\n\t\t\t\t\t\t\tconst {\n\t\t\t\t\t\t\t\tpageState: { hoveredId },\n\t\t\t\t\t\t\t} = editor\n\t\t\t\t\t\t\teditor.inputs.keys.add('Comma')\n\n\t\t\t\t\t\t\tconst info: TLPointerEventInfo = {\n\t\t\t\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\t\t\t\tname: 'pointer_down',\n\t\t\t\t\t\t\t\tpoint: { x, y, z },\n\t\t\t\t\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\t\t\t\t\taltKey: e.altKey,\n\t\t\t\t\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t\t\t\t\t\tpointerId: 0,\n\t\t\t\t\t\t\t\tbutton: 0,\n\t\t\t\t\t\t\t\tisPen: editor.isPenMode,\n\t\t\t\t\t\t\t\t...(hoveredId\n\t\t\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\t\t\ttarget: 'shape',\n\t\t\t\t\t\t\t\t\t\t\tshape: editor.getShapeById(hoveredId)!,\n\t\t\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\t\t\ttarget: 'canvas',\n\t\t\t\t\t\t\t\t\t  }),\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\teditor.dispatch(info)\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'Escape': {\n\t\t\t\t\tif (!editor.inputs.keys.has('Escape')) {\n\t\t\t\t\t\teditor.inputs.keys.add('Escape')\n\n\t\t\t\t\t\teditor.cancel()\n\t\t\t\t\t\t// Pressing escape will focus the document.body,\n\t\t\t\t\t\t// which will cause the app to lose focus, which\n\t\t\t\t\t\t// will break additional shortcuts. We need to\n\t\t\t\t\t\t// refocus the container in order to keep these\n\t\t\t\t\t\t// shortcuts working.\n\t\t\t\t\t\tcontainer.focus()\n\t\t\t\t\t}\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t\tdefault: {\n\t\t\t\t\tif (isFocusingInput() || editor.isMenuOpen) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst info: TLKeyboardEventInfo = {\n\t\t\t\ttype: 'keyboard',\n\t\t\t\tname: editor.inputs.keys.has(e.code) ? 'key_repeat' : 'key_down',\n\t\t\t\tkey: e.key,\n\t\t\t\tcode: e.code,\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t}\n\n\t\tconst handleKeyUp = (e: KeyboardEvent) => {\n\t\t\tif ((e as any).isKilled) return\n\t\t\t;(e as any).isKilled = true\n\n\t\t\tif (isFocusingInput() || editor.isMenuOpen) {\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\t// Use the , key to send pointer events\n\t\t\tif (e.key === ',') {\n\t\t\t\tif (document.activeElement?.ELEMENT_NODE) preventDefault(e)\n\t\t\t\tif (editor.inputs.keys.has(e.code)) {\n\t\t\t\t\tconst { x, y, z } = editor.inputs.currentScreenPoint\n\t\t\t\t\tconst {\n\t\t\t\t\t\tpageState: { hoveredId },\n\t\t\t\t\t} = editor\n\n\t\t\t\t\teditor.inputs.keys.delete(e.code)\n\n\t\t\t\t\tconst info: TLPointerEventInfo = {\n\t\t\t\t\t\ttype: 'pointer',\n\t\t\t\t\t\tname: 'pointer_up',\n\t\t\t\t\t\tpoint: { x, y, z },\n\t\t\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\t\t\taltKey: e.altKey,\n\t\t\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t\t\t\tpointerId: 0,\n\t\t\t\t\t\tbutton: 0,\n\t\t\t\t\t\tisPen: editor.isPenMode,\n\t\t\t\t\t\t...(hoveredId\n\t\t\t\t\t\t\t? {\n\t\t\t\t\t\t\t\t\ttarget: 'shape',\n\t\t\t\t\t\t\t\t\tshape: editor.getShapeById(hoveredId)!,\n\t\t\t\t\t\t\t  }\n\t\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t\ttarget: 'canvas',\n\t\t\t\t\t\t\t  }),\n\t\t\t\t\t}\n\t\t\t\t\teditor.dispatch(info)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst info: TLKeyboardEventInfo = {\n\t\t\t\ttype: 'keyboard',\n\t\t\t\tname: 'key_up',\n\t\t\t\tkey: e.key,\n\t\t\t\tcode: e.code,\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t}\n\n\t\tfunction handleTouchStart(e: TouchEvent) {\n\t\t\tif (container.contains(e.target as Node)) {\n\t\t\t\t// Center point of the touch area\n\t\t\t\tconst touchXPosition = e.touches[0].pageX\n\t\t\t\t// Size of the touch area\n\t\t\t\tconst touchXRadius = e.touches[0].radiusX || 0\n\n\t\t\t\t// We set a threshold (10px) on both sizes of the screen,\n\t\t\t\t// if the touch area overlaps with the screen edges\n\t\t\t\t// it's likely to trigger the navigation. We prevent the\n\t\t\t\t// touchstart event in that case.\n\t\t\t\tif (\n\t\t\t\t\ttouchXPosition - touchXRadius < 10 ||\n\t\t\t\t\ttouchXPosition + touchXRadius > editor.viewportScreenBounds.width - 10\n\t\t\t\t) {\n\t\t\t\t\tif ((e.target as HTMLElement)?.tagName === 'BUTTON') {\n\t\t\t\t\t\t// Force a click before bailing\n\t\t\t\t\t\t;(e.target as HTMLButtonElement)?.click()\n\t\t\t\t\t}\n\n\t\t\t\t\tpreventDefault(e)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Prevent wheel events that occur inside of the container\n\t\tconst handleWheel = (e: WheelEvent) => {\n\t\t\tif (container.contains(e.target as Node) && (e.ctrlKey || e.metaKey)) {\n\t\t\t\tpreventDefault(e)\n\t\t\t}\n\t\t}\n\n\t\tfunction handleBlur() {\n\t\t\teditor.complete()\n\t\t}\n\n\t\tfunction handleFocus() {\n\t\t\teditor.updateViewportScreenBounds()\n\t\t}\n\n\t\tcontainer.addEventListener('touchstart', handleTouchStart, { passive: false })\n\n\t\tdocument.addEventListener('wheel', handleWheel, { passive: false })\n\t\tdocument.addEventListener('gesturestart', preventDefault)\n\t\tdocument.addEventListener('gesturechange', preventDefault)\n\t\tdocument.addEventListener('gestureend', preventDefault)\n\n\t\tdocument.addEventListener('keydown', handleKeyDown)\n\t\tdocument.addEventListener('keyup', handleKeyUp)\n\n\t\twindow.addEventListener('blur', handleBlur)\n\t\twindow.addEventListener('focus', handleFocus)\n\n\t\treturn () => {\n\t\t\tcontainer.removeEventListener('touchstart', handleTouchStart)\n\n\t\t\tdocument.removeEventListener('wheel', handleWheel)\n\t\t\tdocument.removeEventListener('gesturestart', preventDefault)\n\t\t\tdocument.removeEventListener('gesturechange', preventDefault)\n\t\t\tdocument.removeEventListener('gestureend', preventDefault)\n\n\t\t\tdocument.removeEventListener('keydown', handleKeyDown)\n\t\t\tdocument.removeEventListener('keyup', handleKeyUp)\n\n\t\t\twindow.removeEventListener('blur', handleBlur)\n\t\t\twindow.removeEventListener('focus', handleFocus)\n\t\t}\n\t}, [editor, container, isAppFocused])\n}\n\nconst INPUTS = ['input', 'select', 'button', 'textarea']\n\nfunction isFocusingInput() {\n\tconst { activeElement } = document\n\n\tif (\n\t\tactiveElement &&\n\t\t(activeElement.getAttribute('contenteditable') ||\n\t\t\tINPUTS.indexOf(activeElement.tagName.toLowerCase()) > -1)\n\t) {\n\t\treturn true\n\t}\n\n\treturn false\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}