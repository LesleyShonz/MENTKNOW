{"ast":null,"code":"import _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { StateNode } from \"../../StateNode.mjs\";\nvar CursorTypeMap = {\n  bottom: \"ns-resize\",\n  top: \"ns-resize\",\n  left: \"ew-resize\",\n  right: \"ew-resize\",\n  bottom_left: \"nesw-resize\",\n  bottom_right: \"nwse-resize\",\n  top_left: \"nwse-resize\",\n  top_right: \"nesw-resize\",\n  bottom_left_rotate: \"swne-rotate\",\n  bottom_right_rotate: \"senw-rotate\",\n  top_left_rotate: \"nwse-rotate\",\n  top_right_rotate: \"nesw-rotate\",\n  mobile_rotate: \"grabbing\"\n};\nvar PointingResizeHandle = /*#__PURE__*/function (_StateNode) {\n  _inherits(PointingResizeHandle, _StateNode);\n  var _super = _createSuper(PointingResizeHandle);\n  function PointingResizeHandle() {\n    var _this;\n    _classCallCheck(this, PointingResizeHandle);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"info\", {});\n    _defineProperty(_assertThisInitialized(_this), \"onEnter\", function (info) {\n      _this.info = info;\n      _this.updateCursor();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function () {\n      var isDragging = _this.editor.inputs.isDragging;\n      if (isDragging) {\n        _this.parent.transition(\"resizing\", _this.info);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerUp\", function () {\n      _this.complete();\n    });\n    // override onPinchStart: TLEventHandlers['onPinchStart'] = (info) => {\n    // \tthis.parent.transition('pinching', info)\n    // }\n    _defineProperty(_assertThisInitialized(_this), \"onCancel\", function () {\n      _this.cancel();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onComplete\", function () {\n      _this.cancel();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onInterrupt\", function () {\n      _this.cancel();\n    });\n    return _this;\n  }\n  _createClass(PointingResizeHandle, [{\n    key: \"updateCursor\",\n    value: function updateCursor() {\n      var selected = this.editor.selectedShapes;\n      var cursorType = CursorTypeMap[this.info.handle];\n      this.editor.setCursor({\n        type: cursorType,\n        rotation: selected.length === 1 ? selected[0].rotation : 0\n      });\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (this.info.onInteractionEnd) {\n        this.editor.setSelectedTool(this.info.onInteractionEnd, {});\n      } else {\n        this.parent.transition(\"idle\", {});\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this.info.onInteractionEnd) {\n        this.editor.setSelectedTool(this.info.onInteractionEnd, {});\n      } else {\n        this.parent.transition(\"idle\", {});\n      }\n    }\n  }]);\n  return PointingResizeHandle;\n}(StateNode);\n_defineProperty(PointingResizeHandle, \"id\", \"pointing_resize_handle\");\nexport { CursorTypeMap, PointingResizeHandle };","map":{"version":3,"names":["StateNode","CursorTypeMap","bottom","top","left","right","bottom_left","bottom_right","top_left","top_right","bottom_left_rotate","bottom_right_rotate","top_left_rotate","top_right_rotate","mobile_rotate","PointingResizeHandle","_StateNode","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","info","updateCursor","isDragging","editor","inputs","parent","transition","complete","cancel","_createClass","key","value","selected","selectedShapes","cursorType","handle","setCursor","type","rotation","onInteractionEnd","setSelectedTool"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/tools/SelectTool/children/PointingResizeHandle.ts"],"sourcesContent":["import { TLCursorType } from '@tldraw/tlschema'\nimport { TLEventHandlers, TLPointerEventInfo } from '../../../types/event-types'\nimport { TLSelectionHandle } from '../../../types/selection-types'\nimport { StateNode } from '../../StateNode'\n\nexport const CursorTypeMap: Record<TLSelectionHandle, TLCursorType> = {\n\tbottom: 'ns-resize',\n\ttop: 'ns-resize',\n\tleft: 'ew-resize',\n\tright: 'ew-resize',\n\tbottom_left: 'nesw-resize',\n\tbottom_right: 'nwse-resize',\n\ttop_left: 'nwse-resize',\n\ttop_right: 'nesw-resize',\n\tbottom_left_rotate: 'swne-rotate',\n\tbottom_right_rotate: 'senw-rotate',\n\ttop_left_rotate: 'nwse-rotate',\n\ttop_right_rotate: 'nesw-rotate',\n\tmobile_rotate: 'grabbing',\n}\n\ntype PointingResizeHandleInfo = Extract<TLPointerEventInfo, { target: 'selection' }> & {\n\tonInteractionEnd?: string\n}\n\nexport class PointingResizeHandle extends StateNode {\n\tstatic override id = 'pointing_resize_handle'\n\n\tprivate info = {} as PointingResizeHandleInfo\n\n\tprivate updateCursor() {\n\t\tconst selected = this.editor.selectedShapes\n\t\tconst cursorType = CursorTypeMap[this.info.handle!]\n\t\tthis.editor.setCursor({\n\t\t\ttype: cursorType,\n\t\t\trotation: selected.length === 1 ? selected[0].rotation : 0,\n\t\t})\n\t}\n\n\toverride onEnter = (info: PointingResizeHandleInfo) => {\n\t\tthis.info = info\n\t\tthis.updateCursor()\n\t}\n\n\toverride onPointerMove: TLEventHandlers['onPointerMove'] = () => {\n\t\tconst isDragging = this.editor.inputs.isDragging\n\n\t\tif (isDragging) {\n\t\t\tthis.parent.transition('resizing', this.info)\n\t\t}\n\t}\n\n\toverride onPointerUp: TLEventHandlers['onPointerUp'] = () => {\n\t\tthis.complete()\n\t}\n\n\t// override onPinchStart: TLEventHandlers['onPinchStart'] = (info) => {\n\t// \tthis.parent.transition('pinching', info)\n\t// }\n\n\toverride onCancel: TLEventHandlers['onCancel'] = () => {\n\t\tthis.cancel()\n\t}\n\n\toverride onComplete: TLEventHandlers['onComplete'] = () => {\n\t\tthis.cancel()\n\t}\n\n\toverride onInterrupt = () => {\n\t\tthis.cancel()\n\t}\n\n\tprivate complete() {\n\t\tif (this.info.onInteractionEnd) {\n\t\t\tthis.editor.setSelectedTool(this.info.onInteractionEnd, {})\n\t\t} else {\n\t\t\tthis.parent.transition('idle', {})\n\t\t}\n\t}\n\n\tprivate cancel() {\n\t\tif (this.info.onInteractionEnd) {\n\t\t\tthis.editor.setSelectedTool(this.info.onInteractionEnd, {})\n\t\t} else {\n\t\t\tthis.parent.transition('idle', {})\n\t\t}\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}