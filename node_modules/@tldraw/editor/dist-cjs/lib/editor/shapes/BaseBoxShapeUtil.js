"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var BaseBoxShapeUtil_exports = {};
__export(BaseBoxShapeUtil_exports, {
  BaseBoxShapeUtil: () => BaseBoxShapeUtil
});
module.exports = __toCommonJS(BaseBoxShapeUtil_exports);
var import_primitives = require("@tldraw/primitives");
var import_ShapeUtil = require("./ShapeUtil");
var import_resizeBox = require("./shared/resizeBox");
class BaseBoxShapeUtil extends import_ShapeUtil.ShapeUtil {
  getBounds(shape) {
    return new import_primitives.Box2d(0, 0, shape.props.w, shape.props.h);
  }
  getCenter(shape) {
    return new import_primitives.Vec2d(shape.props.w / 2, shape.props.h / 2);
  }
  getOutline(shape) {
    return this.bounds(shape).corners;
  }
  hitTestPoint(shape, point) {
    return (0, import_primitives.pointInPolygon)(point, this.outline(shape));
  }
  hitTestLineSegment(shape, A, B) {
    const outline = this.outline(shape);
    for (let i = 0; i < outline.length; i++) {
      const C = outline[i];
      const D = outline[(i + 1) % outline.length];
      if ((0, import_primitives.linesIntersect)(A, B, C, D))
        return true;
    }
    return false;
  }
  onResize = (shape, info) => {
    return (0, import_resizeBox.resizeBox)(shape, info);
  };
}
//# sourceMappingURL=BaseBoxShapeUtil.js.map
