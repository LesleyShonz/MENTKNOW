{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx } from \"react/jsx-runtime\";\nimport { uniqueId, useEditor } from \"@tldraw/editor\";\nimport { createContext, useCallback, useContext, useState } from \"react\";\nimport { useEvents } from \"./useEventsProvider.mjs\";\nvar DialogsContext = createContext({});\nfunction DialogsProvider(_ref) {\n  var children = _ref.children;\n  var editor = useEditor();\n  var trackEvent = useEvents();\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    dialogs = _useState2[0],\n    setDialogs = _useState2[1];\n  var addDialog = useCallback(function (dialog) {\n    var _dialog$id;\n    var id = (_dialog$id = dialog.id) !== null && _dialog$id !== void 0 ? _dialog$id : uniqueId();\n    setDialogs(function (d) {\n      return [].concat(_toConsumableArray(d.filter(function (m) {\n        return m.id !== dialog.id;\n      })), [_objectSpread(_objectSpread({}, dialog), {}, {\n        id: id\n      })]);\n    });\n    trackEvent(\"open-menu\", {\n      source: \"dialog\",\n      id: id\n    });\n    editor.addOpenMenu(id);\n    return id;\n  }, [editor, trackEvent]);\n  var updateDialog = useCallback(function (id, newDialogData) {\n    setDialogs(function (d) {\n      return d.map(function (m) {\n        if (m.id === id) {\n          return _objectSpread(_objectSpread({}, m), newDialogData);\n        }\n        return m;\n      });\n    });\n    trackEvent(\"open-menu\", {\n      source: \"dialog\",\n      id: id\n    });\n    editor.addOpenMenu(id);\n    return id;\n  }, [editor, trackEvent]);\n  var removeDialog = useCallback(function (id) {\n    setDialogs(function (d) {\n      return d.filter(function (m) {\n        if (m.id === id) {\n          var _m$onClose;\n          (_m$onClose = m.onClose) === null || _m$onClose === void 0 || _m$onClose.call(m);\n          return false;\n        }\n        return true;\n      });\n    });\n    trackEvent(\"close-menu\", {\n      source: \"dialog\",\n      id: id\n    });\n    editor.deleteOpenMenu(id);\n    return id;\n  }, [editor, trackEvent]);\n  var clearDialogs = useCallback(function () {\n    setDialogs(function (d) {\n      d.forEach(function (m) {\n        var _m$onClose2;\n        (_m$onClose2 = m.onClose) === null || _m$onClose2 === void 0 || _m$onClose2.call(m);\n        trackEvent(\"close-menu\", {\n          source: \"dialog\",\n          id: m.id\n        });\n        editor.deleteOpenMenu(m.id);\n      });\n      return [];\n    });\n  }, [editor, trackEvent]);\n  return /* @__PURE__ */jsx(DialogsContext.Provider, {\n    value: {\n      dialogs: dialogs,\n      addDialog: addDialog,\n      removeDialog: removeDialog,\n      clearDialogs: clearDialogs,\n      updateDialog: updateDialog\n    },\n    children: children\n  });\n}\nfunction useDialogs() {\n  var ctx = useContext(DialogsContext);\n  if (!ctx) {\n    throw new Error(\"useDialogs must be used within a DialogsProvider\");\n  }\n  return ctx;\n}\nexport { DialogsContext, DialogsProvider, useDialogs };","map":{"version":3,"names":["jsx","uniqueId","useEditor","createContext","useCallback","useContext","useState","useEvents","DialogsContext","DialogsProvider","_ref","children","editor","trackEvent","_useState","_useState2","_slicedToArray","dialogs","setDialogs","addDialog","dialog","_dialog$id","id","d","concat","_toConsumableArray","filter","m","_objectSpread","source","addOpenMenu","updateDialog","newDialogData","map","removeDialog","_m$onClose","onClose","call","deleteOpenMenu","clearDialogs","forEach","_m$onClose2","Provider","value","useDialogs","ctx","Error"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useDialogsProvider.tsx"],"sourcesContent":["import { Editor, uniqueId, useEditor } from '@tldraw/editor'\nimport { createContext, useCallback, useContext, useState } from 'react'\nimport { useEvents } from './useEventsProvider'\n\n/** @public */\nexport interface TLUiDialogProps {\n\tonClose: () => void\n}\n\n/** @public */\nexport interface TLUiDialog {\n\tid: string\n\tonClose?: () => void\n\tcomponent: (props: TLUiDialogProps) => any\n}\n\n/** @public */\nexport type TLUiDialogsContextType = {\n\taddDialog: (dialog: Omit<TLUiDialog, 'id'> & { id?: string }) => string\n\tremoveDialog: (id: string) => string\n\tupdateDialog: (id: string, newDialogData: Partial<TLUiDialog>) => string\n\tclearDialogs: () => void\n\tdialogs: TLUiDialog[]\n}\n\n/** @internal */\nexport const DialogsContext = createContext({} as TLUiDialogsContextType)\n\n/** @internal */\nexport type DialogsProviderProps = {\n\toverrides?: (editor: Editor) => TLUiDialogsContextType\n\tchildren: any\n}\n\n/** @internal */\nexport function DialogsProvider({ children }: DialogsProviderProps) {\n\tconst editor = useEditor()\n\tconst trackEvent = useEvents()\n\n\tconst [dialogs, setDialogs] = useState<TLUiDialog[]>([])\n\n\tconst addDialog = useCallback(\n\t\t(dialog: Omit<TLUiDialog, 'id'> & { id?: string }) => {\n\t\t\tconst id = dialog.id ?? uniqueId()\n\t\t\tsetDialogs((d) => {\n\t\t\t\treturn [...d.filter((m) => m.id !== dialog.id), { ...dialog, id }]\n\t\t\t})\n\n\t\t\ttrackEvent('open-menu', { source: 'dialog', id })\n\t\t\teditor.addOpenMenu(id)\n\n\t\t\treturn id\n\t\t},\n\t\t[editor, trackEvent]\n\t)\n\n\tconst updateDialog = useCallback(\n\t\t(id: string, newDialogData: Partial<TLUiDialog>) => {\n\t\t\tsetDialogs((d) =>\n\t\t\t\td.map((m) => {\n\t\t\t\t\tif (m.id === id) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t...m,\n\t\t\t\t\t\t\t...newDialogData,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn m\n\t\t\t\t})\n\t\t\t)\n\n\t\t\ttrackEvent('open-menu', { source: 'dialog', id })\n\t\t\teditor.addOpenMenu(id)\n\n\t\t\treturn id\n\t\t},\n\t\t[editor, trackEvent]\n\t)\n\n\tconst removeDialog = useCallback(\n\t\t(id: string) => {\n\t\t\tsetDialogs((d) =>\n\t\t\t\td.filter((m) => {\n\t\t\t\t\tif (m.id === id) {\n\t\t\t\t\t\tm.onClose?.()\n\t\t\t\t\t\treturn false\n\t\t\t\t\t}\n\t\t\t\t\treturn true\n\t\t\t\t})\n\t\t\t)\n\n\t\t\ttrackEvent('close-menu', { source: 'dialog', id })\n\t\t\teditor.deleteOpenMenu(id)\n\n\t\t\treturn id\n\t\t},\n\t\t[editor, trackEvent]\n\t)\n\n\tconst clearDialogs = useCallback(() => {\n\t\tsetDialogs((d) => {\n\t\t\td.forEach((m) => {\n\t\t\t\tm.onClose?.()\n\t\t\t\ttrackEvent('close-menu', { source: 'dialog', id: m.id })\n\t\t\t\teditor.deleteOpenMenu(m.id)\n\t\t\t})\n\t\t\treturn []\n\t\t})\n\t}, [editor, trackEvent])\n\n\treturn (\n\t\t<DialogsContext.Provider\n\t\t\tvalue={{ dialogs, addDialog, removeDialog, clearDialogs, updateDialog }}\n\t\t>\n\t\t\t{children}\n\t\t</DialogsContext.Provider>\n\t)\n}\n\n/** @public */\nexport function useDialogs() {\n\tconst ctx = useContext(DialogsContext)\n\n\tif (!ctx) {\n\t\tthrow new Error('useDialogs must be used within a DialogsProvider')\n\t}\n\n\treturn ctx\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}