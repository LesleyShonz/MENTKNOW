{"ast":null,"code":"import _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { EASINGS, PI, SIN, Vec2d } from \"@tldraw/primitives\";\nvar PEN_EASING = function PEN_EASING(t) {\n  return t * 0.65 + SIN(t * PI / 2) * 0.35;\n};\nvar simulatePressureSettings = function simulatePressureSettings(strokeWidth) {\n  return {\n    size: 1 + strokeWidth,\n    thinning: 0.5,\n    streamline: 0.62 + (1 + strokeWidth) / 8 * 0.06,\n    smoothing: 0.62,\n    easing: EASINGS.easeOutSine,\n    simulatePressure: true\n  };\n};\nvar realPressureSettings = function realPressureSettings(strokeWidth) {\n  return {\n    size: 1 + strokeWidth * 1.2,\n    thinning: 0.62,\n    streamline: 0.62,\n    smoothing: 0.62,\n    simulatePressure: false,\n    easing: PEN_EASING\n  };\n};\nvar solidSettings = function solidSettings(strokeWidth) {\n  return {\n    size: 1 + strokeWidth,\n    thinning: 0,\n    streamline: 0.62 + (1 + strokeWidth) / 8 * 0.06,\n    smoothing: 0.62,\n    simulatePressure: false,\n    easing: EASINGS.linear\n  };\n};\nfunction getHighlightFreehandSettings(_ref) {\n  var strokeWidth = _ref.strokeWidth,\n    showAsComplete = _ref.showAsComplete,\n    isPen = _ref.isPen;\n  return {\n    size: 1 + strokeWidth,\n    thinning: 0.1,\n    streamline: 0.5,\n    smoothing: 0.5,\n    simulatePressure: !isPen,\n    easing: isPen ? PEN_EASING : EASINGS.easeOutSine,\n    last: showAsComplete\n  };\n}\nfunction getFreehandOptions(shapeProps, strokeWidth, forceComplete, forceSolid) {\n  return _objectSpread(_objectSpread({}, forceSolid ? solidSettings(strokeWidth) : shapeProps.dash === \"draw\" ? shapeProps.isPen ? realPressureSettings(strokeWidth) : simulatePressureSettings(strokeWidth) : solidSettings(strokeWidth)), {}, {\n    last: shapeProps.isComplete || forceComplete\n  });\n}\nfunction getPointsFromSegments(segments) {\n  var points = [];\n  var _iterator = _createForOfIteratorHelper(segments),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var segment = _step.value;\n      if (segment.type === \"free\" || segment.points.length < 2) {\n        points.push.apply(points, _toConsumableArray(segment.points.map(Vec2d.Cast)));\n      } else {\n        var pointsToInterpolate = Math.max(4, Math.floor(Vec2d.Dist(segment.points[0], segment.points[1]) / 16));\n        points.push.apply(points, _toConsumableArray(Vec2d.PointsBetween(segment.points[0], segment.points[1], pointsToInterpolate)));\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return points;\n}\nfunction getDrawShapeStrokeDashArray(shape, strokeWidth) {\n  return {\n    draw: \"none\",\n    solid: \"none\",\n    dotted: \"0.1 \".concat(strokeWidth * 2),\n    dashed: \"\".concat(strokeWidth * 2, \" \").concat(strokeWidth * 2)\n  }[shape.props.dash];\n}\nexport { getDrawShapeStrokeDashArray, getFreehandOptions, getHighlightFreehandSettings, getPointsFromSegments };","map":{"version":3,"names":["EASINGS","PI","SIN","Vec2d","PEN_EASING","t","simulatePressureSettings","strokeWidth","size","thinning","streamline","smoothing","easing","easeOutSine","simulatePressure","realPressureSettings","solidSettings","linear","getHighlightFreehandSettings","_ref","showAsComplete","isPen","last","getFreehandOptions","shapeProps","forceComplete","forceSolid","_objectSpread","dash","isComplete","getPointsFromSegments","segments","points","_iterator","_createForOfIteratorHelper","_step","s","n","done","segment","value","type","length","push","apply","_toConsumableArray","map","Cast","pointsToInterpolate","Math","max","floor","Dist","PointsBetween","err","e","f","getDrawShapeStrokeDashArray","shape","draw","solid","dotted","concat","dashed","props"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/draw/getPath.ts"],"sourcesContent":["import { EASINGS, PI, SIN, StrokeOptions, Vec2d } from '@tldraw/primitives'\nimport { TLDefaultDashStyle, TLDrawShape, TLDrawShapeSegment } from '@tldraw/tlschema'\n\nconst PEN_EASING = (t: number) => t * 0.65 + SIN((t * PI) / 2) * 0.35\n\nconst simulatePressureSettings = (strokeWidth: number): StrokeOptions => {\n\treturn {\n\t\tsize: 1 + strokeWidth,\n\t\tthinning: 0.5,\n\t\tstreamline: 0.62 + ((1 + strokeWidth) / 8) * 0.06,\n\t\tsmoothing: 0.62,\n\t\teasing: EASINGS.easeOutSine,\n\t\tsimulatePressure: true,\n\t}\n}\n\nconst realPressureSettings = (strokeWidth: number): StrokeOptions => {\n\treturn {\n\t\tsize: 1 + strokeWidth * 1.2,\n\t\tthinning: 0.62,\n\t\tstreamline: 0.62,\n\t\tsmoothing: 0.62,\n\t\tsimulatePressure: false,\n\t\teasing: PEN_EASING,\n\t}\n}\n\nconst solidSettings = (strokeWidth: number): StrokeOptions => {\n\treturn {\n\t\tsize: 1 + strokeWidth,\n\t\tthinning: 0,\n\t\tstreamline: 0.62 + ((1 + strokeWidth) / 8) * 0.06,\n\t\tsmoothing: 0.62,\n\t\tsimulatePressure: false,\n\t\teasing: EASINGS.linear,\n\t}\n}\n\nexport function getHighlightFreehandSettings({\n\tstrokeWidth,\n\tshowAsComplete,\n\tisPen,\n}: {\n\tstrokeWidth: number\n\tshowAsComplete: boolean\n\tisPen: boolean\n}): StrokeOptions {\n\treturn {\n\t\tsize: 1 + strokeWidth,\n\t\tthinning: 0.1,\n\t\tstreamline: 0.5,\n\t\tsmoothing: 0.5,\n\t\tsimulatePressure: !isPen,\n\t\teasing: isPen ? PEN_EASING : EASINGS.easeOutSine,\n\t\tlast: showAsComplete,\n\t}\n}\n\nexport function getFreehandOptions(\n\tshapeProps: { dash: TLDefaultDashStyle; isPen: boolean; isComplete: boolean },\n\tstrokeWidth: number,\n\tforceComplete: boolean,\n\tforceSolid: boolean\n): StrokeOptions {\n\treturn {\n\t\t...(forceSolid\n\t\t\t? solidSettings(strokeWidth)\n\t\t\t: shapeProps.dash === 'draw'\n\t\t\t? shapeProps.isPen\n\t\t\t\t? realPressureSettings(strokeWidth)\n\t\t\t\t: simulatePressureSettings(strokeWidth)\n\t\t\t: solidSettings(strokeWidth)),\n\t\tlast: shapeProps.isComplete || forceComplete,\n\t}\n}\n\nexport function getPointsFromSegments(segments: TLDrawShapeSegment[]) {\n\tconst points: Vec2d[] = []\n\n\tfor (const segment of segments) {\n\t\tif (segment.type === 'free' || segment.points.length < 2) {\n\t\t\tpoints.push(...segment.points.map(Vec2d.Cast))\n\t\t} else {\n\t\t\tconst pointsToInterpolate = Math.max(\n\t\t\t\t4,\n\t\t\t\tMath.floor(Vec2d.Dist(segment.points[0], segment.points[1]) / 16)\n\t\t\t)\n\t\t\tpoints.push(...Vec2d.PointsBetween(segment.points[0], segment.points[1], pointsToInterpolate))\n\t\t}\n\t}\n\n\treturn points\n}\n\nexport function getDrawShapeStrokeDashArray(shape: TLDrawShape, strokeWidth: number) {\n\treturn {\n\t\tdraw: 'none',\n\t\tsolid: `none`,\n\t\tdotted: `0.1 ${strokeWidth * 2}`,\n\t\tdashed: `${strokeWidth * 2} ${strokeWidth * 2}`,\n\t}[shape.props.dash]\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}