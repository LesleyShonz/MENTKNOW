{
  "version": 3,
  "sources": ["../../../../src/lib/components/Toolbar/ToggleToolLockedButton.tsx"],
  "sourcesContent": ["import { useEditor } from '@tldraw/editor'\nimport classNames from 'classnames'\nimport { useValue } from 'signia-react'\nimport { useBreakpoint } from '../../hooks/useBreakpoint'\nimport { useTranslation } from '../../hooks/useTranslation/useTranslation'\nimport { Button } from '../primitives/Button'\n\ninterface ToggleToolLockedButtonProps {\n\tactiveToolId?: string\n}\n\nconst NOT_LOCKABLE_TOOLS = ['select', 'hand', 'draw', 'eraser', 'text', 'zoom', 'laser']\n\nexport function ToggleToolLockedButton({ activeToolId }: ToggleToolLockedButtonProps) {\n\tconst editor = useEditor()\n\tconst breakpoint = useBreakpoint()\n\tconst msg = useTranslation()\n\n\tconst isToolLocked = useValue('is tool locked', () => editor.instanceState.isToolLocked, [editor])\n\n\tif (!activeToolId || NOT_LOCKABLE_TOOLS.includes(activeToolId)) return null\n\n\treturn (\n\t\t<Button\n\t\t\ttitle={msg('action.toggle-tool-lock')}\n\t\t\tclassName={classNames('tlui-toolbar__lock-button', {\n\t\t\t\t'tlui-toolbar__lock-button__mobile': breakpoint < 5,\n\t\t\t})}\n\t\t\ticon={isToolLocked ? 'lock' : 'unlock'}\n\t\t\tonClick={() => editor.updateInstanceState({ isToolLocked: !isToolLocked })}\n\t\t\tsmallIcon\n\t\t/>\n\t)\n}\n"],
  "mappings": "AAuBE;AAvBF,SAAS,iBAAiB;AAC1B,OAAO,gBAAgB;AACvB,SAAS,gBAAgB;AACzB,SAAS,qBAAqB;AAC9B,SAAS,sBAAsB;AAC/B,SAAS,cAAc;AAMvB,MAAM,qBAAqB,CAAC,UAAU,QAAQ,QAAQ,UAAU,QAAQ,QAAQ,OAAO;AAEhF,SAAS,uBAAuB,EAAE,aAAa,GAAgC;AACrF,QAAM,SAAS,UAAU;AACzB,QAAM,aAAa,cAAc;AACjC,QAAM,MAAM,eAAe;AAE3B,QAAM,eAAe,SAAS,kBAAkB,MAAM,OAAO,cAAc,cAAc,CAAC,MAAM,CAAC;AAEjG,MAAI,CAAC,gBAAgB,mBAAmB,SAAS,YAAY;AAAG,WAAO;AAEvE,SACC;AAAA,IAAC;AAAA;AAAA,MACA,OAAO,IAAI,yBAAyB;AAAA,MACpC,WAAW,WAAW,6BAA6B;AAAA,QAClD,qCAAqC,aAAa;AAAA,MACnD,CAAC;AAAA,MACD,MAAM,eAAe,SAAS;AAAA,MAC9B,SAAS,MAAM,OAAO,oBAAoB,EAAE,cAAc,CAAC,aAAa,CAAC;AAAA,MACzE,WAAS;AAAA;AAAA,EACV;AAEF;",
  "names": []
}
