{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { useEditor } from \"@tldraw/editor\";\nimport { compact } from \"@tldraw/utils\";\nimport React, { useMemo } from \"react\";\nimport { track } from \"signia-react\";\nimport { menuGroup, menuItem } from \"./menuHelpers.mjs\";\nimport { useActions } from \"./useActions.mjs\";\nimport { useTools } from \"./useTools.mjs\";\nvar KeyboardShortcutsSchemaContext = React.createContext({});\nvar KeyboardShortcutsSchemaProvider = track(function KeyboardShortcutsSchemaProvider2(_ref) {\n  var overrides = _ref.overrides,\n    children = _ref.children;\n  var editor = useEditor();\n  var tools = useTools();\n  var actions = useActions();\n  var keyboardShortcutsSchema = useMemo(function () {\n    var keyboardShortcutsSchema2 = compact([menuGroup(\"shortcuts-dialog.tools\", menuItem(actions[\"toggle-tool-lock\"]), menuItem(tools[\"select\"]), menuItem(tools[\"draw\"]), menuItem(tools[\"eraser\"]), menuItem(tools[\"hand\"]), menuItem(tools[\"rectangle\"]), menuItem(tools[\"ellipse\"]), menuItem(tools[\"arrow\"]), menuItem(tools[\"line\"]), menuItem(tools[\"text\"]), menuItem(tools[\"frame\"]), menuItem(tools[\"note\"]), menuItem(tools[\"laser\"])), menuGroup(\"shortcuts-dialog.file\", menuItem(actions[\"insert-media\"]), menuItem(actions[\"print\"])), menuGroup(\"shortcuts-dialog.preferences\", menuItem(actions[\"toggle-dark-mode\"]), menuItem(actions[\"toggle-focus-mode\"]), menuItem(actions[\"toggle-grid\"])), menuGroup(\"shortcuts-dialog.edit\", menuItem(actions[\"undo\"]), menuItem(actions[\"redo\"]), menuItem(actions[\"cut\"]), menuItem(actions[\"copy\"]), menuItem(actions[\"paste\"]), menuItem(actions[\"select-all\"]), menuItem(actions[\"delete\"]), menuItem(actions[\"duplicate\"]), menuItem(actions[\"export-as-svg\"]), menuItem(actions[\"export-as-png\"])), menuGroup(\"shortcuts-dialog.view\", menuItem(actions[\"zoom-in\"]), menuItem(actions[\"zoom-out\"]), menuItem(actions[\"zoom-to-100\"]), menuItem(actions[\"zoom-to-fit\"]), menuItem(actions[\"zoom-to-selection\"])), menuGroup(\"shortcuts-dialog.transform\", menuItem(actions[\"bring-to-front\"]), menuItem(actions[\"bring-forward\"]), menuItem(actions[\"send-backward\"]), menuItem(actions[\"send-to-back\"]), menuItem(actions[\"group\"]), menuItem(actions[\"ungroup\"]), menuItem(actions[\"flip-horizontal\"]), menuItem(actions[\"flip-vertical\"]), menuItem(actions[\"align-top\"]), menuItem(actions[\"align-center-vertical\"]), menuItem(actions[\"align-bottom\"]), menuItem(actions[\"align-left\"]), menuItem(actions[\"align-center-horizontal\"]), menuItem(actions[\"align-right\"]))]);\n    if (overrides) {\n      return overrides(editor, keyboardShortcutsSchema2, {\n        tools: tools,\n        actions: actions\n      });\n    }\n    return keyboardShortcutsSchema2;\n  }, [editor, overrides, actions, tools]);\n  return /* @__PURE__ */jsx(KeyboardShortcutsSchemaContext.Provider, {\n    value: keyboardShortcutsSchema,\n    children: children\n  });\n});\nfunction useKeyboardShortcutsSchema() {\n  var ctx = React.useContext(KeyboardShortcutsSchemaContext);\n  if (!ctx) {\n    throw new Error(\"Shortcuts must be used inside of a ShortcutsProvider.\");\n  }\n  return ctx;\n}\nexport { KeyboardShortcutsSchemaContext, KeyboardShortcutsSchemaProvider, useKeyboardShortcutsSchema };","map":{"version":3,"names":["jsx","useEditor","compact","React","useMemo","track","menuGroup","menuItem","useActions","useTools","KeyboardShortcutsSchemaContext","createContext","KeyboardShortcutsSchemaProvider","KeyboardShortcutsSchemaProvider2","_ref","overrides","children","editor","tools","actions","keyboardShortcutsSchema","keyboardShortcutsSchema2","Provider","value","useKeyboardShortcutsSchema","ctx","useContext","Error"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useKeyboardShortcutsSchema.tsx"],"sourcesContent":["import { Editor, useEditor } from '@tldraw/editor'\nimport { compact } from '@tldraw/utils'\nimport React, { useMemo } from 'react'\nimport { track } from 'signia-react'\nimport { TLUiMenuSchema, menuGroup, menuItem } from './menuHelpers'\nimport { TLUiActionsContextType, useActions } from './useActions'\nimport { TLUiToolsContextType, useTools } from './useTools'\n\n/** @public */\nexport type TLUiKeyboardShortcutsSchemaContextType = TLUiMenuSchema\n\n/** @internal */\nexport const KeyboardShortcutsSchemaContext = React.createContext(\n\t{} as TLUiKeyboardShortcutsSchemaContextType\n)\n\n/** @public */\nexport type TLUiKeyboardShortcutsSchemaProviderProps = {\n\toverrides?: (\n\t\teditor: Editor,\n\t\tschema: TLUiKeyboardShortcutsSchemaContextType,\n\t\tmore: { tools: TLUiToolsContextType; actions: TLUiActionsContextType }\n\t) => TLUiKeyboardShortcutsSchemaContextType\n\tchildren: any\n}\n\n/** @internal */\nexport const KeyboardShortcutsSchemaProvider = track(function KeyboardShortcutsSchemaProvider({\n\toverrides,\n\tchildren,\n}: TLUiKeyboardShortcutsSchemaProviderProps) {\n\tconst editor = useEditor()\n\tconst tools = useTools()\n\tconst actions = useActions()\n\n\tconst keyboardShortcutsSchema = useMemo<TLUiMenuSchema>(() => {\n\t\tconst keyboardShortcutsSchema = compact([\n\t\t\tmenuGroup(\n\t\t\t\t'shortcuts-dialog.tools',\n\t\t\t\tmenuItem(actions['toggle-tool-lock']),\n\t\t\t\tmenuItem(tools['select']),\n\t\t\t\tmenuItem(tools['draw']),\n\t\t\t\tmenuItem(tools['eraser']),\n\t\t\t\tmenuItem(tools['hand']),\n\t\t\t\tmenuItem(tools['rectangle']),\n\t\t\t\tmenuItem(tools['ellipse']),\n\t\t\t\tmenuItem(tools['arrow']),\n\t\t\t\tmenuItem(tools['line']),\n\t\t\t\tmenuItem(tools['text']),\n\t\t\t\tmenuItem(tools['frame']),\n\t\t\t\tmenuItem(tools['note']),\n\t\t\t\tmenuItem(tools['laser'])\n\t\t\t),\n\t\t\tmenuGroup(\n\t\t\t\t'shortcuts-dialog.file',\n\t\t\t\tmenuItem(actions['insert-media']),\n\t\t\t\tmenuItem(actions['print'])\n\t\t\t),\n\t\t\tmenuGroup(\n\t\t\t\t'shortcuts-dialog.preferences',\n\t\t\t\tmenuItem(actions['toggle-dark-mode']),\n\t\t\t\tmenuItem(actions['toggle-focus-mode']),\n\t\t\t\tmenuItem(actions['toggle-grid'])\n\t\t\t),\n\t\t\tmenuGroup(\n\t\t\t\t'shortcuts-dialog.edit',\n\t\t\t\tmenuItem(actions['undo']),\n\t\t\t\tmenuItem(actions['redo']),\n\t\t\t\tmenuItem(actions['cut']),\n\t\t\t\tmenuItem(actions['copy']),\n\t\t\t\tmenuItem(actions['paste']),\n\t\t\t\tmenuItem(actions['select-all']),\n\t\t\t\tmenuItem(actions['delete']),\n\t\t\t\tmenuItem(actions['duplicate']),\n\t\t\t\tmenuItem(actions['export-as-svg']),\n\t\t\t\tmenuItem(actions['export-as-png'])\n\t\t\t),\n\n\t\t\tmenuGroup(\n\t\t\t\t'shortcuts-dialog.view',\n\t\t\t\tmenuItem(actions['zoom-in']),\n\t\t\t\tmenuItem(actions['zoom-out']),\n\t\t\t\tmenuItem(actions['zoom-to-100']),\n\t\t\t\tmenuItem(actions['zoom-to-fit']),\n\t\t\t\tmenuItem(actions['zoom-to-selection'])\n\t\t\t),\n\t\t\tmenuGroup(\n\t\t\t\t'shortcuts-dialog.transform',\n\t\t\t\tmenuItem(actions['bring-to-front']),\n\t\t\t\tmenuItem(actions['bring-forward']),\n\t\t\t\tmenuItem(actions['send-backward']),\n\t\t\t\tmenuItem(actions['send-to-back']),\n\t\t\t\tmenuItem(actions['group']),\n\t\t\t\tmenuItem(actions['ungroup']),\n\t\t\t\tmenuItem(actions['flip-horizontal']),\n\t\t\t\tmenuItem(actions['flip-vertical']),\n\t\t\t\tmenuItem(actions['align-top']),\n\t\t\t\tmenuItem(actions['align-center-vertical']),\n\t\t\t\tmenuItem(actions['align-bottom']),\n\t\t\t\tmenuItem(actions['align-left']),\n\t\t\t\tmenuItem(actions['align-center-horizontal']),\n\t\t\t\tmenuItem(actions['align-right'])\n\t\t\t),\n\t\t])\n\n\t\tif (overrides) {\n\t\t\treturn overrides(editor, keyboardShortcutsSchema, { tools, actions })\n\t\t}\n\n\t\treturn keyboardShortcutsSchema\n\t}, [editor, overrides, actions, tools])\n\n\treturn (\n\t\t<KeyboardShortcutsSchemaContext.Provider value={keyboardShortcutsSchema}>\n\t\t\t{children}\n\t\t</KeyboardShortcutsSchemaContext.Provider>\n\t)\n})\n\n/** @public */\nexport function useKeyboardShortcutsSchema(): TLUiKeyboardShortcutsSchemaContextType {\n\tconst ctx = React.useContext(KeyboardShortcutsSchemaContext)\n\n\tif (!ctx) {\n\t\tthrow new Error('Shortcuts must be used inside of a ShortcutsProvider.')\n\t}\n\n\treturn ctx\n}\n"],"mappings":"AAiHE,SAAAA,GAAA;AAjHF,SAAiBC,SAAA,QAAiB;AAClC,SAASC,OAAA,QAAe;AACxB,OAAOC,KAAA,IAASC,OAAA,QAAe;AAC/B,SAASC,KAAA,QAAa;AACtB,SAAyBC,SAAA,EAAWC,QAAA,QAAgB;AACpD,SAAiCC,UAAA,QAAkB;AACnD,SAA+BC,QAAA,QAAgB;AAMxC,IAAMC,8BAAA,GAAiCP,KAAA,CAAMQ,aAAA,CACnD,CAAC,CACF;AAaO,IAAMC,+BAAA,GAAkCP,KAAA,CAAM,SAASQ,iCAAAC,IAAA,EAGjB;EAAA,IAF5CC,SAAA,GAAAD,IAAA,CAAAC,SAAA;IACAC,QAAA,GAAAF,IAAA,CAAAE,QAAA;EAEA,IAAMC,MAAA,GAAShB,SAAA,CAAU;EACzB,IAAMiB,KAAA,GAAQT,QAAA,CAAS;EACvB,IAAMU,OAAA,GAAUX,UAAA,CAAW;EAE3B,IAAMY,uBAAA,GAA0BhB,OAAA,CAAwB,YAAM;IAC7D,IAAMiB,wBAAA,GAA0BnB,OAAA,CAAQ,CACvCI,SAAA,CACC,0BACAC,QAAA,CAASY,OAAA,CAAQ,kBAAkB,CAAC,GACpCZ,QAAA,CAASW,KAAA,CAAM,QAAQ,CAAC,GACxBX,QAAA,CAASW,KAAA,CAAM,MAAM,CAAC,GACtBX,QAAA,CAASW,KAAA,CAAM,QAAQ,CAAC,GACxBX,QAAA,CAASW,KAAA,CAAM,MAAM,CAAC,GACtBX,QAAA,CAASW,KAAA,CAAM,WAAW,CAAC,GAC3BX,QAAA,CAASW,KAAA,CAAM,SAAS,CAAC,GACzBX,QAAA,CAASW,KAAA,CAAM,OAAO,CAAC,GACvBX,QAAA,CAASW,KAAA,CAAM,MAAM,CAAC,GACtBX,QAAA,CAASW,KAAA,CAAM,MAAM,CAAC,GACtBX,QAAA,CAASW,KAAA,CAAM,OAAO,CAAC,GACvBX,QAAA,CAASW,KAAA,CAAM,MAAM,CAAC,GACtBX,QAAA,CAASW,KAAA,CAAM,OAAO,CAAC,CACxB,GACAZ,SAAA,CACC,yBACAC,QAAA,CAASY,OAAA,CAAQ,cAAc,CAAC,GAChCZ,QAAA,CAASY,OAAA,CAAQ,OAAO,CAAC,CAC1B,GACAb,SAAA,CACC,gCACAC,QAAA,CAASY,OAAA,CAAQ,kBAAkB,CAAC,GACpCZ,QAAA,CAASY,OAAA,CAAQ,mBAAmB,CAAC,GACrCZ,QAAA,CAASY,OAAA,CAAQ,aAAa,CAAC,CAChC,GACAb,SAAA,CACC,yBACAC,QAAA,CAASY,OAAA,CAAQ,MAAM,CAAC,GACxBZ,QAAA,CAASY,OAAA,CAAQ,MAAM,CAAC,GACxBZ,QAAA,CAASY,OAAA,CAAQ,KAAK,CAAC,GACvBZ,QAAA,CAASY,OAAA,CAAQ,MAAM,CAAC,GACxBZ,QAAA,CAASY,OAAA,CAAQ,OAAO,CAAC,GACzBZ,QAAA,CAASY,OAAA,CAAQ,YAAY,CAAC,GAC9BZ,QAAA,CAASY,OAAA,CAAQ,QAAQ,CAAC,GAC1BZ,QAAA,CAASY,OAAA,CAAQ,WAAW,CAAC,GAC7BZ,QAAA,CAASY,OAAA,CAAQ,eAAe,CAAC,GACjCZ,QAAA,CAASY,OAAA,CAAQ,eAAe,CAAC,CAClC,GAEAb,SAAA,CACC,yBACAC,QAAA,CAASY,OAAA,CAAQ,SAAS,CAAC,GAC3BZ,QAAA,CAASY,OAAA,CAAQ,UAAU,CAAC,GAC5BZ,QAAA,CAASY,OAAA,CAAQ,aAAa,CAAC,GAC/BZ,QAAA,CAASY,OAAA,CAAQ,aAAa,CAAC,GAC/BZ,QAAA,CAASY,OAAA,CAAQ,mBAAmB,CAAC,CACtC,GACAb,SAAA,CACC,8BACAC,QAAA,CAASY,OAAA,CAAQ,gBAAgB,CAAC,GAClCZ,QAAA,CAASY,OAAA,CAAQ,eAAe,CAAC,GACjCZ,QAAA,CAASY,OAAA,CAAQ,eAAe,CAAC,GACjCZ,QAAA,CAASY,OAAA,CAAQ,cAAc,CAAC,GAChCZ,QAAA,CAASY,OAAA,CAAQ,OAAO,CAAC,GACzBZ,QAAA,CAASY,OAAA,CAAQ,SAAS,CAAC,GAC3BZ,QAAA,CAASY,OAAA,CAAQ,iBAAiB,CAAC,GACnCZ,QAAA,CAASY,OAAA,CAAQ,eAAe,CAAC,GACjCZ,QAAA,CAASY,OAAA,CAAQ,WAAW,CAAC,GAC7BZ,QAAA,CAASY,OAAA,CAAQ,uBAAuB,CAAC,GACzCZ,QAAA,CAASY,OAAA,CAAQ,cAAc,CAAC,GAChCZ,QAAA,CAASY,OAAA,CAAQ,YAAY,CAAC,GAC9BZ,QAAA,CAASY,OAAA,CAAQ,yBAAyB,CAAC,GAC3CZ,QAAA,CAASY,OAAA,CAAQ,aAAa,CAAC,CAChC,EACA;IAED,IAAIJ,SAAA,EAAW;MACd,OAAOA,SAAA,CAAUE,MAAA,EAAQI,wBAAA,EAAyB;QAAEH,KAAA,EAAAA,KAAA;QAAOC,OAAA,EAAAA;MAAQ,CAAC;IACrE;IAEA,OAAOE,wBAAA;EACR,GAAG,CAACJ,MAAA,EAAQF,SAAA,EAAWI,OAAA,EAASD,KAAK,CAAC;EAEtC,OACC,eAAAlB,GAAA,CAACU,8BAAA,CAA+BY,QAAA,EAA/B;IAAwCC,KAAA,EAAOH,uBAAA;IAC9CJ,QAAA,EAAAA;EAAA,CACF;AAEF,CAAC;AAGM,SAASQ,2BAAA,EAAqE;EACpF,IAAMC,GAAA,GAAMtB,KAAA,CAAMuB,UAAA,CAAWhB,8BAA8B;EAE3D,IAAI,CAACe,GAAA,EAAK;IACT,MAAM,IAAIE,KAAA,CAAM,uDAAuD;EACxE;EAEA,OAAOF,GAAA;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}