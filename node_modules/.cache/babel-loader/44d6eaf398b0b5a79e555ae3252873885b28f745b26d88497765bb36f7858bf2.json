{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nfunction rotateArray(arr, offset) {\n  return arr.map(function (_, i) {\n    return arr[(i + offset) % arr.length];\n  });\n}\nfunction dedupe(input, equals) {\n  var result = [];\n  var _iterator = _createForOfIteratorHelper(input),\n    _step;\n  try {\n    mainLoop: for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var item = _step.value;\n      var _iterator2 = _createForOfIteratorHelper(result),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var existing = _step2.value;\n          if (equals ? equals(item, existing) : item === existing) {\n            continue mainLoop;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      result.push(item);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return result;\n}\nfunction compact(arr) {\n  return arr.filter(function (i) {\n    return i !== void 0 && i !== null;\n  });\n}\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\nfunction minBy(arr, fn) {\n  var min;\n  var minVal = Infinity;\n  var _iterator3 = _createForOfIteratorHelper(arr),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var item = _step3.value;\n      var val = fn(item);\n      if (val < minVal) {\n        min = item;\n        minVal = val;\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return min;\n}\nfunction partition(arr, predicate) {\n  var satisfies = [];\n  var doesNotSatisfy = [];\n  var _iterator4 = _createForOfIteratorHelper(arr),\n    _step4;\n  try {\n    for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n      var item = _step4.value;\n      if (predicate(item)) {\n        satisfies.push(item);\n      } else {\n        doesNotSatisfy.push(item);\n      }\n    }\n  } catch (err) {\n    _iterator4.e(err);\n  } finally {\n    _iterator4.f();\n  }\n  return [satisfies, doesNotSatisfy];\n}\nexport { compact, dedupe, last, minBy, partition, rotateArray };","map":{"version":3,"names":["rotateArray","arr","offset","map","_","i","length","dedupe","input","equals","result","_iterator","_createForOfIteratorHelper","_step","mainLoop","s","n","done","item","value","_iterator2","_step2","existing","err","e","f","push","compact","filter","last","minBy","fn","min","minVal","Infinity","_iterator3","_step3","val","partition","predicate","satisfies","doesNotSatisfy","_iterator4","_step4"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/utils/src/lib/array.ts"],"sourcesContent":["/**\n * Rotate the contents of an array.\n *\n * @public\n */\nexport function rotateArray<T>(arr: T[], offset: number): T[] {\n\treturn arr.map((_, i) => arr[(i + offset) % arr.length])\n}\n\n/**\n * Deduplicate the items in an array\n *\n * @public\n */\nexport function dedupe<T>(input: T[], equals?: (a: any, b: any) => boolean): T[] {\n\tconst result: T[] = []\n\tmainLoop: for (const item of input) {\n\t\tfor (const existing of result) {\n\t\t\tif (equals ? equals(item, existing) : item === existing) {\n\t\t\t\tcontinue mainLoop\n\t\t\t}\n\t\t}\n\t\tresult.push(item)\n\t}\n\treturn result\n}\n\n/** @internal */\nexport function compact<T>(arr: T[]): NonNullable<T>[] {\n\treturn arr.filter((i) => i !== undefined && i !== null) as any\n}\n\n/** @internal */\nexport function last<T>(arr: readonly T[]): T | undefined {\n\treturn arr[arr.length - 1]\n}\n\n/** @internal */\nexport function minBy<T>(arr: readonly T[], fn: (item: T) => number): T | undefined {\n\tlet min: T | undefined\n\tlet minVal = Infinity\n\tfor (const item of arr) {\n\t\tconst val = fn(item)\n\t\tif (val < minVal) {\n\t\t\tmin = item\n\t\t\tminVal = val\n\t\t}\n\t}\n\treturn min\n}\n\n/**\n * Partitions an array into two arrays, one with items that satisfy the predicate, and one with\n * items that do not.\n *\n * @param arr - The array to partition\n * @param predicate - The predicate to use to partition the array\n * @returns A tuple of two arrays, the first one with items that satisfy the predicate and the\n *   second one with the ones that dont\n * @internal\n */\nexport function partition<T>(arr: T[], predicate: (item: T) => boolean): [T[], T[]] {\n\tconst satisfies: T[] = []\n\tconst doesNotSatisfy: T[] = []\n\tfor (const item of arr) {\n\t\tif (predicate(item)) {\n\t\t\tsatisfies.push(item)\n\t\t} else {\n\t\t\tdoesNotSatisfy.push(item)\n\t\t}\n\t}\n\treturn [satisfies, doesNotSatisfy]\n}\n"],"mappings":";AAKO,SAASA,YAAeC,GAAA,EAAUC,MAAA,EAAqB;EAC7D,OAAOD,GAAA,CAAIE,GAAA,CAAI,UAACC,CAAA,EAAGC,CAAA;IAAA,OAAMJ,GAAA,EAAKI,CAAA,GAAIH,MAAA,IAAUD,GAAA,CAAIK,MAAM,CAAC;EAAA;AACxD;AAOO,SAASC,OAAUC,KAAA,EAAYC,MAAA,EAA2C;EAChF,IAAMC,MAAA,GAAc,EAAC;EAAA,IAAAC,SAAA,GAAAC,0BAAA,CACQJ,KAAA;IAAAK,KAAA;EAAA;IAA7BC,QAAA,EAAU,KAAAH,SAAA,CAAAI,CAAA,MAAAF,KAAA,GAAAF,SAAA,CAAAK,CAAA,IAAAC,IAAA,GAA0B;MAAA,IAAfC,IAAA,GAAAL,KAAA,CAAAM,KAAA;MAAA,IAAAC,UAAA,GAAAR,0BAAA,CACGF,MAAA;QAAAW,MAAA;MAAA;QAAvB,KAAAD,UAAA,CAAAL,CAAA,MAAAM,MAAA,GAAAD,UAAA,CAAAJ,CAAA,IAAAC,IAAA,GAA+B;UAAA,IAApBK,QAAA,GAAAD,MAAA,CAAAF,KAAA;UACV,IAAIV,MAAA,GAASA,MAAA,CAAOS,IAAA,EAAMI,QAAQ,IAAIJ,IAAA,KAASI,QAAA,EAAU;YACxD,SAASR,QAAA;UACV;QACD;MAAA,SAAAS,GAAA;QAAAH,UAAA,CAAAI,CAAA,CAAAD,GAAA;MAAA;QAAAH,UAAA,CAAAK,CAAA;MAAA;MACAf,MAAA,CAAOgB,IAAA,CAAKR,IAAI;IACjB;EAAA,SAAAK,GAAA;IAAAZ,SAAA,CAAAa,CAAA,CAAAD,GAAA;EAAA;IAAAZ,SAAA,CAAAc,CAAA;EAAA;EACA,OAAOf,MAAA;AACR;AAGO,SAASiB,QAAW1B,GAAA,EAA4B;EACtD,OAAOA,GAAA,CAAI2B,MAAA,CAAO,UAACvB,CAAA;IAAA,OAAMA,CAAA,KAAM,UAAaA,CAAA,KAAM,IAAI;EAAA;AACvD;AAGO,SAASwB,KAAQ5B,GAAA,EAAkC;EACzD,OAAOA,GAAA,CAAIA,GAAA,CAAIK,MAAA,GAAS,CAAC;AAC1B;AAGO,SAASwB,MAAS7B,GAAA,EAAmB8B,EAAA,EAAwC;EACnF,IAAIC,GAAA;EACJ,IAAIC,MAAA,GAASC,QAAA;EAAA,IAAAC,UAAA,GAAAvB,0BAAA,CACMX,GAAA;IAAAmC,MAAA;EAAA;IAAnB,KAAAD,UAAA,CAAApB,CAAA,MAAAqB,MAAA,GAAAD,UAAA,CAAAnB,CAAA,IAAAC,IAAA,GAAwB;MAAA,IAAbC,IAAA,GAAAkB,MAAA,CAAAjB,KAAA;MACV,IAAMkB,GAAA,GAAMN,EAAA,CAAGb,IAAI;MACnB,IAAImB,GAAA,GAAMJ,MAAA,EAAQ;QACjBD,GAAA,GAAMd,IAAA;QACNe,MAAA,GAASI,GAAA;MACV;IACD;EAAA,SAAAd,GAAA;IAAAY,UAAA,CAAAX,CAAA,CAAAD,GAAA;EAAA;IAAAY,UAAA,CAAAV,CAAA;EAAA;EACA,OAAOO,GAAA;AACR;AAYO,SAASM,UAAarC,GAAA,EAAUsC,SAAA,EAA6C;EACnF,IAAMC,SAAA,GAAiB,EAAC;EACxB,IAAMC,cAAA,GAAsB,EAAC;EAAA,IAAAC,UAAA,GAAA9B,0BAAA,CACVX,GAAA;IAAA0C,MAAA;EAAA;IAAnB,KAAAD,UAAA,CAAA3B,CAAA,MAAA4B,MAAA,GAAAD,UAAA,CAAA1B,CAAA,IAAAC,IAAA,GAAwB;MAAA,IAAbC,IAAA,GAAAyB,MAAA,CAAAxB,KAAA;MACV,IAAIoB,SAAA,CAAUrB,IAAI,GAAG;QACpBsB,SAAA,CAAUd,IAAA,CAAKR,IAAI;MACpB,OAAO;QACNuB,cAAA,CAAef,IAAA,CAAKR,IAAI;MACzB;IACD;EAAA,SAAAK,GAAA;IAAAmB,UAAA,CAAAlB,CAAA,CAAAD,GAAA;EAAA;IAAAmB,UAAA,CAAAjB,CAAA;EAAA;EACA,OAAO,CAACe,SAAA,EAAWC,cAAc;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}