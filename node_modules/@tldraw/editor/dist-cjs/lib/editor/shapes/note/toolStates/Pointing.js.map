{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/shapes/note/toolStates/Pointing.ts"],
  "sourcesContent": ["import { TLNoteShape, createShapeId } from '@tldraw/tlschema'\nimport { NoteShapeUtil } from '../../../shapes/note/NoteShapeUtil'\nimport { StateNode } from '../../../tools/StateNode'\nimport { TLEventHandlers, TLInterruptEvent, TLPointerEventInfo } from '../../../types/event-types'\n\nexport class Pointing extends StateNode {\n\tstatic override id = 'pointing'\n\n\tdragged = false\n\n\tinfo = {} as TLPointerEventInfo\n\n\twasFocusedOnEnter = false\n\n\tmarkPointId = 'creating'\n\n\tonEnter = () => {\n\t\tthis.wasFocusedOnEnter = !this.editor.isMenuOpen\n\t}\n\n\tonPointerMove: TLEventHandlers['onPointerMove'] = (info) => {\n\t\tif (this.editor.inputs.isDragging) {\n\t\t\tthis.editor.mark(this.markPointId)\n\t\t\tconst shape = this.createShape()\n\t\t\tif (!shape) return\n\n\t\t\tthis.editor.setSelectedTool('select.translating', {\n\t\t\t\t...info,\n\t\t\t\ttarget: 'shape',\n\t\t\t\tshape,\n\t\t\t\tisCreating: true,\n\t\t\t\teditAfterComplete: true,\n\t\t\t\tonInteractionEnd: 'note',\n\t\t\t})\n\t\t}\n\t}\n\n\tonPointerUp: TLEventHandlers['onPointerUp'] = () => {\n\t\tthis.complete()\n\t}\n\n\tonInterrupt: TLInterruptEvent = () => {\n\t\tthis.cancel()\n\t}\n\n\tonComplete: TLEventHandlers['onComplete'] = () => {\n\t\tthis.complete()\n\t}\n\n\tonCancel: TLEventHandlers['onCancel'] = () => {\n\t\tthis.cancel()\n\t}\n\n\tprivate complete() {\n\t\tif (!this.wasFocusedOnEnter) {\n\t\t\treturn\n\t\t}\n\n\t\tthis.editor.mark(this.markPointId)\n\t\tconst shape = this.createShape()\n\n\t\tif (this.editor.instanceState.isToolLocked) {\n\t\t\tthis.parent.transition('idle', {})\n\t\t} else {\n\t\t\tif (!shape) return\n\n\t\t\tthis.editor.setEditingId(shape.id)\n\t\t\tthis.editor.setSelectedTool('select.editing_shape', {\n\t\t\t\t...this.info,\n\t\t\t\ttarget: 'shape',\n\t\t\t\tshape,\n\t\t\t})\n\t\t}\n\t}\n\n\tprivate cancel() {\n\t\tthis.editor.bailToMark(this.markPointId)\n\t\tthis.parent.transition('idle', this.info)\n\t}\n\n\tprivate createShape() {\n\t\tconst {\n\t\t\tinputs: { originPagePoint },\n\t\t} = this.editor\n\n\t\tconst id = createShapeId()\n\n\t\tthis.editor.createShapes(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tid,\n\t\t\t\t\ttype: 'note',\n\t\t\t\t\tx: originPagePoint.x,\n\t\t\t\t\ty: originPagePoint.y,\n\t\t\t\t},\n\t\t\t],\n\t\t\ttrue\n\t\t)\n\n\t\tconst util = this.editor.getShapeUtil(NoteShapeUtil)\n\t\tconst shape = this.editor.getShapeById<TLNoteShape>(id)!\n\t\tconst bounds = util.bounds(shape)\n\n\t\t// Center the text around the created point\n\t\tthis.editor.updateShapes([\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\ttype: 'note',\n\t\t\t\tx: shape.x - bounds.width / 2,\n\t\t\t\ty: shape.y - bounds.height / 2,\n\t\t\t},\n\t\t])\n\n\t\treturn this.editor.getShapeById(id)\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA2C;AAC3C,2BAA8B;AAC9B,uBAA0B;AAGnB,MAAM,iBAAiB,2BAAU;AAAA,EACvC,OAAgB,KAAK;AAAA,EAErB,UAAU;AAAA,EAEV,OAAO,CAAC;AAAA,EAER,oBAAoB;AAAA,EAEpB,cAAc;AAAA,EAEd,UAAU,MAAM;AACf,SAAK,oBAAoB,CAAC,KAAK,OAAO;AAAA,EACvC;AAAA,EAEA,gBAAkD,CAAC,SAAS;AAC3D,QAAI,KAAK,OAAO,OAAO,YAAY;AAClC,WAAK,OAAO,KAAK,KAAK,WAAW;AACjC,YAAM,QAAQ,KAAK,YAAY;AAC/B,UAAI,CAAC;AAAO;AAEZ,WAAK,OAAO,gBAAgB,sBAAsB;AAAA,QACjD,GAAG;AAAA,QACH,QAAQ;AAAA,QACR;AAAA,QACA,YAAY;AAAA,QACZ,mBAAmB;AAAA,QACnB,kBAAkB;AAAA,MACnB,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEA,cAA8C,MAAM;AACnD,SAAK,SAAS;AAAA,EACf;AAAA,EAEA,cAAgC,MAAM;AACrC,SAAK,OAAO;AAAA,EACb;AAAA,EAEA,aAA4C,MAAM;AACjD,SAAK,SAAS;AAAA,EACf;AAAA,EAEA,WAAwC,MAAM;AAC7C,SAAK,OAAO;AAAA,EACb;AAAA,EAEQ,WAAW;AAClB,QAAI,CAAC,KAAK,mBAAmB;AAC5B;AAAA,IACD;AAEA,SAAK,OAAO,KAAK,KAAK,WAAW;AACjC,UAAM,QAAQ,KAAK,YAAY;AAE/B,QAAI,KAAK,OAAO,cAAc,cAAc;AAC3C,WAAK,OAAO,WAAW,QAAQ,CAAC,CAAC;AAAA,IAClC,OAAO;AACN,UAAI,CAAC;AAAO;AAEZ,WAAK,OAAO,aAAa,MAAM,EAAE;AACjC,WAAK,OAAO,gBAAgB,wBAAwB;AAAA,QACnD,GAAG,KAAK;AAAA,QACR,QAAQ;AAAA,QACR;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD;AAAA,EAEQ,SAAS;AAChB,SAAK,OAAO,WAAW,KAAK,WAAW;AACvC,SAAK,OAAO,WAAW,QAAQ,KAAK,IAAI;AAAA,EACzC;AAAA,EAEQ,cAAc;AACrB,UAAM;AAAA,MACL,QAAQ,EAAE,gBAAgB;AAAA,IAC3B,IAAI,KAAK;AAET,UAAM,SAAK,+BAAc;AAEzB,SAAK,OAAO;AAAA,MACX;AAAA,QACC;AAAA,UACC;AAAA,UACA,MAAM;AAAA,UACN,GAAG,gBAAgB;AAAA,UACnB,GAAG,gBAAgB;AAAA,QACpB;AAAA,MACD;AAAA,MACA;AAAA,IACD;AAEA,UAAM,OAAO,KAAK,OAAO,aAAa,kCAAa;AACnD,UAAM,QAAQ,KAAK,OAAO,aAA0B,EAAE;AACtD,UAAM,SAAS,KAAK,OAAO,KAAK;AAGhC,SAAK,OAAO,aAAa;AAAA,MACxB;AAAA,QACC;AAAA,QACA,MAAM;AAAA,QACN,GAAG,MAAM,IAAI,OAAO,QAAQ;AAAA,QAC5B,GAAG,MAAM,IAAI,OAAO,SAAS;AAAA,MAC9B;AAAA,IACD,CAAC;AAED,WAAO,KAAK,OAAO,aAAa,EAAE;AAAA,EACnC;AACD;",
  "names": []
}
