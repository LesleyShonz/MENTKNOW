"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/useValue.ts
var useValue_exports = {};
__export(useValue_exports, {
  useValue: () => useValue
});
module.exports = __toCommonJS(useValue_exports);
var import_react = require("react");
var import_signia = require("signia");
function useValue() {
  const args = arguments;
  const deps = args.length === 3 ? args[2] : [args[0]];
  const name = args.length === 3 ? args[0] : `useValue(${args[0].name})`;
  const $val = (0, import_react.useMemo)(() => {
    if (args.length === 1) {
      return args[0];
    }
    return (0, import_signia.computed)(name, args[1]);
  }, deps);
  const { subscribe, getSnapshot } = (0, import_react.useMemo)(() => {
    return {
      subscribe: (listen) => {
        return (0, import_signia.react)(`useValue(${name})`, () => {
          $val.value;
          listen();
        });
      },
      getSnapshot: () => $val.value
    };
  }, [$val]);
  return (0, import_react.useSyncExternalStore)(subscribe, getSnapshot, getSnapshot);
}
//# sourceMappingURL=useValue.cjs.map
