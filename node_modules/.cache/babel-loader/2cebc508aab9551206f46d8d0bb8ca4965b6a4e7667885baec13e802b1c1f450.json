{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { BookmarkShapeUtil, EmbedShapeUtil, getEmbedInfo, useEditor } from \"@tldraw/editor\";\nimport React, { useMemo } from \"react\";\nimport { track, useValue } from \"signia-react\";\nimport { compactMenuItems, menuCustom, menuGroup, menuItem, menuSubmenu, showMenuPaste, useAllowGroup, useAllowUngroup, useThreeStackableItems } from \"./menuHelpers.mjs\";\nimport { useActions } from \"./useActions.mjs\";\nimport { useHasLinkShapeSelected } from \"./useHasLinkShapeSelected.mjs\";\nimport { useOnlyFlippableShape } from \"./useOnlyFlippableShape.mjs\";\nimport { useShowAutoSizeToggle } from \"./useShowAutoSizeToggle.mjs\";\nvar TLUiContextMenuSchemaContext = React.createContext({});\nvar TLUiContextMenuSchemaProvider = track(function TLUiContextMenuSchemaProvider2(_ref) {\n  var _window$navigator$cli;\n  var overrides = _ref.overrides,\n    children = _ref.children;\n  var editor = useEditor();\n  var actions = useActions();\n  var showAutoSizeToggle = useShowAutoSizeToggle();\n  var onlyFlippableShapeSelected = useOnlyFlippableShape();\n  var selectedCount = editor.selectedIds.length;\n  var oneSelected = selectedCount > 0;\n  var oneEmbedSelected = useValue(\"oneEmbedSelected\", function () {\n    if (editor.selectedIds.length !== 1) return false;\n    return editor.selectedIds.some(function (selectedId) {\n      var shape = editor.getShapeById(selectedId);\n      return shape && editor.isShapeOfType(shape, EmbedShapeUtil) && shape.props.url;\n    });\n  }, []);\n  var oneEmbeddableBookmarkSelected = useValue(\"oneEmbeddableBookmarkSelected\", function () {\n    if (editor.selectedIds.length !== 1) return false;\n    return editor.selectedIds.some(function (selectedId) {\n      var shape = editor.getShapeById(selectedId);\n      return shape && editor.isShapeOfType(shape, BookmarkShapeUtil) && shape.props.url && getEmbedInfo(shape.props.url);\n    });\n  }, []);\n  var twoSelected = selectedCount > 1;\n  var threeSelected = selectedCount > 2;\n  var threeStackableItems = useThreeStackableItems();\n  var atLeastOneShapeOnPage = useValue(\"atLeastOneShapeOnPage\", function () {\n    return editor.currentPageShapeIds.size > 0;\n  }, []);\n  var isTransparentBg = useValue(\"isTransparentBg\", function () {\n    return editor.instanceState.exportBackground;\n  }, []);\n  var allowGroup = useAllowGroup();\n  var allowUngroup = useAllowUngroup();\n  var hasClipboardWrite = Boolean((_window$navigator$cli = window.navigator.clipboard) === null || _window$navigator$cli === void 0 ? void 0 : _window$navigator$cli.write);\n  var showEditLink = useHasLinkShapeSelected();\n  var onlySelectedShape = editor.onlySelectedShape;\n  var isShapeLocked = onlySelectedShape && editor.isShapeOrAncestorLocked(onlySelectedShape);\n  var contextTLUiMenuSchema = useMemo(function () {\n    var contextTLUiMenuSchema2 = compactMenuItems([menuGroup(\"selection\", oneEmbedSelected && menuItem(actions[\"open-embed-link\"]), oneEmbedSelected && !isShapeLocked && menuItem(actions[\"convert-to-bookmark\"]), oneEmbeddableBookmarkSelected && menuItem(actions[\"convert-to-embed\"]), showAutoSizeToggle && menuItem(actions[\"toggle-auto-size\"]), showEditLink && !isShapeLocked && menuItem(actions[\"edit-link\"]), oneSelected && !isShapeLocked && menuItem(actions[\"duplicate\"]), allowGroup && !isShapeLocked && menuItem(actions[\"group\"]), allowUngroup && !isShapeLocked && menuItem(actions[\"ungroup\"]), oneSelected && menuItem(actions[\"toggle-lock\"])), menuGroup(\"modify\", (twoSelected || onlyFlippableShapeSelected) && menuSubmenu(\"arrange\", \"context-menu.arrange\", twoSelected && menuGroup(\"align\", menuItem(actions[\"align-left\"]), menuItem(actions[\"align-center-horizontal\"]), menuItem(actions[\"align-right\"]), menuItem(actions[\"align-top\"]), menuItem(actions[\"align-center-vertical\"]), menuItem(actions[\"align-bottom\"])), threeSelected && menuGroup(\"distribute\", menuItem(actions[\"distribute-horizontal\"]), menuItem(actions[\"distribute-vertical\"])), twoSelected && menuGroup(\"stretch\", menuItem(actions[\"stretch-horizontal\"]), menuItem(actions[\"stretch-vertical\"])), onlyFlippableShapeSelected && !isShapeLocked && menuGroup(\"flip\", menuItem(actions[\"flip-horizontal\"]), menuItem(actions[\"flip-vertical\"])), twoSelected && menuGroup(\"order\", menuItem(actions[\"pack\"], {\n      disabled: !twoSelected\n    }), threeStackableItems && menuItem(actions[\"stack-vertical\"]), threeStackableItems && menuItem(actions[\"stack-horizontal\"]))), oneSelected && !isShapeLocked && menuSubmenu(\"reorder\", \"context-menu.reorder\", menuGroup(\"reorder\", menuItem(actions[\"bring-to-front\"]), menuItem(actions[\"bring-forward\"]), menuItem(actions[\"send-backward\"]), menuItem(actions[\"send-to-back\"]))), oneSelected && !isShapeLocked && menuCustom(\"MOVE_TO_PAGE_MENU\", {\n      readonlyOk: false\n    })), menuGroup(\"clipboard-group\", oneSelected && !isShapeLocked && menuItem(actions[\"cut\"]), oneSelected && menuItem(actions[\"copy\"]), showMenuPaste && menuItem(actions[\"paste\"])), atLeastOneShapeOnPage && menuGroup(\"conversions\", menuSubmenu(\"copy-as\", \"context-menu.copy-as\", menuGroup(\"copy-as-group\", menuItem(actions[\"copy-as-svg\"]), hasClipboardWrite && menuItem(actions[\"copy-as-png\"]), menuItem(actions[\"copy-as-json\"])), menuGroup(\"export-bg\", menuItem(actions[\"toggle-transparent\"], {\n      checked: !isTransparentBg\n    }))), menuSubmenu(\"export-as\", \"context-menu.export-as\", menuGroup(\"export-as-group\", menuItem(actions[\"export-as-svg\"]), menuItem(actions[\"export-as-png\"]), menuItem(actions[\"export-as-json\"])), menuGroup(\"export-bg,\", menuItem(actions[\"toggle-transparent\"], {\n      checked: !isTransparentBg\n    })))), atLeastOneShapeOnPage && menuGroup(\"set-selection-group\", menuItem(actions[\"select-all\"]), oneSelected && menuItem(actions[\"select-none\"])), oneSelected && !isShapeLocked && menuGroup(\"delete-group\", menuItem(actions[\"delete\"]))]);\n    if (overrides) {\n      contextTLUiMenuSchema2 = overrides(editor, contextTLUiMenuSchema2, {\n        actions: actions,\n        oneSelected: oneSelected,\n        twoSelected: twoSelected,\n        threeSelected: threeSelected,\n        showAutoSizeToggle: showAutoSizeToggle,\n        showUngroup: allowUngroup,\n        onlyFlippableShapeSelected: onlyFlippableShapeSelected\n      });\n    }\n    return contextTLUiMenuSchema2;\n  }, [editor, overrides, actions, oneSelected, twoSelected, threeSelected, showAutoSizeToggle, onlyFlippableShapeSelected, atLeastOneShapeOnPage, threeStackableItems, allowGroup, allowUngroup, hasClipboardWrite, showEditLink, oneEmbedSelected, oneEmbeddableBookmarkSelected, isTransparentBg, isShapeLocked]);\n  return /* @__PURE__ */jsx(TLUiContextMenuSchemaContext.Provider, {\n    value: contextTLUiMenuSchema,\n    children: children\n  });\n});\nfunction useContextMenuSchema() {\n  var ctx = React.useContext(TLUiContextMenuSchemaContext);\n  if (!ctx) {\n    throw new Error(\"useContextMenuSchema must be used inside of a TLUiContextMenuSchemaProvider.\");\n  }\n  return ctx;\n}\nexport { TLUiContextMenuSchemaContext, TLUiContextMenuSchemaProvider, useContextMenuSchema };","map":{"version":3,"names":["jsx","BookmarkShapeUtil","EmbedShapeUtil","getEmbedInfo","useEditor","React","useMemo","track","useValue","compactMenuItems","menuCustom","menuGroup","menuItem","menuSubmenu","showMenuPaste","useAllowGroup","useAllowUngroup","useThreeStackableItems","useActions","useHasLinkShapeSelected","useOnlyFlippableShape","useShowAutoSizeToggle","TLUiContextMenuSchemaContext","createContext","TLUiContextMenuSchemaProvider","TLUiContextMenuSchemaProvider2","_ref","_window$navigator$cli","overrides","children","editor","actions","showAutoSizeToggle","onlyFlippableShapeSelected","selectedCount","selectedIds","length","oneSelected","oneEmbedSelected","some","selectedId","shape","getShapeById","isShapeOfType","props","url","oneEmbeddableBookmarkSelected","twoSelected","threeSelected","threeStackableItems","atLeastOneShapeOnPage","currentPageShapeIds","size","isTransparentBg","instanceState","exportBackground","allowGroup","allowUngroup","hasClipboardWrite","Boolean","window","navigator","clipboard","write","showEditLink","onlySelectedShape","isShapeLocked","isShapeOrAncestorLocked","contextTLUiMenuSchema","contextTLUiMenuSchema2","disabled","readonlyOk","checked","showUngroup","Provider","value","useContextMenuSchema","ctx","useContext","Error"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useContextMenuSchema.tsx"],"sourcesContent":["import { BookmarkShapeUtil, Editor, EmbedShapeUtil, getEmbedInfo, useEditor } from '@tldraw/editor'\nimport React, { useMemo } from 'react'\nimport { track, useValue } from 'signia-react'\nimport {\n\tTLUiMenuSchema,\n\tcompactMenuItems,\n\tmenuCustom,\n\tmenuGroup,\n\tmenuItem,\n\tmenuSubmenu,\n\tshowMenuPaste,\n\tuseAllowGroup,\n\tuseAllowUngroup,\n\tuseThreeStackableItems,\n} from './menuHelpers'\nimport { useActions } from './useActions'\nimport { useHasLinkShapeSelected } from './useHasLinkShapeSelected'\nimport { useOnlyFlippableShape } from './useOnlyFlippableShape'\nimport { useShowAutoSizeToggle } from './useShowAutoSizeToggle'\n\n/** @public */\nexport type TLUiContextTTLUiMenuSchemaContextType = TLUiMenuSchema\n\n/** @internal */\nexport const TLUiContextMenuSchemaContext = React.createContext(\n\t{} as TLUiContextTTLUiMenuSchemaContextType\n)\n\n/** @public */\nexport type TLUiContextMenuSchemaProviderProps = {\n\toverrides?: (\n\t\teditor: Editor,\n\t\tschema: TLUiContextTTLUiMenuSchemaContextType,\n\t\thelpers: {\n\t\t\tactions: ReturnType<typeof useActions>\n\t\t\toneSelected: boolean\n\t\t\ttwoSelected: boolean\n\t\t\tthreeSelected: boolean\n\t\t\tshowAutoSizeToggle: boolean\n\t\t\tshowUngroup: boolean\n\t\t\tonlyFlippableShapeSelected: boolean\n\t\t}\n\t) => TLUiContextTTLUiMenuSchemaContextType\n\tchildren: any\n}\n\n/** @internal */\nexport const TLUiContextMenuSchemaProvider = track(function TLUiContextMenuSchemaProvider({\n\toverrides,\n\tchildren,\n}: TLUiContextMenuSchemaProviderProps) {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\n\tconst showAutoSizeToggle = useShowAutoSizeToggle()\n\n\tconst onlyFlippableShapeSelected = useOnlyFlippableShape()\n\n\tconst selectedCount = editor.selectedIds.length\n\n\tconst oneSelected = selectedCount > 0\n\tconst oneEmbedSelected = useValue(\n\t\t'oneEmbedSelected',\n\t\t() => {\n\t\t\tif (editor.selectedIds.length !== 1) return false\n\t\t\treturn editor.selectedIds.some((selectedId) => {\n\t\t\t\tconst shape = editor.getShapeById(selectedId)\n\t\t\t\treturn shape && editor.isShapeOfType(shape, EmbedShapeUtil) && shape.props.url\n\t\t\t})\n\t\t},\n\t\t[]\n\t)\n\tconst oneEmbeddableBookmarkSelected = useValue(\n\t\t'oneEmbeddableBookmarkSelected',\n\t\t() => {\n\t\t\tif (editor.selectedIds.length !== 1) return false\n\t\t\treturn editor.selectedIds.some((selectedId) => {\n\t\t\t\tconst shape = editor.getShapeById(selectedId)\n\t\t\t\treturn (\n\t\t\t\t\tshape &&\n\t\t\t\t\teditor.isShapeOfType(shape, BookmarkShapeUtil) &&\n\t\t\t\t\tshape.props.url &&\n\t\t\t\t\tgetEmbedInfo(shape.props.url)\n\t\t\t\t)\n\t\t\t})\n\t\t},\n\t\t[]\n\t)\n\n\tconst twoSelected = selectedCount > 1\n\tconst threeSelected = selectedCount > 2\n\tconst threeStackableItems = useThreeStackableItems()\n\tconst atLeastOneShapeOnPage = useValue(\n\t\t'atLeastOneShapeOnPage',\n\t\t() => editor.currentPageShapeIds.size > 0,\n\t\t[]\n\t)\n\tconst isTransparentBg = useValue(\n\t\t'isTransparentBg',\n\t\t() => editor.instanceState.exportBackground,\n\t\t[]\n\t)\n\tconst allowGroup = useAllowGroup()\n\tconst allowUngroup = useAllowUngroup()\n\tconst hasClipboardWrite = Boolean(window.navigator.clipboard?.write)\n\tconst showEditLink = useHasLinkShapeSelected()\n\tconst { onlySelectedShape } = editor\n\tconst isShapeLocked = onlySelectedShape && editor.isShapeOrAncestorLocked(onlySelectedShape)\n\n\tconst contextTLUiMenuSchema = useMemo<TLUiMenuSchema>(() => {\n\t\tlet contextTLUiMenuSchema: TLUiContextTTLUiMenuSchemaContextType = compactMenuItems([\n\t\t\tmenuGroup(\n\t\t\t\t'selection',\n\t\t\t\toneEmbedSelected && menuItem(actions['open-embed-link']),\n\t\t\t\toneEmbedSelected && !isShapeLocked && menuItem(actions['convert-to-bookmark']),\n\t\t\t\toneEmbeddableBookmarkSelected && menuItem(actions['convert-to-embed']),\n\t\t\t\tshowAutoSizeToggle && menuItem(actions['toggle-auto-size']),\n\t\t\t\tshowEditLink && !isShapeLocked && menuItem(actions['edit-link']),\n\t\t\t\toneSelected && !isShapeLocked && menuItem(actions['duplicate']),\n\t\t\t\tallowGroup && !isShapeLocked && menuItem(actions['group']),\n\t\t\t\tallowUngroup && !isShapeLocked && menuItem(actions['ungroup']),\n\t\t\t\toneSelected && menuItem(actions['toggle-lock'])\n\t\t\t),\n\t\t\tmenuGroup(\n\t\t\t\t'modify',\n\t\t\t\t(twoSelected || onlyFlippableShapeSelected) &&\n\t\t\t\t\tmenuSubmenu(\n\t\t\t\t\t\t'arrange',\n\t\t\t\t\t\t'context-menu.arrange',\n\t\t\t\t\t\ttwoSelected &&\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'align',\n\t\t\t\t\t\t\t\tmenuItem(actions['align-left']),\n\t\t\t\t\t\t\t\tmenuItem(actions['align-center-horizontal']),\n\t\t\t\t\t\t\t\tmenuItem(actions['align-right']),\n\t\t\t\t\t\t\t\tmenuItem(actions['align-top']),\n\t\t\t\t\t\t\t\tmenuItem(actions['align-center-vertical']),\n\t\t\t\t\t\t\t\tmenuItem(actions['align-bottom'])\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tthreeSelected &&\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'distribute',\n\t\t\t\t\t\t\t\tmenuItem(actions['distribute-horizontal']),\n\t\t\t\t\t\t\t\tmenuItem(actions['distribute-vertical'])\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\ttwoSelected &&\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'stretch',\n\t\t\t\t\t\t\t\tmenuItem(actions['stretch-horizontal']),\n\t\t\t\t\t\t\t\tmenuItem(actions['stretch-vertical'])\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\tonlyFlippableShapeSelected &&\n\t\t\t\t\t\t\t!isShapeLocked &&\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'flip',\n\t\t\t\t\t\t\t\tmenuItem(actions['flip-horizontal']),\n\t\t\t\t\t\t\t\tmenuItem(actions['flip-vertical'])\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\ttwoSelected &&\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'order',\n\t\t\t\t\t\t\t\tmenuItem(actions['pack'], { disabled: !twoSelected }),\n\t\t\t\t\t\t\t\tthreeStackableItems && menuItem(actions['stack-vertical']),\n\t\t\t\t\t\t\t\tthreeStackableItems && menuItem(actions['stack-horizontal'])\n\t\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\toneSelected &&\n\t\t\t\t\t!isShapeLocked &&\n\t\t\t\t\tmenuSubmenu(\n\t\t\t\t\t\t'reorder',\n\t\t\t\t\t\t'context-menu.reorder',\n\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t'reorder',\n\t\t\t\t\t\t\tmenuItem(actions['bring-to-front']),\n\t\t\t\t\t\t\tmenuItem(actions['bring-forward']),\n\t\t\t\t\t\t\tmenuItem(actions['send-backward']),\n\t\t\t\t\t\t\tmenuItem(actions['send-to-back'])\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\toneSelected && !isShapeLocked && menuCustom('MOVE_TO_PAGE_MENU', { readonlyOk: false })\n\t\t\t),\n\t\t\tmenuGroup(\n\t\t\t\t'clipboard-group',\n\t\t\t\toneSelected && !isShapeLocked && menuItem(actions['cut']),\n\t\t\t\toneSelected && menuItem(actions['copy']),\n\t\t\t\tshowMenuPaste && menuItem(actions['paste'])\n\t\t\t),\n\t\t\tatLeastOneShapeOnPage &&\n\t\t\t\tmenuGroup(\n\t\t\t\t\t'conversions',\n\t\t\t\t\tmenuSubmenu(\n\t\t\t\t\t\t'copy-as',\n\t\t\t\t\t\t'context-menu.copy-as',\n\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t'copy-as-group',\n\t\t\t\t\t\t\tmenuItem(actions['copy-as-svg']),\n\t\t\t\t\t\t\thasClipboardWrite && menuItem(actions['copy-as-png']),\n\t\t\t\t\t\t\tmenuItem(actions['copy-as-json'])\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t'export-bg',\n\t\t\t\t\t\t\tmenuItem(actions['toggle-transparent'], { checked: !isTransparentBg })\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tmenuSubmenu(\n\t\t\t\t\t\t'export-as',\n\t\t\t\t\t\t'context-menu.export-as',\n\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t'export-as-group',\n\t\t\t\t\t\t\tmenuItem(actions['export-as-svg']),\n\t\t\t\t\t\t\tmenuItem(actions['export-as-png']),\n\t\t\t\t\t\t\tmenuItem(actions['export-as-json'])\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t'export-bg,',\n\t\t\t\t\t\t\tmenuItem(actions['toggle-transparent'], { checked: !isTransparentBg })\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\tatLeastOneShapeOnPage &&\n\t\t\t\tmenuGroup(\n\t\t\t\t\t'set-selection-group',\n\t\t\t\t\tmenuItem(actions['select-all']),\n\t\t\t\t\toneSelected && menuItem(actions['select-none'])\n\t\t\t\t),\n\t\t\toneSelected && !isShapeLocked && menuGroup('delete-group', menuItem(actions['delete'])),\n\t\t])\n\n\t\tif (overrides) {\n\t\t\tcontextTLUiMenuSchema = overrides(editor, contextTLUiMenuSchema, {\n\t\t\t\tactions,\n\t\t\t\toneSelected,\n\t\t\t\ttwoSelected,\n\t\t\t\tthreeSelected,\n\t\t\t\tshowAutoSizeToggle,\n\t\t\t\tshowUngroup: allowUngroup,\n\t\t\t\tonlyFlippableShapeSelected,\n\t\t\t})\n\t\t}\n\n\t\treturn contextTLUiMenuSchema\n\t}, [\n\t\teditor,\n\t\toverrides,\n\t\tactions,\n\t\toneSelected,\n\t\ttwoSelected,\n\t\tthreeSelected,\n\t\tshowAutoSizeToggle,\n\t\tonlyFlippableShapeSelected,\n\t\tatLeastOneShapeOnPage,\n\t\tthreeStackableItems,\n\t\tallowGroup,\n\t\tallowUngroup,\n\t\thasClipboardWrite,\n\t\tshowEditLink,\n\t\toneEmbedSelected,\n\t\toneEmbeddableBookmarkSelected,\n\t\tisTransparentBg,\n\t\tisShapeLocked,\n\t])\n\n\treturn (\n\t\t<TLUiContextMenuSchemaContext.Provider value={contextTLUiMenuSchema}>\n\t\t\t{children}\n\t\t</TLUiContextMenuSchemaContext.Provider>\n\t)\n})\n\n/** @public */\nexport function useContextMenuSchema(): TLUiMenuSchema {\n\tconst ctx = React.useContext(TLUiContextMenuSchemaContext)\n\n\tif (!ctx) {\n\t\tthrow new Error('useContextMenuSchema must be used inside of a TLUiContextMenuSchemaProvider.')\n\t}\n\n\treturn ctx\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}