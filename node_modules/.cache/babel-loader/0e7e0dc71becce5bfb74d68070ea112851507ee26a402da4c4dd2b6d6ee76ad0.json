{"ast":null,"code":"import _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _Symbol$iterator, _Symbol$iterator2;\nimport { EMPTY_ARRAY } from \"signia\";\nfunction stack(items) {\n  if (items) {\n    var result = EMPTY_STACK_ITEM;\n    while (items.length) {\n      result = result.push(items.pop());\n    }\n    return result;\n  }\n  return EMPTY_STACK_ITEM;\n}\n_Symbol$iterator = Symbol.iterator;\nvar EmptyStackItem = /*#__PURE__*/function () {\n  function EmptyStackItem() {\n    _classCallCheck(this, EmptyStackItem);\n    _defineProperty(this, \"length\", 0);\n    _defineProperty(this, \"head\", null);\n    _defineProperty(this, \"tail\", this);\n  }\n  _createClass(EmptyStackItem, [{\n    key: \"push\",\n    value: function push(head) {\n      return new StackItem(head, this);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return EMPTY_ARRAY;\n    }\n  }, {\n    key: _Symbol$iterator,\n    value: function value() {\n      return {\n        next: function next() {\n          return {\n            value: void 0,\n            done: true\n          };\n        }\n      };\n    }\n  }]);\n  return EmptyStackItem;\n}();\nvar EMPTY_STACK_ITEM = new EmptyStackItem();\n_Symbol$iterator2 = Symbol.iterator;\nvar StackItem = /*#__PURE__*/function () {\n  function StackItem(head, tail) {\n    _classCallCheck(this, StackItem);\n    _defineProperty(this, \"length\", void 0);\n    this.head = head;\n    this.tail = tail;\n    this.length = tail.length + 1;\n  }\n  _createClass(StackItem, [{\n    key: \"push\",\n    value: function push(head) {\n      return new StackItem(head, this);\n    }\n  }, {\n    key: \"toArray\",\n    value: function toArray() {\n      return Array.from(this);\n    }\n  }, {\n    key: _Symbol$iterator2,\n    value: function value() {\n      var stack2 = this;\n      return {\n        next: function next() {\n          if (stack2.length) {\n            var value = stack2.head;\n            stack2 = stack2.tail;\n            return {\n              value: value,\n              done: false\n            };\n          } else {\n            return {\n              value: void 0,\n              done: true\n            };\n          }\n        }\n      };\n    }\n  }]);\n  return StackItem;\n}();\nexport { stack };","map":{"version":3,"names":["EMPTY_ARRAY","stack","items","result","EMPTY_STACK_ITEM","length","push","pop","_Symbol$iterator","Symbol","iterator","EmptyStackItem","_classCallCheck","_defineProperty","_createClass","key","value","head","StackItem","toArray","next","done","_Symbol$iterator2","tail","Array","from","stack2"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/managers/Stack.ts"],"sourcesContent":["import { EMPTY_ARRAY } from 'signia'\n\nexport type Stack<T> = StackItem<T> | EmptyStackItem<T>\n\nexport function stack<T>(items?: Array<T>): Stack<T> {\n\tif (items) {\n\t\tlet result = EMPTY_STACK_ITEM as Stack<T>\n\t\twhile (items.length) {\n\t\t\tresult = result.push(items.pop()!)\n\t\t}\n\t\treturn result\n\t}\n\treturn EMPTY_STACK_ITEM as any\n}\n\nclass EmptyStackItem<T> implements Iterable<T> {\n\treadonly length = 0\n\treadonly head = null\n\treadonly tail: Stack<T> = this\n\n\tpush(head: T): Stack<T> {\n\t\treturn new StackItem<T>(head, this)\n\t}\n\n\ttoArray() {\n\t\treturn EMPTY_ARRAY\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\treturn { value: undefined, done: true as const }\n\t\t\t},\n\t\t}\n\t}\n}\n\nconst EMPTY_STACK_ITEM = new EmptyStackItem()\n\nclass StackItem<T> implements Iterable<T> {\n\tlength: number\n\tconstructor(public readonly head: T, public readonly tail: Stack<T>) {\n\t\tthis.length = tail.length + 1\n\t}\n\n\tpush(head: T): Stack<T> {\n\t\treturn new StackItem(head, this)\n\t}\n\n\ttoArray() {\n\t\treturn Array.from(this)\n\t}\n\n\t[Symbol.iterator]() {\n\t\tlet stack = this as Stack<T>\n\t\treturn {\n\t\t\tnext() {\n\t\t\t\tif (stack.length) {\n\t\t\t\t\tconst value = stack.head!\n\t\t\t\t\tstack = stack.tail\n\t\t\t\t\treturn { value, done: false as const }\n\t\t\t\t} else {\n\t\t\t\t\treturn { value: undefined, done: true as const }\n\t\t\t\t}\n\t\t\t},\n\t\t}\n\t}\n}\n"],"mappings":";;;;AAAA,SAASA,WAAA,QAAmB;AAIrB,SAASC,MAASC,KAAA,EAA4B;EACpD,IAAIA,KAAA,EAAO;IACV,IAAIC,MAAA,GAASC,gBAAA;IACb,OAAOF,KAAA,CAAMG,MAAA,EAAQ;MACpBF,MAAA,GAASA,MAAA,CAAOG,IAAA,CAAKJ,KAAA,CAAMK,GAAA,CAAI,CAAE;IAClC;IACA,OAAOJ,MAAA;EACR;EACA,OAAOC,gBAAA;AACR;AAAAI,gBAAA,GAeEC,MAAA,CAAOC,QAAQ;AAAA,IAbXC,cAAA;EAAA,SAAAA,eAAA;IAAAC,eAAA,OAAAD,cAAA;IAAAE,eAAA,iBACa;IAAAA,eAAA,eACF;IAAAA,eAAA,eACU;EAAA;EAAAC,YAAA,CAAAH,cAAA;IAAAI,GAAA;IAAAC,KAAA,EAE1B,SAAAV,KAAKW,IAAA,EAAmB;MACvB,OAAO,IAAIC,SAAA,CAAaD,IAAA,EAAM,IAAI;IACnC;EAAA;IAAAF,GAAA;IAAAC,KAAA,EAEA,SAAAG,QAAA,EAAU;MACT,OAAOnB,WAAA;IACR;EAAA;IAAAe,GAAA,EAAAP,gBAAA;IAAAQ,KAAA,EAEA,SAAAA,MAAA,EAAoB;MACnB,OAAO;QACNI,IAAA,WAAAA,KAAA,EAAO;UACN,OAAO;YAAEJ,KAAA,EAAO;YAAWK,IAAA,EAAM;UAAc;QAChD;MACD;IACD;EAAA;EAAA,OAAAV,cAAA;AAAA;AAGD,IAAMP,gBAAA,GAAmB,IAAIO,cAAA,CAAe;AAAAW,iBAAA,GAgB1Cb,MAAA,CAAOC,QAAQ;AAAA,IAdXQ,SAAA;EAEL,SAAAA,UAA4BD,IAAA,EAAyBM,IAAA,EAAgB;IAAAX,eAAA,OAAAM,SAAA;IAAAL,eAAA;IAAzC,KAAAI,IAAA,GAAAA,IAAA;IAAyB,KAAAM,IAAA,GAAAA,IAAA;IACpD,KAAKlB,MAAA,GAASkB,IAAA,CAAKlB,MAAA,GAAS;EAC7B;EAAAS,YAAA,CAAAI,SAAA;IAAAH,GAAA;IAAAC,KAAA,EAEA,SAAAV,KAAKW,IAAA,EAAmB;MACvB,OAAO,IAAIC,SAAA,CAAUD,IAAA,EAAM,IAAI;IAChC;EAAA;IAAAF,GAAA;IAAAC,KAAA,EAEA,SAAAG,QAAA,EAAU;MACT,OAAOK,KAAA,CAAMC,IAAA,CAAK,IAAI;IACvB;EAAA;IAAAV,GAAA,EAAAO,iBAAA;IAAAN,KAAA,EAEA,SAAAA,MAAA,EAAoB;MACnB,IAAIU,MAAA,GAAQ;MACZ,OAAO;QACNN,IAAA,WAAAA,KAAA,EAAO;UACN,IAAIM,MAAA,CAAMrB,MAAA,EAAQ;YACjB,IAAMW,KAAA,GAAQU,MAAA,CAAMT,IAAA;YACpBS,MAAA,GAAQA,MAAA,CAAMH,IAAA;YACd,OAAO;cAAEP,KAAA,EAAAA,KAAA;cAAOK,IAAA,EAAM;YAAe;UACtC,OAAO;YACN,OAAO;cAAEL,KAAA,EAAO;cAAWK,IAAA,EAAM;YAAc;UAChD;QACD;MACD;IACD;EAAA;EAAA,OAAAH,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}