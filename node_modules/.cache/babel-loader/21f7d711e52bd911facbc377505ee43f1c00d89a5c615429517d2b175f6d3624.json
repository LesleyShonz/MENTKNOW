{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar annotationsByError = /* @__PURE__ */new WeakMap();\nfunction annotateError(error, annotations) {\n  if (typeof error !== \"object\" || error === null) return;\n  var currentAnnotations = annotationsByError.get(error);\n  if (!currentAnnotations) {\n    currentAnnotations = {\n      tags: {},\n      extras: {}\n    };\n    annotationsByError.set(error, currentAnnotations);\n  }\n  if (annotations.tags) {\n    currentAnnotations.tags = _objectSpread(_objectSpread({}, currentAnnotations.tags), annotations.tags);\n  }\n  if (annotations.extras) {\n    currentAnnotations.extras = _objectSpread(_objectSpread({}, currentAnnotations.extras), annotations.extras);\n  }\n}\nfunction getErrorAnnotations(error) {\n  var _annotationsByError$g;\n  return (_annotationsByError$g = annotationsByError.get(error)) !== null && _annotationsByError$g !== void 0 ? _annotationsByError$g : {\n    tags: {},\n    extras: {}\n  };\n}\nexport { annotateError, getErrorAnnotations };","map":{"version":3,"names":["annotationsByError","WeakMap","annotateError","error","annotations","currentAnnotations","get","tags","extras","set","_objectSpread","getErrorAnnotations","_annotationsByError$g"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/utils/src/lib/error.ts"],"sourcesContent":["type ErrorAnnotations = {\n\ttags: Record<string, number | string | boolean | bigint | symbol | null | undefined>\n\textras: Record<string, unknown>\n}\n\nconst annotationsByError = new WeakMap<object, ErrorAnnotations>()\n\n/**\n * Annotate an error with tags and additional data. Annotations won't overwrite existing ones.\n * Retrieve them with `getErrorAnnotations`.\n *\n * @internal\n */\nexport function annotateError(error: unknown, annotations: Partial<ErrorAnnotations>) {\n\tif (typeof error !== 'object' || error === null) return\n\n\tlet currentAnnotations = annotationsByError.get(error)\n\tif (!currentAnnotations) {\n\t\tcurrentAnnotations = { tags: {}, extras: {} }\n\t\tannotationsByError.set(error, currentAnnotations)\n\t}\n\n\tif (annotations.tags) {\n\t\tcurrentAnnotations.tags = {\n\t\t\t...currentAnnotations.tags,\n\t\t\t...annotations.tags,\n\t\t}\n\t}\n\tif (annotations.extras) {\n\t\tcurrentAnnotations.extras = {\n\t\t\t...currentAnnotations.extras,\n\t\t\t...annotations.extras,\n\t\t}\n\t}\n}\n\n/** @internal */\nexport function getErrorAnnotations(error: Error): ErrorAnnotations {\n\treturn annotationsByError.get(error) ?? { tags: {}, extras: {} }\n}\n"],"mappings":";AAKA,IAAMA,kBAAA,GAAqB,mBAAIC,OAAA,CAAkC;AAQ1D,SAASC,cAAcC,KAAA,EAAgBC,WAAA,EAAwC;EACrF,IAAI,OAAOD,KAAA,KAAU,YAAYA,KAAA,KAAU,MAAM;EAEjD,IAAIE,kBAAA,GAAqBL,kBAAA,CAAmBM,GAAA,CAAIH,KAAK;EACrD,IAAI,CAACE,kBAAA,EAAoB;IACxBA,kBAAA,GAAqB;MAAEE,IAAA,EAAM,CAAC;MAAGC,MAAA,EAAQ,CAAC;IAAE;IAC5CR,kBAAA,CAAmBS,GAAA,CAAIN,KAAA,EAAOE,kBAAkB;EACjD;EAEA,IAAID,WAAA,CAAYG,IAAA,EAAM;IACrBF,kBAAA,CAAmBE,IAAA,GAAAG,aAAA,CAAAA,aAAA,KACfL,kBAAA,CAAmBE,IAAA,GACnBH,WAAA,CAAYG,IAAA,CAChB;EACD;EACA,IAAIH,WAAA,CAAYI,MAAA,EAAQ;IACvBH,kBAAA,CAAmBG,MAAA,GAAAE,aAAA,CAAAA,aAAA,KACfL,kBAAA,CAAmBG,MAAA,GACnBJ,WAAA,CAAYI,MAAA,CAChB;EACD;AACD;AAGO,SAASG,oBAAoBR,KAAA,EAAgC;EAAA,IAAAS,qBAAA;EACnE,QAAAA,qBAAA,GAAOZ,kBAAA,CAAmBM,GAAA,CAAIH,KAAK,eAAAS,qBAAA,cAAAA,qBAAA,GAAK;IAAEL,IAAA,EAAM,CAAC;IAAGC,MAAA,EAAQ,CAAC;EAAE;AAChE"},"metadata":{},"sourceType":"module","externalDependencies":[]}