import {
  Box2d,
  ROTATE_CORNER_TO_SELECTION_CORNER,
  flipSelectionHandleX,
  flipSelectionHandleY,
  isSelectionCorner,
  rotateSelectionHandle
} from "./lib/Box2d.mjs";
import { CubicSegment2d } from "./lib/CubicSegment2d.mjs";
import { CubicSpline2d } from "./lib/CubicSpline2d.mjs";
import { LineSegment2d } from "./lib/LineSegment2d.mjs";
import {
  Matrix2d,
  decomposeMatrix2d
} from "./lib/Matrix2d.mjs";
import { Polyline2d } from "./lib/Polyline2d.mjs";
import { Vec2d } from "./lib/Vec2d.mjs";
import { EASINGS } from "./lib/easings.mjs";
import { getStroke } from "./lib/freehand/getStroke.mjs";
import { getStrokeOutlinePoints } from "./lib/freehand/getStrokeOutlinePoints.mjs";
import { getStrokePoints } from "./lib/freehand/getStrokePoints.mjs";
import { setStrokePointRadii } from "./lib/freehand/setStrokePointRadii.mjs";
import {
  intersectCircleCircle,
  intersectCirclePolygon,
  intersectCirclePolyline,
  intersectLineSegmentCircle,
  intersectLineSegmentLineSegment,
  intersectLineSegmentPolygon,
  intersectLineSegmentPolyline,
  intersectPolygonBounds,
  intersectPolygonPolygon,
  linesIntersect,
  polygonsIntersect
} from "./lib/intersect.mjs";
import {
  getDrawLinePathData,
  getRoundedInkyPolygonPath,
  getRoundedPolygonPoints
} from "./lib/polygon-helpers.mjs";
import {
  EPSILON,
  PI,
  PI2,
  SIN,
  TAU,
  angleDelta,
  approximately,
  areAnglesCompatible,
  canolicalizeRotation,
  clamp,
  clampRadians,
  degreesToRadians,
  getArcLength,
  getHeight,
  getMaxX,
  getMaxY,
  getMidX,
  getMidY,
  getMinX,
  getMinY,
  getPointOnCircle,
  getPolygonVertices,
  getStarBounds,
  getSweep,
  getWidth,
  isAngleBetween,
  isSafeFloat,
  lerpAngles,
  longAngleDist,
  perimeterOfEllipse,
  pointInBounds,
  pointInCircle,
  pointInEllipse,
  pointInPolygon,
  pointInPolyline,
  pointInRect,
  pointNearToLineSegment,
  pointNearToPolyline,
  radiansToDegrees,
  rangeIntersection,
  rangesOverlap,
  shortAngleDist,
  simplify,
  simplify2,
  snapAngle,
  toDomPrecision,
  toFixed,
  toPrecision
} from "./lib/utils.mjs";
export {
  Box2d,
  CubicSegment2d,
  CubicSpline2d,
  EASINGS,
  EPSILON,
  LineSegment2d,
  Matrix2d,
  PI,
  PI2,
  Polyline2d,
  ROTATE_CORNER_TO_SELECTION_CORNER,
  SIN,
  TAU,
  Vec2d,
  angleDelta,
  approximately,
  areAnglesCompatible,
  canolicalizeRotation,
  clamp,
  clampRadians,
  decomposeMatrix2d,
  degreesToRadians,
  flipSelectionHandleX,
  flipSelectionHandleY,
  getArcLength,
  getDrawLinePathData,
  getHeight,
  getMaxX,
  getMaxY,
  getMidX,
  getMidY,
  getMinX,
  getMinY,
  getPointOnCircle,
  getPolygonVertices,
  getRoundedInkyPolygonPath,
  getRoundedPolygonPoints,
  getStarBounds,
  getStroke,
  getStrokeOutlinePoints,
  getStrokePoints,
  getSweep,
  getWidth,
  intersectCircleCircle,
  intersectCirclePolygon,
  intersectCirclePolyline,
  intersectLineSegmentCircle,
  intersectLineSegmentLineSegment,
  intersectLineSegmentPolygon,
  intersectLineSegmentPolyline,
  intersectPolygonBounds,
  intersectPolygonPolygon,
  isAngleBetween,
  isSafeFloat,
  isSelectionCorner,
  lerpAngles,
  linesIntersect,
  longAngleDist,
  perimeterOfEllipse,
  pointInBounds,
  pointInCircle,
  pointInEllipse,
  pointInPolygon,
  pointInPolyline,
  pointInRect,
  pointNearToLineSegment,
  pointNearToPolyline,
  polygonsIntersect,
  radiansToDegrees,
  rangeIntersection,
  rangesOverlap,
  rotateSelectionHandle,
  setStrokePointRadii,
  shortAngleDist,
  simplify,
  simplify2,
  snapAngle,
  toDomPrecision,
  toFixed,
  toPrecision
};
//# sourceMappingURL=index.mjs.map
