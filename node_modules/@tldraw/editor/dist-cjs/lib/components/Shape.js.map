{
  "version": 3,
  "sources": ["../../../src/lib/components/Shape.tsx"],
  "sourcesContent": ["import { Matrix2d } from '@tldraw/primitives'\nimport { TLShape, TLShapeId } from '@tldraw/tlschema'\nimport * as React from 'react'\nimport {\n\ttrack,\n\t// @ts-expect-error 'private' export\n\tuseStateTracking,\n} from 'signia-react'\nimport { useEditor } from '../..'\nimport { ShapeUtil } from '../editor/shapes/ShapeUtil'\nimport { useEditorComponents } from '../hooks/useEditorComponents'\nimport { useQuickReactor } from '../hooks/useQuickReactor'\nimport { useShapeEvents } from '../hooks/useShapeEvents'\nimport { OptionalErrorBoundary } from './ErrorBoundary'\n\n/*\nThis component renders shapes on the canvas. There are two stages: positioning\nand styling the shape's container using CSS, and then rendering the shape's \nJSX using its shape util's render method. Rendering the \"inside\" of a shape is\nmore expensive than positioning it or changing its color, so we use React.memo\nto wrap the inner shape and only re-render it when the shape's props change. \n\nThe shape also receives props for its index and opacity. The index is used to\ndetermine the z-index of the shape, and the opacity is used to set the shape's\nopacity based on its own opacity and that of its parent's.\n*/\nexport const Shape = track(function Shape({\n\tid,\n\tindex,\n\tbackgroundIndex,\n\topacity,\n\tisCulled,\n}: {\n\tid: TLShapeId\n\tindex: number\n\tbackgroundIndex: number\n\topacity: number\n\tisCulled: boolean\n}) {\n\tconst editor = useEditor()\n\n\tconst { ShapeErrorFallback } = useEditorComponents()\n\n\tconst events = useShapeEvents(id)\n\n\tconst containerRef = React.useRef<HTMLDivElement>(null)\n\tconst backgroundContainerRef = React.useRef<HTMLDivElement>(null)\n\n\tconst setProperty = React.useCallback((property: string, value: string) => {\n\t\tcontainerRef.current?.style.setProperty(property, value)\n\t\tbackgroundContainerRef.current?.style.setProperty(property, value)\n\t}, [])\n\n\tuseQuickReactor(\n\t\t'set shape container transform position',\n\t\t() => {\n\t\t\tconst shape = editor.getShapeById(id)\n\t\t\tconst pageTransform = editor.getPageTransformById(id)\n\n\t\t\tif (!shape || !pageTransform) return null\n\n\t\t\tconst transform = Matrix2d.toCssString(pageTransform)\n\t\t\tsetProperty('transform', transform)\n\t\t},\n\t\t[editor, setProperty]\n\t)\n\n\tuseQuickReactor(\n\t\t'set shape container clip path',\n\t\t() => {\n\t\t\tconst shape = editor.getShapeById(id)\n\t\t\tif (!shape) return null\n\n\t\t\tconst clipPath = editor.getClipPathById(id)\n\t\t\tsetProperty('clip-path', clipPath ?? 'none')\n\t\t},\n\t\t[editor, setProperty]\n\t)\n\n\tuseQuickReactor(\n\t\t'set shape height and width',\n\t\t() => {\n\t\t\tconst shape = editor.getShapeById(id)\n\t\t\tif (!shape) return null\n\n\t\t\tconst util = editor.getShapeUtil(shape)\n\t\t\tconst bounds = util.bounds(shape)\n\t\t\tsetProperty('width', Math.ceil(bounds.width) + 'px')\n\t\t\tsetProperty('height', Math.ceil(bounds.height) + 'px')\n\t\t},\n\t\t[editor]\n\t)\n\n\t// Set the opacity of the container when the opacity changes\n\tReact.useLayoutEffect(() => {\n\t\tsetProperty('opacity', opacity + '')\n\t\tcontainerRef.current?.style.setProperty('z-index', index + '')\n\t\tbackgroundContainerRef.current?.style.setProperty('z-index', backgroundIndex + '')\n\t}, [opacity, index, backgroundIndex, setProperty])\n\n\tconst shape = editor.getShapeById(id)\n\n\tif (!shape) return null\n\n\tconst util = editor.getShapeUtil(shape)\n\n\treturn (\n\t\t<>\n\t\t\t{util.renderBackground && (\n\t\t\t\t<div\n\t\t\t\t\tref={backgroundContainerRef}\n\t\t\t\t\tclassName=\"tl-shape tl-shape-background\"\n\t\t\t\t\tdata-shape-type={shape.type}\n\t\t\t\t\tdraggable={false}\n\t\t\t\t>\n\t\t\t\t\t{!isCulled && (\n\t\t\t\t\t\t<OptionalErrorBoundary\n\t\t\t\t\t\t\tfallback={ShapeErrorFallback ? (error) => <ShapeErrorFallback error={error} /> : null}\n\t\t\t\t\t\t\tonError={(error) =>\n\t\t\t\t\t\t\t\teditor.annotateError(error, { origin: 'react.shape', willCrashApp: false })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InnerShapeBackground shape={shape} util={util} />\n\t\t\t\t\t\t</OptionalErrorBoundary>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div\n\t\t\t\tref={containerRef}\n\t\t\t\tclassName=\"tl-shape\"\n\t\t\t\tdata-shape-type={shape.type}\n\t\t\t\tdraggable={false}\n\t\t\t\tonPointerDown={events.onPointerDown}\n\t\t\t\tonPointerMove={events.onPointerMove}\n\t\t\t\tonPointerUp={events.onPointerUp}\n\t\t\t\tonPointerEnter={events.onPointerEnter}\n\t\t\t\tonPointerLeave={events.onPointerLeave}\n\t\t\t>\n\t\t\t\t{isCulled && util.canUnmount(shape) ? (\n\t\t\t\t\t<CulledShape shape={shape} util={util} />\n\t\t\t\t) : (\n\t\t\t\t\t<OptionalErrorBoundary\n\t\t\t\t\t\tfallback={ShapeErrorFallback ? (error) => <ShapeErrorFallback error={error} /> : null}\n\t\t\t\t\t\tonError={(error) =>\n\t\t\t\t\t\t\teditor.annotateError(error, { origin: 'react.shape', willCrashApp: false })\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<InnerShape shape={shape} util={util} />\n\t\t\t\t\t</OptionalErrorBoundary>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</>\n\t)\n})\n\nconst InnerShape = React.memo(\n\tfunction InnerShape<T extends TLShape>({ shape, util }: { shape: T; util: ShapeUtil<T> }) {\n\t\treturn useStateTracking('InnerShape:' + util.type, () => util.component(shape))\n\t},\n\t(prev, next) => prev.shape.props === next.shape.props\n)\n\nconst InnerShapeBackground = React.memo(\n\tfunction InnerShapeBackground<T extends TLShape>({\n\t\tshape,\n\t\tutil,\n\t}: {\n\t\tshape: T\n\t\tutil: ShapeUtil<T>\n\t}) {\n\t\treturn useStateTracking('InnerShape:' + util.type, () => util.renderBackground?.(shape))\n\t},\n\t(prev, next) => prev.shape.props === next.shape.props\n)\n\nconst CulledShape = React.memo(\n\tfunction CulledShap<T extends TLShape>({ shape, util }: { shape: T; util: ShapeUtil<T> }) {\n\t\tconst bounds = util.bounds(shape)\n\t\treturn (\n\t\t\t<div\n\t\t\t\tclassName=\"tl-shape__culled\"\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: `translate(${bounds.minX}px, ${bounds.minY}px)`,\n\t\t\t\t\twidth: bounds.width,\n\t\t\t\t\theight: bounds.height,\n\t\t\t\t}}\n\t\t\t/>\n\t\t)\n\t},\n\t() => true\n)\n"],
  "mappings": "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",
  "names": ["Shape", "shape", "util", "InnerShape", "InnerShapeBackground"]
}
