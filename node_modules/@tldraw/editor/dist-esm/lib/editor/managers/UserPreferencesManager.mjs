class UserPreferencesManager {
  constructor(user) {
    this.user = user;
  }
  updateUserPreferences = (userPreferences) => {
    this.user.setUserPreferences({
      ...this.user.userPreferences.value,
      ...userPreferences
    });
  };
  get userPreferences() {
    return this.user.userPreferences;
  }
  get isDarkMode() {
    return this.user.userPreferences.value.isDarkMode;
  }
  get animationSpeed() {
    return this.user.userPreferences.value.animationSpeed;
  }
  get id() {
    return this.user.userPreferences.value.id;
  }
  get name() {
    return this.user.userPreferences.value.name;
  }
  get locale() {
    return this.user.userPreferences.value.locale;
  }
  get color() {
    return this.user.userPreferences.value.color;
  }
  get isSnapMode() {
    return this.user.userPreferences.value.isSnapMode;
  }
}
export {
  UserPreferencesManager
};
//# sourceMappingURL=UserPreferencesManager.mjs.map
