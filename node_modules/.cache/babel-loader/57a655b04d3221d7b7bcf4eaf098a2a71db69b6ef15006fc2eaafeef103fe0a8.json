{"ast":null,"code":"import { getLegacyOffsetX } from \"../../../utils/legacy.mjs\";\nimport { createTextSvgElementFromSpans } from \"./createTextSvgElementFromSpans.mjs\";\nimport { LABEL_FONT_SIZES, TEXT_PROPS } from \"./default-shape-constants.mjs\";\nfunction getTextLabelSvgElement(_ref) {\n  var bounds = _ref.bounds,\n    editor = _ref.editor,\n    font = _ref.font,\n    shape = _ref.shape;\n  var padding = 16;\n  var opts = {\n    fontSize: LABEL_FONT_SIZES[shape.props.size],\n    fontFamily: font,\n    textAlign: shape.props.align,\n    verticalTextAlign: shape.props.verticalAlign,\n    width: Math.ceil(bounds.width),\n    height: Math.ceil(bounds.height),\n    padding: 16,\n    lineHeight: TEXT_PROPS.lineHeight,\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    overflow: \"wrap\",\n    offsetX: 0\n  };\n  var spans = editor.textMeasure.measureTextSpans(shape.props.text, opts);\n  var offsetX = getLegacyOffsetX(shape.props.align, padding, spans, bounds.width);\n  if (offsetX) {\n    opts.offsetX = offsetX;\n  }\n  var textElm = createTextSvgElementFromSpans(editor, spans, opts);\n  return textElm;\n}\nexport { getTextLabelSvgElement };","map":{"version":3,"names":["getLegacyOffsetX","createTextSvgElementFromSpans","LABEL_FONT_SIZES","TEXT_PROPS","getTextLabelSvgElement","_ref","bounds","editor","font","shape","padding","opts","fontSize","props","size","fontFamily","textAlign","align","verticalTextAlign","verticalAlign","width","Math","ceil","height","lineHeight","fontStyle","fontWeight","overflow","offsetX","spans","textMeasure","measureTextSpans","text","textElm"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/shared/getTextLabelSvgElement.ts"],"sourcesContent":["import { Box2d } from '@tldraw/primitives'\nimport { TLGeoShape, TLNoteShape } from '@tldraw/tlschema'\nimport { getLegacyOffsetX } from '../../../utils/legacy'\nimport { Editor } from '../../Editor'\nimport { createTextSvgElementFromSpans } from './createTextSvgElementFromSpans'\nimport { LABEL_FONT_SIZES, TEXT_PROPS } from './default-shape-constants'\n\nexport function getTextLabelSvgElement({\n\tbounds,\n\teditor,\n\tfont,\n\tshape,\n}: {\n\tbounds: Box2d\n\teditor: Editor\n\tfont: string\n\tshape: TLGeoShape | TLNoteShape\n}) {\n\tconst padding = 16\n\n\tconst opts = {\n\t\tfontSize: LABEL_FONT_SIZES[shape.props.size],\n\t\tfontFamily: font,\n\t\ttextAlign: shape.props.align,\n\t\tverticalTextAlign: shape.props.verticalAlign,\n\t\twidth: Math.ceil(bounds.width),\n\t\theight: Math.ceil(bounds.height),\n\t\tpadding: 16,\n\t\tlineHeight: TEXT_PROPS.lineHeight,\n\t\tfontStyle: 'normal',\n\t\tfontWeight: 'normal',\n\t\toverflow: 'wrap' as const,\n\t\toffsetX: 0,\n\t}\n\n\tconst spans = editor.textMeasure.measureTextSpans(shape.props.text, opts)\n\tconst offsetX = getLegacyOffsetX(shape.props.align, padding, spans, bounds.width)\n\tif (offsetX) {\n\t\topts.offsetX = offsetX\n\t}\n\n\tconst textElm = createTextSvgElementFromSpans(editor, spans, opts)\n\treturn textElm\n}\n"],"mappings":"AAEA,SAASA,gBAAA,QAAwB;AAEjC,SAASC,6BAAA,QAAqC;AAC9C,SAASC,gBAAA,EAAkBC,UAAA,QAAkB;AAEtC,SAASC,uBAAAC,IAAA,EAUb;EAAA,IATFC,MAAA,GAAAD,IAAA,CAAAC,MAAA;IACAC,MAAA,GAAAF,IAAA,CAAAE,MAAA;IACAC,IAAA,GAAAH,IAAA,CAAAG,IAAA;IACAC,KAAA,GAAAJ,IAAA,CAAAI,KAAA;EAOA,IAAMC,OAAA,GAAU;EAEhB,IAAMC,IAAA,GAAO;IACZC,QAAA,EAAUV,gBAAA,CAAiBO,KAAA,CAAMI,KAAA,CAAMC,IAAI;IAC3CC,UAAA,EAAYP,IAAA;IACZQ,SAAA,EAAWP,KAAA,CAAMI,KAAA,CAAMI,KAAA;IACvBC,iBAAA,EAAmBT,KAAA,CAAMI,KAAA,CAAMM,aAAA;IAC/BC,KAAA,EAAOC,IAAA,CAAKC,IAAA,CAAKhB,MAAA,CAAOc,KAAK;IAC7BG,MAAA,EAAQF,IAAA,CAAKC,IAAA,CAAKhB,MAAA,CAAOiB,MAAM;IAC/Bb,OAAA,EAAS;IACTc,UAAA,EAAYrB,UAAA,CAAWqB,UAAA;IACvBC,SAAA,EAAW;IACXC,UAAA,EAAY;IACZC,QAAA,EAAU;IACVC,OAAA,EAAS;EACV;EAEA,IAAMC,KAAA,GAAQtB,MAAA,CAAOuB,WAAA,CAAYC,gBAAA,CAAiBtB,KAAA,CAAMI,KAAA,CAAMmB,IAAA,EAAMrB,IAAI;EACxE,IAAMiB,OAAA,GAAU5B,gBAAA,CAAiBS,KAAA,CAAMI,KAAA,CAAMI,KAAA,EAAOP,OAAA,EAASmB,KAAA,EAAOvB,MAAA,CAAOc,KAAK;EAChF,IAAIQ,OAAA,EAAS;IACZjB,IAAA,CAAKiB,OAAA,GAAUA,OAAA;EAChB;EAEA,IAAMK,OAAA,GAAUhC,6BAAA,CAA8BM,MAAA,EAAQsB,KAAA,EAAOlB,IAAI;EACjE,OAAOsB,OAAA;AACR"},"metadata":{},"sourceType":"module","externalDependencies":[]}