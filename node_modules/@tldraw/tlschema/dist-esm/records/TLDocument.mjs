import { createRecordType, defineMigrations } from "@tldraw/store";
import { T } from "@tldraw/validate";
const documentValidator = T.model(
  "document",
  T.object({
    typeName: T.literal("document"),
    id: T.literal("document:document"),
    gridSize: T.number,
    name: T.string
  })
);
const Versions = {
  AddName: 1
};
const documentMigrations = defineMigrations({
  currentVersion: Versions.AddName,
  migrators: {
    [Versions.AddName]: {
      up: (document) => {
        return { ...document, name: "" };
      },
      down: ({ name: _, ...document }) => {
        return document;
      }
    }
  }
});
const DocumentRecordType = createRecordType("document", {
  migrations: documentMigrations,
  validator: documentValidator,
  scope: "document"
}).withDefaultProperties(
  () => ({
    gridSize: 10,
    name: ""
  })
);
const TLDOCUMENT_ID = DocumentRecordType.createId("document");
export {
  DocumentRecordType,
  TLDOCUMENT_ID,
  documentMigrations,
  documentValidator
};
//# sourceMappingURL=TLDocument.mjs.map
