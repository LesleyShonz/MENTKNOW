{
  "version": 3,
  "sources": ["../../src/records/TLPage.ts"],
  "sourcesContent": ["import { BaseRecord, createRecordType, defineMigrations, RecordId } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\n\n/**\n * TLPage\n *\n * @public\n */\nexport interface TLPage extends BaseRecord<'page', TLPageId> {\n\tname: string\n\tindex: string\n}\n\n/** @public */\nexport type TLPageId = RecordId<TLPage>\n\n/** @internal */\nexport const pageIdValidator = idValidator<TLPageId>('page')\n\n/** @internal */\nexport const pageValidator: T.Validator<TLPage> = T.model(\n\t'page',\n\tT.object({\n\t\ttypeName: T.literal('page'),\n\t\tid: pageIdValidator,\n\t\tname: T.string,\n\t\tindex: T.string,\n\t})\n)\n/** @internal */\nexport const pageMigrations = defineMigrations({})\n\n/** @public */\nexport const PageRecordType = createRecordType<TLPage>('page', {\n\tvalidator: pageValidator,\n\tmigrations: pageMigrations,\n\tscope: 'document',\n})\n\n/** @public */\nexport function isPageId(id: string): id is TLPageId {\n\treturn PageRecordType.isId(id)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyE;AACzE,sBAAkB;AAClB,0BAA4B;AAgBrB,MAAM,sBAAkB,iCAAsB,MAAM;AAGpD,MAAM,gBAAqC,kBAAE;AAAA,EACnD;AAAA,EACA,kBAAE,OAAO;AAAA,IACR,UAAU,kBAAE,QAAQ,MAAM;AAAA,IAC1B,IAAI;AAAA,IACJ,MAAM,kBAAE;AAAA,IACR,OAAO,kBAAE;AAAA,EACV,CAAC;AACF;AAEO,MAAM,qBAAiB,+BAAiB,CAAC,CAAC;AAG1C,MAAM,qBAAiB,+BAAyB,QAAQ;AAAA,EAC9D,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,OAAO;AACR,CAAC;AAGM,SAAS,SAAS,IAA4B;AACpD,SAAO,eAAe,KAAK,EAAE;AAC9B;",
  "names": []
}
