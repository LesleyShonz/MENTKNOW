{"ast":null,"code":"import _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { isShapeId } from \"@tldraw/tlschema\";\nimport { StateNode } from \"../../StateNode.mjs\";\nvar PointingCanvas = /*#__PURE__*/function (_StateNode) {\n  _inherits(PointingCanvas, _StateNode);\n  var _super = _createSuper(PointingCanvas);\n  function PointingCanvas() {\n    var _this;\n    _classCallCheck(this, PointingCanvas);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"onEnter\", function () {\n      var inputs = _this.editor.inputs;\n      if (!inputs.shiftKey) {\n        if (_this.editor.selectedIds.length > 0) {\n          _this.editor.mark(\"selecting none\");\n          _this.editor.selectNone();\n        }\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function (info) {\n      if (_this.editor.inputs.isDragging) {\n        _this.parent.transition(\"brushing\", info);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerUp\", function () {\n      _this.complete();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onComplete\", function () {\n      _this.complete();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onInterrupt\", function () {\n      _this.parent.transition(\"idle\", {});\n    });\n    return _this;\n  }\n  _createClass(PointingCanvas, [{\n    key: \"_clickWasInsideFocusedGroup\",\n    value: function _clickWasInsideFocusedGroup() {\n      var _this$editor = this.editor,\n        focusLayerId = _this$editor.focusLayerId,\n        inputs = _this$editor.inputs;\n      if (!isShapeId(focusLayerId)) {\n        return false;\n      }\n      var groupShape = this.editor.getShapeById(focusLayerId);\n      if (!groupShape) {\n        return false;\n      }\n      var clickPoint = this.editor.getPointInShapeSpace(groupShape, inputs.currentPagePoint);\n      var util = this.editor.getShapeUtil(groupShape);\n      return util.hitTestPoint(groupShape, clickPoint);\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      var shiftKey = this.editor.inputs.shiftKey;\n      if (!shiftKey) {\n        this.editor.selectNone();\n        if (!this._clickWasInsideFocusedGroup()) {\n          this.editor.setFocusLayer(null);\n        }\n      }\n      this.parent.transition(\"idle\", {});\n    }\n  }]);\n  return PointingCanvas;\n}(StateNode);\n_defineProperty(PointingCanvas, \"id\", \"pointing_canvas\");\nexport { PointingCanvas };","map":{"version":3,"names":["isShapeId","StateNode","PointingCanvas","_StateNode","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","inputs","editor","shiftKey","selectedIds","mark","selectNone","info","isDragging","parent","transition","complete","_createClass","key","value","_clickWasInsideFocusedGroup","_this$editor","focusLayerId","groupShape","getShapeById","clickPoint","getPointInShapeSpace","currentPagePoint","util","getShapeUtil","hitTestPoint","setFocusLayer"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/tools/SelectTool/children/PointingCanvas.ts"],"sourcesContent":["import { isShapeId } from '@tldraw/tlschema'\nimport { TLEventHandlers } from '../../../types/event-types'\nimport { StateNode } from '../../StateNode'\n\nexport class PointingCanvas extends StateNode {\n\tstatic override id = 'pointing_canvas'\n\n\tonEnter = () => {\n\t\tconst { inputs } = this.editor\n\n\t\tif (!inputs.shiftKey) {\n\t\t\tif (this.editor.selectedIds.length > 0) {\n\t\t\t\tthis.editor.mark('selecting none')\n\t\t\t\tthis.editor.selectNone()\n\t\t\t}\n\t\t}\n\t}\n\n\t_clickWasInsideFocusedGroup() {\n\t\tconst { focusLayerId, inputs } = this.editor\n\t\tif (!isShapeId(focusLayerId)) {\n\t\t\treturn false\n\t\t}\n\t\tconst groupShape = this.editor.getShapeById(focusLayerId)\n\t\tif (!groupShape) {\n\t\t\treturn false\n\t\t}\n\t\tconst clickPoint = this.editor.getPointInShapeSpace(groupShape, inputs.currentPagePoint)\n\t\tconst util = this.editor.getShapeUtil(groupShape)\n\t\treturn util.hitTestPoint(groupShape, clickPoint)\n\t}\n\n\tonPointerMove: TLEventHandlers['onPointerMove'] = (info) => {\n\t\tif (this.editor.inputs.isDragging) {\n\t\t\tthis.parent.transition('brushing', info)\n\t\t}\n\t}\n\n\tonPointerUp: TLEventHandlers['onPointerUp'] = () => {\n\t\tthis.complete()\n\t}\n\n\tonComplete: TLEventHandlers['onComplete'] = () => {\n\t\tthis.complete()\n\t}\n\n\toverride onInterrupt = () => {\n\t\tthis.parent.transition('idle', {})\n\t}\n\n\tprivate complete() {\n\t\tconst { shiftKey } = this.editor.inputs\n\t\tif (!shiftKey) {\n\t\t\tthis.editor.selectNone()\n\t\t\tif (!this._clickWasInsideFocusedGroup()) {\n\t\t\t\tthis.editor.setFocusLayer(null)\n\t\t\t}\n\t\t}\n\t\tthis.parent.transition('idle', {})\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}