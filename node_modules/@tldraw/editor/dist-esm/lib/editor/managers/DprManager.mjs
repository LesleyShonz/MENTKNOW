import { atom } from "signia";
class DprManager {
  constructor(editor) {
    this.editor = editor;
    this.rebind();
    this.editor.disposables.add(this.dispose);
  }
  _currentMM;
  // Set a listener to update the dpr when the device pixel ratio changes
  rebind() {
    this.dispose();
    this._currentMM = this.getMedia();
    this._currentMM?.addEventListener("change", this.updateDevicePixelRatio);
  }
  dpr = atom(
    "devicePixelRatio",
    typeof window === "undefined" ? 1 : window.devicePixelRatio
  );
  // Get the media query list for the device pixel ratio
  getMedia() {
    if (window.matchMedia) {
      return matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`);
    }
  }
  // Update the device pixel ratio atom
  updateDevicePixelRatio = () => {
    this.dpr.set(window.devicePixelRatio);
    this.rebind();
  };
  // Clear the listener
  dispose = () => {
    this._currentMM?.removeEventListener("change", this.updateDevicePixelRatio);
  };
}
export {
  DprManager
};
//# sourceMappingURL=DprManager.mjs.map
