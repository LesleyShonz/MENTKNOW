{"ast":null,"code":"import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport * as React from \"react\";\nimport { getShapeFillSvg, getSvgWithShapeFill, ShapeFill } from \"../../shared/ShapeFill.mjs\";\nvar SolidStyleEllipse = React.memo(function SolidStyleEllipse2(_ref) {\n  var w = _ref.w,\n    h = _ref.h,\n    sw = _ref.strokeWidth,\n    fill = _ref.fill,\n    color = _ref.color;\n  var cx = w / 2;\n  var cy = h / 2;\n  var rx = Math.max(0, cx);\n  var ry = Math.max(0, cy);\n  var d = \"M\".concat(cx - rx, \",\").concat(cy, \"a\").concat(rx, \",\").concat(ry, \",0,1,1,\").concat(rx * 2, \",0a\").concat(rx, \",\").concat(ry, \",0,1,1,-\").concat(rx * 2, \",0\");\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(ShapeFill, {\n      d: d,\n      color: color,\n      fill: fill\n    }), /* @__PURE__ */jsx(\"path\", {\n      d: d,\n      stroke: \"var(--palette-\".concat(color, \")\"),\n      strokeWidth: sw,\n      fill: \"none\"\n    })]\n  });\n});\nfunction SolidStyleEllipseSvg(_ref2) {\n  var w = _ref2.w,\n    h = _ref2.h,\n    sw = _ref2.strokeWidth,\n    fill = _ref2.fill,\n    color = _ref2.color,\n    colors = _ref2.colors;\n  var cx = w / 2;\n  var cy = h / 2;\n  var rx = Math.max(0, cx);\n  var ry = Math.max(0, cy);\n  var d = \"M\".concat(cx - rx, \",\").concat(cy, \"a\").concat(rx, \",\").concat(ry, \",0,1,1,\").concat(rx * 2, \",0a\").concat(rx, \",\").concat(ry, \",0,1,1,-\").concat(rx * 2, \",0\");\n  var strokeElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n  strokeElement.setAttribute(\"d\", d);\n  strokeElement.setAttribute(\"stroke-width\", sw.toString());\n  strokeElement.setAttribute(\"width\", w.toString());\n  strokeElement.setAttribute(\"height\", h.toString());\n  strokeElement.setAttribute(\"fill\", \"none\");\n  strokeElement.setAttribute(\"stroke\", colors.fill[color]);\n  var fillElement = getShapeFillSvg({\n    d: d,\n    fill: fill,\n    color: color,\n    colors: colors\n  });\n  return getSvgWithShapeFill(strokeElement, fillElement);\n}\nexport { SolidStyleEllipse, SolidStyleEllipseSvg };","map":{"version":3,"names":["Fragment","jsx","jsxs","React","getShapeFillSvg","getSvgWithShapeFill","ShapeFill","SolidStyleEllipse","memo","SolidStyleEllipse2","_ref","w","h","sw","strokeWidth","fill","color","cx","cy","rx","Math","max","ry","d","concat","children","stroke","SolidStyleEllipseSvg","_ref2","colors","strokeElement","document","createElementNS","setAttribute","toString","fillElement"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/geo/components/SolidStyleEllipse.tsx"],"sourcesContent":["import { TLGeoShape } from '@tldraw/tlschema'\nimport * as React from 'react'\nimport { getShapeFillSvg, getSvgWithShapeFill, ShapeFill } from '../../shared/ShapeFill'\nimport { TLExportColors } from '../../shared/TLExportColors'\n\nexport const SolidStyleEllipse = React.memo(function SolidStyleEllipse({\n\tw,\n\th,\n\tstrokeWidth: sw,\n\tfill,\n\tcolor,\n}: Pick<TLGeoShape['props'], 'w' | 'h' | 'fill' | 'color'> & { strokeWidth: number }) {\n\tconst cx = w / 2\n\tconst cy = h / 2\n\tconst rx = Math.max(0, cx)\n\tconst ry = Math.max(0, cy)\n\n\tconst d = `M${cx - rx},${cy}a${rx},${ry},0,1,1,${rx * 2},0a${rx},${ry},0,1,1,-${rx * 2},0`\n\n\treturn (\n\t\t<>\n\t\t\t<ShapeFill d={d} color={color} fill={fill} />\n\t\t\t<path d={d} stroke={`var(--palette-${color})`} strokeWidth={sw} fill=\"none\" />\n\t\t</>\n\t)\n})\n\nexport function SolidStyleEllipseSvg({\n\tw,\n\th,\n\tstrokeWidth: sw,\n\tfill,\n\tcolor,\n\tcolors,\n}: Pick<TLGeoShape['props'], 'w' | 'h' | 'fill' | 'color'> & {\n\tstrokeWidth: number\n\tcolors: TLExportColors\n}) {\n\tconst cx = w / 2\n\tconst cy = h / 2\n\tconst rx = Math.max(0, cx)\n\tconst ry = Math.max(0, cy)\n\n\tconst d = `M${cx - rx},${cy}a${rx},${ry},0,1,1,${rx * 2},0a${rx},${ry},0,1,1,-${rx * 2},0`\n\n\tconst strokeElement = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\tstrokeElement.setAttribute('d', d)\n\tstrokeElement.setAttribute('stroke-width', sw.toString())\n\tstrokeElement.setAttribute('width', w.toString())\n\tstrokeElement.setAttribute('height', h.toString())\n\tstrokeElement.setAttribute('fill', 'none')\n\tstrokeElement.setAttribute('stroke', colors.fill[color])\n\n\t// Get the fill element, if any\n\tconst fillElement = getShapeFillSvg({\n\t\td,\n\t\tfill,\n\t\tcolor,\n\t\tcolors,\n\t})\n\n\treturn getSvgWithShapeFill(strokeElement, fillElement)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}