{
  "version": 3,
  "sources": ["../src/cli.ts", "../src/fetchResult.ts", "../src/dev.tsx", "../src/config.ts", "../src/inspect.ts", "../package.json", "../src/tail/filters.ts", "../src/tail/printing.ts", "../src/bin.tsx", "../src/commands/login.tsx", "../src/async-cache.ts", "../src/commands/logout.tsx"],
  "sourcesContent": ["import path from \"path\";\nimport assert from \"assert\";\nimport * as fs from \"fs\";\nimport { fetchResult } from \"./fetchResult\";\nimport { File, FormData } from \"undici\";\nimport type { BuildOptions } from \"esbuild\";\nimport * as crypto from \"crypto\";\nimport WebSocket from \"ws\";\nimport type { RawData } from \"ws\";\nimport onExit from \"signal-exit\";\n\nimport { Dev } from \"./dev\";\nimport type { DevProps } from \"./dev\";\n\nexport { Dev, DevProps };\n\nimport { execaCommand } from \"execa\";\nimport { version as packageVersion } from \"../package.json\";\n\nimport {\n  getConfig,\n  getConfigPath,\n  getUser,\n\n  // validateUserConfig,\n} from \"./config\";\nimport type { TailFilterMessage } from \"./tail/filters\";\nimport { translateCLICommandToFilterMessage } from \"./tail/filters\";\nimport { jsonPrintLogs, prettyPrintLogs } from \"./tail/printing\";\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nconst esbuildOptions: BuildOptions = {\n  format: \"esm\",\n  bundle: true,\n  write: false,\n  target: \"esnext\",\n  // minify: true,\n} as const;\n\n// A map of room names to room servers.\n\nexport async function deploy(options: {\n  main: string | undefined;\n  name: string;\n  config: string | undefined;\n  assets: string | undefined;\n  vars: Record<string, string> | undefined;\n  define: Record<string, string> | undefined;\n  preview: string | undefined;\n  withVars: boolean | undefined;\n}): Promise<void> {\n  const config = getConfig(options.config, {\n    main: options.main,\n    name: options.name,\n    assets: options.assets,\n    vars: options.vars,\n    define: options.define,\n  });\n\n  if (!config.main) {\n    throw new Error(\n      'Missing entry point, please specify \"main\" in your config'\n    );\n  }\n\n  const configName = config.name;\n  assert(\n    configName,\n    'Missing project name, please specify \"name\" in your config'\n  );\n\n  if (config.build?.command) {\n    const buildCommand = config.build.command;\n    const buildCwd = config.build.cwd;\n    // run a build\n\n    await execaCommand(buildCommand, {\n      shell: true,\n      // we keep these two as \"inherit\" so that\n      // logs are still visible.\n      stdout: \"inherit\",\n      stderr: \"inherit\",\n      ...(buildCwd && { cwd: buildCwd }),\n    });\n  }\n\n  if (config.assets) {\n    console.warn(\n      \"Warning: uploading assets are not yet supported in deploy mode\"\n    );\n  }\n\n  const absoluteScriptPath = path.join(process.cwd(), config.main);\n\n  // get user details\n  const user = await getUser();\n\n  const wasmModules: Record<string, Buffer> = {};\n\n  const esbuild = await import(\"esbuild\");\n  // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n  const code = (\n    await esbuild.build({\n      entryPoints: [absoluteScriptPath],\n      ...esbuildOptions,\n      define: {\n        ...esbuildOptions.define,\n        ...config.define,\n      },\n      plugins: [\n        {\n          name: \"partykit-wasm-publish\",\n          setup(build) {\n            build.onResolve({ filter: /\\.wasm$/ }, (args) => {\n              throw new Error(\n                `Cannot import .wasm files directly. Use import \"${args.path}?module\" instead.`\n              );\n            });\n\n            build.onResolve({ filter: /\\.wasm\\?module$/ }, (args) => {\n              const filePath = path.join(\n                args.resolveDir,\n                args.path.replace(/\\?module$/, \"\")\n              );\n              const fileContent = fs.readFileSync(filePath);\n              const fileHash = crypto\n                .createHash(\"sha1\")\n                .update(fileContent)\n                .digest(\"hex\");\n              const fileName = `${fileHash}-${path.basename(\n                args.path,\n                \".wasm?module\"\n              )}`;\n\n              wasmModules[fileName] = fs.readFileSync(filePath);\n\n              return {\n                path: fileName, // change the reference to the changed module\n                external: true, // mark it as external in the bundle\n                namespace: \"partykit-module-wasm-publish\", // just a tag, this isn't strictly necessary\n              };\n            });\n          },\n        },\n      ],\n    })\n  ).outputFiles![0].text;\n  const form = new FormData();\n  form.set(\"code\", code);\n\n  const vars = options.withVars\n    ? config.vars\n    : // only set vars passed in via cli with --var,\n      // not from .env/partykit.json/etc\n      options.vars;\n  if (vars && Object.keys(vars).length > 0) {\n    // TODO: need some good messaging here to explain what's going on\n    form.set(\"vars\", JSON.stringify(vars));\n  }\n\n  for (const [fileName, buffer] of Object.entries(wasmModules)) {\n    form.set(\n      `upload/${fileName}`,\n      new File([buffer], `upload/${fileName}`, { type: \"application/wasm\" })\n    );\n  }\n\n  const urlSearchParams = new URLSearchParams();\n  if (options.preview) {\n    urlSearchParams.set(\"preview\", options.preview);\n  }\n\n  await fetchResult(\n    `/parties/${user.login}/${config.name}${\n      options.preview ? `?${urlSearchParams.toString()}` : \"\"\n    }`,\n    {\n      method: \"POST\",\n      body: form,\n      headers: {\n        Authorization: `Bearer ${user.access_token}`,\n        \"X-PartyKit-User-Type\": user.type,\n      },\n    }\n  );\n\n  console.log(\n    `Deployed ${config.main} as ${\n      options.preview ? `${options.preview}.` : \"\"\n    }${config.name}.${user.login.toLowerCase()}.partykit.dev`\n  );\n}\n\nexport async function _delete(options: {\n  name: string | undefined;\n  config: string | undefined;\n  preview: string | undefined;\n}) {\n  const config = getConfig(options.config, options);\n  if (!config.name) {\n    throw new Error(\"project name is missing\");\n  }\n  // get user details\n  const user = await getUser();\n\n  const urlSearchParams = new URLSearchParams();\n  if (options.preview) {\n    urlSearchParams.set(\"preview\", options.preview);\n  }\n\n  await fetchResult(\n    `/parties/${user.login}/${config.name}${\n      options.preview ? `?${urlSearchParams.toString()}` : \"\"\n    }`,\n    {\n      method: \"DELETE\",\n      headers: {\n        Authorization: `Bearer ${user.access_token}`,\n      },\n    }\n  );\n\n  console.log(`Deleted ${config.name}.${user.login}.partykit.dev`);\n}\n\ntype TailCreationApiResponse = {\n  result: {\n    id: string;\n    url: string;\n    expires_at: Date;\n  };\n};\n\nconst TRACE_VERSION = \"trace-v1\";\n\nexport async function tail(options: {\n  name: string | undefined;\n  config: string | undefined;\n  preview: string | undefined;\n  status: (\"ok\" | \"canceled\" | \"error\")[];\n  ip: string[] | undefined;\n  header: string | undefined;\n  samplingRate: number | undefined;\n  method: string[] | undefined;\n  format: \"json\" | \"pretty\";\n  search: string | undefined;\n  debug: boolean;\n}) {\n  // get user details\n  const user = await getUser();\n\n  const config = getConfig(options.config, {\n    name: options.name,\n  });\n  if (!config.name) {\n    throw new Error(\"project name is missing\");\n  }\n\n  let scriptDisplayName = config.name;\n  if (options.preview) {\n    scriptDisplayName = `${scriptDisplayName} (preview: ${options.preview})`;\n  }\n\n  const filters: TailFilterMessage = translateCLICommandToFilterMessage({\n    status: options.status,\n    header: options.header,\n    method: options.method,\n    search: options.search,\n    samplingRate: options.samplingRate,\n    clientIp: options.ip,\n  });\n\n  const urlSearchParams = new URLSearchParams();\n  if (options.preview) {\n    urlSearchParams.set(\"preview\", options.preview);\n  }\n  const {\n    result: { id: tailId, url: websocketUrl, expires_at: expiration },\n  } = await fetchResult<TailCreationApiResponse>(\n    `/parties/${user.login}/${config.name}/tail${\n      options.preview ? `?${urlSearchParams.toString()}` : \"\"\n    }`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(filters),\n      headers: {\n        Authorization: `Bearer ${user.access_token}`,\n      },\n    }\n  );\n\n  if (options.format === \"pretty\") {\n    console.log(\n      `Successfully created tail, expires at ${expiration.toLocaleString()}`\n    );\n  }\n\n  async function deleteTail() {\n    await fetchResult(\n      `/parties/${user.login}/${config.name}/tail/${tailId}${\n        options.preview ? `?${urlSearchParams.toString()}` : \"\"\n      }`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n        },\n      }\n    );\n  }\n\n  // connect to the tail\n  const tailSocket = new WebSocket(websocketUrl, TRACE_VERSION, {\n    headers: {\n      \"Sec-WebSocket-Protocol\": TRACE_VERSION, // needs to be `trace-v1` to be accepted\n      \"User-Agent\": `partykit/${packageVersion}`,\n    },\n  });\n\n  // send filters when we open up\n  tailSocket.on(\"open\", function () {\n    tailSocket.send(\n      JSON.stringify({ debug: options.debug || false }),\n      { binary: false, compress: false, mask: false, fin: true },\n      (err) => {\n        if (err) {\n          throw err;\n        }\n      }\n    );\n  });\n\n  onExit(async () => {\n    tailSocket.terminate();\n    await deleteTail();\n  });\n\n  const printLog: (data: RawData) => void =\n    options.format === \"pretty\" ? prettyPrintLogs : jsonPrintLogs;\n\n  tailSocket.on(\"message\", printLog);\n\n  while (tailSocket.readyState !== tailSocket.OPEN) {\n    switch (tailSocket.readyState) {\n      case tailSocket.CONNECTING:\n        await sleep(100);\n        break;\n      case tailSocket.CLOSING:\n        await sleep(100);\n        break;\n      case tailSocket.CLOSED:\n        throw new Error(\n          `Connection to ${scriptDisplayName} closed unexpectedly.`\n        );\n    }\n  }\n\n  if (options.format === \"pretty\") {\n    console.log(`Connected to ${scriptDisplayName}, waiting for logs...`);\n  }\n\n  tailSocket.on(\"close\", async () => {\n    tailSocket.terminate();\n    await deleteTail();\n  });\n}\n\nexport async function list() {\n  // get user details\n  const user = await getUser();\n\n  const res = await fetchResult(`/parties/${user.login}`, {\n    headers: {\n      Authorization: `Bearer ${user.access_token}`,\n    },\n  });\n\n  console.log(res);\n}\n\n// type EnvironmentChoice = \"production\" | \"development\" | \"preview\";\n\nexport const env = {\n  async list(options: {\n    name: string | undefined;\n    // env: EnvironmentChoice;\n    config: string | undefined;\n    preview: string | undefined;\n  }) {\n    // get user details\n    const user = await getUser();\n\n    const config = getConfig(options.config, {\n      name: options.name,\n    });\n    if (!config.name) {\n      throw new Error(\"project name is missing\");\n    }\n\n    const urlSearchParams = new URLSearchParams();\n    urlSearchParams.set(\"keys\", \"true\");\n    if (options.preview) {\n      urlSearchParams.set(\"preview\", options.preview);\n    }\n\n    const res = await fetchResult(\n      `/parties/${user.login}/${config.name}/env?${urlSearchParams.toString()}`,\n      {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n        },\n      }\n    );\n\n    console.log(res);\n  },\n  async pull(\n    fileName: string | undefined,\n    options: {\n      name: string | undefined;\n      config: string | undefined;\n      preview: string | undefined;\n    }\n  ) {\n    // get user details\n    const user = await getUser();\n\n    const config = getConfig(options.config, {\n      name: options.name,\n    });\n    if (!config.name) {\n      throw new Error(\"project name is missing\");\n    }\n\n    const urlSearchParams = new URLSearchParams();\n    if (options.preview) {\n      urlSearchParams.set(\"preview\", options.preview);\n    }\n\n    const res = await fetchResult(\n      `/parties/${user.login}/${config.name}/env${\n        options.preview ? `?${urlSearchParams.toString()}` : \"\"\n      }`,\n      {\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n        },\n      }\n    );\n\n    const targetFileName =\n      fileName || options.config || getConfigPath() || \"partykit.json\";\n    if (!fs.existsSync(targetFileName)) {\n      console.log(`Creating ${targetFileName}...`);\n      fs.writeFileSync(targetFileName, \"{}\");\n    } else {\n      console.log(`Updating ${targetFileName}...`);\n    }\n\n    fs.writeFileSync(\n      targetFileName,\n      JSON.stringify(\n        {\n          ...JSON.parse(fs.readFileSync(targetFileName, \"utf8\")),\n          name: config.name,\n          vars: res,\n        },\n        null,\n        2\n      ) + \"\\n\"\n    );\n  },\n  async push(options: {\n    name: string | undefined;\n    config: string | undefined;\n    preview: string | undefined;\n  }) {\n    // get user details\n    const user = await getUser();\n\n    const config = getConfig(options.config, {\n      name: options.name,\n    });\n    if (!config.name) {\n      throw new Error(\"project name is missing\");\n    }\n\n    const urlSearchParams = new URLSearchParams();\n    if (options.preview) {\n      urlSearchParams.set(\"preview\", options.preview);\n    }\n\n    if (Object.keys(config.vars || {}).length === 0) {\n      console.warn(\"No environment variables to push, exiting...\");\n      return;\n    }\n\n    await fetchResult(\n      `/parties/${user.login}/${config.name}/env${\n        options.preview ? `?${urlSearchParams.toString()}` : \"\"\n      }`,\n      {\n        method: \"POST\",\n        body: JSON.stringify(config.vars || {}),\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n          \"Content-Type\": \"application/json\",\n        },\n      }\n    );\n\n    console.log(\"Pushed environment variables\");\n  },\n  async add(\n    key: string,\n    options: {\n      name: string | undefined;\n      // env: EnvironmentChoice;\n      config: string | undefined;\n      preview: string | undefined;\n    }\n  ) {\n    // get user details\n    const user = await getUser();\n\n    const config = getConfig(options.config, {\n      name: options.name,\n    });\n    if (!config.name) {\n      throw new Error(\"project name is missing\");\n    }\n\n    const { default: prompt } = await import(\"prompts\");\n\n    const { value } = !process.stdin.isTTY\n      ? // the value is being piped in\n        await new Promise<{ value: string }>((resolve, reject) => {\n          const stdin = process.openStdin();\n\n          let data = \"\";\n\n          stdin.on(\"data\", function (chunk) {\n            data += chunk;\n          });\n\n          stdin.on(\"end\", function () {\n            resolve({ value: data });\n          });\n\n          stdin.on(\"error\", function (err) {\n            reject(err);\n          });\n        })\n      : // the value is being entered manually\n        await prompt({\n          type: \"password\",\n          name: \"value\",\n          message: `Enter the value for ${key}`,\n        });\n\n    const urlSearchParams = new URLSearchParams();\n    if (options.preview) {\n      urlSearchParams.set(\"preview\", options.preview);\n    }\n\n    const res = await fetchResult(\n      `/parties/${user.login}/${config.name}/env/${key}${\n        options.preview ? `?${urlSearchParams.toString()}` : \"\"\n      }`,\n      {\n        method: \"POST\",\n        body: value,\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n        },\n      }\n    );\n\n    console.log(res);\n  },\n  async remove(\n    key: string | undefined,\n    options: {\n      name: string | undefined;\n      // env: EnvironmentChoice;\n      config: string | undefined;\n      preview: string | undefined;\n    }\n  ) {\n    // get user details\n    const user = await getUser();\n\n    const config = getConfig(options.config, {\n      name: options.name,\n    });\n    if (!config.name) {\n      throw new Error(\"project name is missing\");\n    }\n\n    const urlSearchParams = new URLSearchParams();\n    if (options.preview) {\n      urlSearchParams.set(\"preview\", options.preview);\n    }\n\n    if (!key) {\n      const { default: prompt } = await import(\"prompts\");\n\n      const { value } = await prompt({\n        type: \"confirm\",\n        name: \"value\",\n        message: `Are you sure you want to delete all environment variables?`,\n        initial: true,\n      });\n\n      if (!value) {\n        console.log(\"Aborted\");\n        return;\n      } else {\n        const res = await fetchResult(\n          `/parties/${user.login}/${config.name}/env${\n            options.preview ? `?${urlSearchParams.toString()}` : \"\"\n          }`,\n          {\n            method: \"DELETE\",\n            headers: {\n              Authorization: `Bearer ${user.access_token}`,\n            },\n          }\n        );\n        console.log(res);\n        return;\n      }\n    }\n\n    const res = await fetchResult(\n      `/parties/${user.login}/${config.name}/env/${key}${\n        options.preview ? `?${urlSearchParams.toString()}` : \"\"\n      }`,\n      {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${user.access_token}`,\n        },\n      }\n    );\n\n    console.log(res);\n  },\n};\n", "import assert from \"assert\";\nimport type { RequestInit } from \"undici\";\nimport { fetch } from \"undici\";\n\ndeclare const PARTYKIT_API_BASE: string | undefined;\nassert(PARTYKIT_API_BASE, \"PARTYKIT_API_BASE is not defined\");\n\nconst API_BASE = process.env.PARTYKIT_API_BASE || PARTYKIT_API_BASE;\n\nexport async function fetchResult<T>(\n  api: string,\n  options: RequestInit = {}\n): Promise<T> {\n  const res = await fetch(`${API_BASE}${api}`, {\n    ...options,\n    headers: {\n      ...(typeof options.body === \"string\"\n        ? { \"Content-Type\": \"application/json\" }\n        : {}),\n      Accept: \"application/json\",\n      ...options.headers,\n    },\n  });\n  if (res.ok) {\n    const resJson = (await res.json()) as T;\n    return resJson; // TODO: check json success/error response\n  } else {\n    let errorText;\n    try {\n      errorText = await res.text();\n    } catch (e) {\n      errorText = `${res.status} ${res.statusText}`;\n    }\n    throw new Error(errorText);\n  }\n}\n", "import type { MiniflareOptions } from \"miniflare\";\nimport { Log, Miniflare, TypedEventTarget } from \"miniflare\";\nimport { fileURLToPath } from \"url\";\nimport onExit from \"signal-exit\";\nimport type { Config } from \"./config\";\nimport { getConfig } from \"./config\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { execaCommand } from \"execa\";\nimport esbuild from \"esbuild\";\nimport type { BuildOptions } from \"esbuild\";\nimport chalk from \"chalk\";\nimport chokidar from \"chokidar\";\nimport crypto from \"crypto\";\nimport type { Abortable } from \"node:events\";\nimport { Suspense, useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { render } from \"ink\";\nimport useInspector from \"./inspect\";\nimport { fetch } from \"undici\";\n\nconst esbuildOptions: BuildOptions = {\n  format: \"esm\",\n  bundle: true,\n  write: false,\n  target: \"esnext\",\n  minify: true, // TODO: remove this once https://github.com/vercel/edge-runtime/issues/243 is fixed\n} as const;\n\ninterface ReloadedEventOptions {\n  url: URL;\n  // internalDurableObjects: CfDurableObject[];\n}\n\nclass ReloadedEvent extends Event implements ReloadedEventOptions {\n  readonly url: URL;\n  // readonly internalDurableObjects: CfDurableObject[];\n\n  constructor(type: \"reloaded\", options: ReloadedEventOptions) {\n    super(type);\n    this.url = options.url;\n    // this.internalDurableObjects = options.internalDurableObjects;\n  }\n}\n\ninterface ErrorEventOptions {\n  error: unknown;\n}\n\nclass ErrorEvent extends Event implements ErrorEventOptions {\n  readonly error: unknown;\n\n  constructor(type: \"error\", options: ErrorEventOptions) {\n    super(type);\n    this.error = options.error;\n  }\n}\n\ntype MiniflareServerEventMap = {\n  reloaded: ReloadedEvent;\n  error: ErrorEvent;\n};\n\nexport class MiniflareServer extends TypedEventTarget<MiniflareServerEventMap> {\n  #log = console.log;\n  #mf?: Miniflare;\n\n  async onBundleUpdate(\n    options: MiniflareOptions,\n    opts?: Abortable\n  ): Promise<void> {\n    if (opts?.signal?.aborted) return;\n    try {\n      if (opts?.signal?.aborted) return;\n      if (this.#mf === undefined) {\n        this.#mf = new Miniflare(options);\n      } else {\n        await this.#mf.setOptions(options);\n      }\n      const url = await this.#mf.ready;\n      if (opts?.signal?.aborted) return;\n      const event = new ReloadedEvent(\"reloaded\", {\n        url,\n        // internalDurableObjects: internalObjects,\n      });\n      this.dispatchEvent(event);\n    } catch (error: unknown) {\n      this.dispatchEvent(new ErrorEvent(\"error\", { error }));\n    }\n  }\n\n  onDispose = async (): Promise<void> => {\n    await this.#mf?.dispose();\n    this.#mf = undefined;\n  };\n}\n\nexport async function devTest(props: DevProps) {\n  return new Promise<{\n    close: () => void;\n  }>((resolve) => {\n    const { unmount } = render(\n      <Dev\n        {...props}\n        onReady={() => {\n          resolve({\n            close: () => {\n              console.log(\"close\");\n              unmount();\n            },\n          });\n        }}\n      />\n    );\n  });\n}\n\nexport type DevProps = {\n  main?: string;\n  port?: number;\n  assets?: string;\n  config?: string;\n  vars?: Record<string, string>;\n  define?: Record<string, string>;\n  onReady?: (host: string, port: number) => void;\n};\n\nexport function Dev(props: DevProps) {\n  return (\n    <Suspense>\n      <DevImpl {...props} />\n    </Suspense>\n  );\n}\n\nfunction DevImpl(props: DevProps) {\n  const { inspectorUrl } = useDev(props);\n\n  useInspector({\n    port: 9230,\n    inspectorUrl,\n    logToTerminal: true,\n    sourceMapPath: undefined,\n    sourceMapMetadata: undefined,\n  });\n  return null;\n}\n\n// https://chromedevtools.github.io/devtools-protocol/#endpoints\ninterface InspectorWebSocketTarget {\n  id: string;\n  title: string;\n  type: \"node\";\n  description: string;\n  webSocketDebuggerUrl: string;\n  devtoolsFrontendUrl: string;\n  devtoolsFrontendUrlCompat: string;\n  faviconUrl: string;\n  url: string;\n}\n\nfunction useDev(options: DevProps): { inspectorUrl: string | undefined } {\n  const [config] = useState<Config>(() =>\n    getConfig(\n      options.config,\n      {\n        main: options.main,\n        vars: options.vars,\n        define: options.define,\n        assets: options.assets,\n        port: options.port,\n      },\n      { readEnvLocal: true }\n    )\n  );\n  const [server] = useState(() => new MiniflareServer());\n\n  const [inspectorUrl, setInspectorUrl] = useState<string | undefined>(\n    undefined\n  );\n\n  if (!config.main) {\n    throw new Error(\n      'Missing entry point, please specify \"main\" in your config'\n    );\n  }\n\n  useEffect(() => {\n    if (config.assets) {\n      console.warn(\"Warning: serving assets are not yet supported in dev mode\");\n    }\n\n    async function runBuild() {\n      let isFirstBuild = true;\n\n      let wasmModules: Record<string, string> = {};\n\n      const workerFacade = fs.readFileSync(\n        fileURLToPath(\n          path.join(path.dirname(import.meta.url), \"../facade/generated.js\")\n        ),\n        \"utf8\"\n      );\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const absoluteScriptPath = path.join(process.cwd(), config.main!);\n\n      const ctx = await esbuild.context({\n        stdin: {\n          contents: workerFacade.replace(\"__WORKER__\", absoluteScriptPath),\n          resolveDir: process.cwd(),\n          // TODO: setting a sourcefile name crashes the whole thing???\n          // sourcefile: \"./\" + path.relative(process.cwd(), scriptPath),\n        },\n        ...esbuildOptions,\n        format: \"esm\",\n        sourcemap: true,\n        define: {\n          ...esbuildOptions.define,\n          ...config.define,\n        },\n        plugins: [\n          {\n            name: \"partykit\",\n            setup(build) {\n              build.onEnd(async (result) => {\n                if (result.errors.length > 0) return;\n                if (!result || !result.outputFiles) {\n                  console.error(chalk.red(\"Build failed: no result\"));\n                  return;\n                }\n\n                if (isFirstBuild) {\n                  isFirstBuild = false;\n                  console.log(\n                    chalk.green(\"Build succeeded, starting server...\")\n                  );\n                } else {\n                  console.log(\n                    chalk.green(\"Build succeeded, starting server...\")\n                  );\n                }\n\n                const code = result.outputFiles[0].text;\n\n                return new Promise<void>((resolve) => {\n                  server.addEventListener(\"reloaded\", () => resolve(), {\n                    once: true,\n                  });\n\n                  void server.onBundleUpdate({\n                    log: new Log(5, { prefix: \"pk\" }),\n                    // verbose: true,\n                    inspectorPort: 9229,\n\n                    compatibilityDate: \"2021-05-26\",\n                    compatibilityFlags: [\"nodejs_compat\"],\n                    port: config.port || 1999,\n                    durableObjects: {\n                      MAIN_DO: \"MainDO\",\n                    },\n                    // @ts-expect-error miniflare's types are wrong\n                    modules: [\n                      {\n                        type: \"ESModule\",\n                        path: absoluteScriptPath,\n                        contents: code,\n                      },\n                      ...Object.entries(wasmModules).map(([name, p]) => ({\n                        type: \"CompiledWasm\",\n                        path: name,\n                        contents: fs.readFileSync(p),\n                      })),\n                    ],\n                    modulesRoot: process.cwd(),\n                    script: code,\n                  });\n                });\n              });\n            },\n          },\n          {\n            name: \"partykit-wasm-dev\",\n            setup(build) {\n              build.onStart(() => {\n                wasmModules = {};\n              });\n\n              build.onResolve({ filter: /\\.wasm(\\?module)?$/ }, (args) => {\n                const filePath = path.join(\n                  args.resolveDir,\n                  args.path.replace(/\\?module$/, \"\")\n                );\n                const fileContent = fs.readFileSync(filePath);\n                const fileHash = crypto\n                  .createHash(\"sha1\")\n                  .update(fileContent)\n                  .digest(\"hex\");\n                const fileName = `./${fileHash}-${path\n                  .basename(args.path)\n                  .replace(/\\?module$/, \"\")}`;\n\n                wasmModules[fileName] = filePath;\n\n                return {\n                  path: fileName, // change the reference to the changed module\n                  external: true, // not an external in dev, we swap it with an identifier\n                  namespace: `partykit-module-wasm-dev`, // just a tag, this isn't strictly necessary\n                  watchFiles: [filePath], // we also add the file to esbuild's watch list\n                };\n              });\n            },\n          },\n        ],\n      });\n\n      if (config.build?.command) {\n        const buildCommand = config.build.command;\n        const buildCwd = config.build.cwd;\n        // run a build\n        // start a watcher\n        // on change, run a build\n\n        await execaCommand(buildCommand, {\n          shell: true,\n          // we keep these two as \"inherit\" so that\n          // logs are still visible.\n          stdout: \"inherit\",\n          stderr: \"inherit\",\n          ...(buildCwd && { cwd: buildCwd }),\n        });\n\n        const _watcher = chokidar\n          .watch(config.build.watch || path.join(process.cwd(), \"./src\"), {\n            persistent: true,\n            ignoreInitial: true,\n          })\n          .on(\"all\", async (_event, _path) => {\n            execaCommand(buildCommand, {\n              shell: true,\n              // we keep these two as \"inherit\" so that\n              // logs are still visible.\n              stdout: \"inherit\",\n              stderr: \"inherit\",\n              ...(buildCwd && { cwd: buildCwd }),\n            }).catch((err) => {\n              console.error(chalk.red(\"Custom build failed\"), err);\n            });\n          });\n      }\n\n      // should we call watcher.close() on exit?\n\n      await ctx.watch(); // turn on watch mode\n    }\n    runBuild().catch((error) => {\n      console.error(error);\n      process.exit(1);\n    });\n  }, [config, server]);\n\n  useEffect(() => {\n    server.addEventListener(\"reloaded\", async (event) => {\n      // await maybeRegisterLocalWorker(event, props.name);\n      options.onReady?.(event.url.hostname, parseInt(event.url.port));\n\n      // let inspectorUrl: string | undefined;\n\n      try {\n        // Fetch the inspector JSON response from the DevTools Inspector protocol\n        const jsonUrl = `http://127.0.0.1:9229/json`;\n        const res = await fetch(jsonUrl);\n        const body = (await res.json()) as InspectorWebSocketTarget[];\n        const debuggerUrl = body?.find(({ id }) =>\n          id.startsWith(\"core:user\")\n        )?.webSocketDebuggerUrl;\n        if (debuggerUrl === undefined) {\n          setInspectorUrl(undefined);\n        } else {\n          const url = new URL(debuggerUrl);\n          // Force inspector URL to be different on each reload so `useEffect`\n          // in `useInspector` is re-run to connect to newly restarted\n          // `workerd` server when updating options. Can't use a query param\n          // here as that seems to cause an infinite connection loop, can't\n          // use a hash as those are forbidden by `ws`, so username it is.\n          url.username = `${Date.now()}-${Math.floor(\n            Math.random() * Number.MAX_SAFE_INTEGER\n          )}`;\n          // console.log(\"\u2394 Debugger URL:\", url.toString());\n          setInspectorUrl(url.toString());\n        }\n      } catch (error: unknown) {\n        console.error(\"Error attempting to retrieve debugger URL:\", error);\n      }\n\n      // resolve({\n      //   inspectorUrl,\n      //   close: () => {\n      //     abortController.abort();\n      //     console.log(\"\u2394 Shutting down local server...\");\n      //     // Initialisation errors are also thrown asynchronously by dispose().\n      //     // The `addEventListener(\"error\")` above should've caught them though.\n      //     server.onDispose().catch(() => {\n      //       // Ignore errors\n      //     });\n      //     removeMiniflareServerExitListener();\n      //   },\n      // });\n    });\n    server.addEventListener(\"error\", ({ error }) => {\n      console.error(\"Error reloading local server:\", error);\n      // reject(error);\n    });\n\n    // const abortController = new AbortController();\n  }, [inspectorUrl, options, server]);\n\n  useEffect(() => {\n    return () => {\n      const removeMiniflareServerExitListener = onExit(() => {\n        console.log(chalk.dim(\"\u2394 Shutting down local server...\"));\n        void server.onDispose();\n      });\n\n      server\n        .onDispose()\n        .then(() => {\n          console.log(chalk.dim(\"\u2394 Local server shut down....\"));\n        })\n        .catch((err) => {\n          console.error(\"Error disposing local server:\", err);\n          //       // Ignore errors\n        });\n      removeMiniflareServerExitListener();\n    };\n  }, [server]);\n\n  return {\n    inspectorUrl,\n  };\n}\n", "import fs from \"fs\";\nimport os from \"os\";\nimport path from \"path\";\nimport * as dotenv from \"dotenv\";\nimport { z } from \"zod\";\nimport JSON5 from \"json5\";\nimport chalk from \"chalk\";\nimport findConfig from \"find-config\";\nimport { fetch } from \"undici\";\nimport open from \"open\";\n\nconst userConfigSchema = z.object({\n  login: z.string(),\n  access_token: z.string(),\n  type: z.string(),\n});\n\nexport type UserConfig = z.infer<typeof userConfigSchema>;\n\nconst USER_CONFIG_PATH = path.join(os.homedir(), \".partykit\", \"config.json\");\n\nexport async function getUser(): Promise<UserConfig> {\n  let userConfig;\n  try {\n    userConfig = getUserConfig();\n    // this isn't super useful since we're validating on the server\n    // if (!(await validateUserConfig(userConfig))) {\n    //   console.log(\"failed\");\n    //   throw new Error(\"Invalid user config\");\n    // }\n  } catch (e) {\n    console.log(\"could not get user details, attempting to login\");\n    await fetchUserConfig();\n    userConfig = getUserConfig();\n  }\n  return userConfig;\n}\n\nexport function getUserConfig(): UserConfig {\n  if (process.env.GITHUB_TOKEN && process.env.GITHUB_LOGIN) {\n    return {\n      login: process.env.GITHUB_LOGIN,\n      access_token: process.env.GITHUB_TOKEN,\n      type: \"github\",\n    };\n  }\n\n  if (!fs.existsSync(USER_CONFIG_PATH)) {\n    throw new Error(\"user config not available\");\n  }\n  const config = JSON5.parse(fs.readFileSync(USER_CONFIG_PATH, \"utf8\"));\n  return userConfigSchema.parse(config);\n}\n\n// this isn't super useful since we're validating on the server\n// export async function validateUserConfig(config: UserConfig): Promise<boolean> {\n//   const res = await fetch(`https://api.github.com/user`, {\n//     headers: {\n//       Authorization: `Bearer ${config.access_token}`,\n//     },\n//   });\n//   if (\n//     res.ok &&\n//     config.login &&\n//     // eslint-disable-next-line @typescript-eslint/no-explicit-any\n//     ((await res.json()) as any).login === config.login\n//   ) {\n//     return true;\n//   }\n//   return false;\n// }\n\nconst GITHUB_APP_ID = \"670a9f76d6be706f5209\";\n\nexport async function fetchUserConfig(): Promise<void> {\n  // run github's oauth device flow\n  // https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps#device-flow\n  const res = await fetch(\"https://github.com/login/device/code\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      client_id: GITHUB_APP_ID,\n    }),\n  });\n\n  if (!res.ok) {\n    throw new Error(\n      `Failed to get device code: ${res.status} ${res.statusText}`\n    );\n  }\n\n  const { device_code, user_code, verification_uri, expires_in, interval } =\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (await res.json()) as any;\n\n  console.log(\n    `Please visit ${chalk.bold(\n      verification_uri\n    )} and paste the code ${chalk.bold(user_code)}`\n  );\n  console.log(`This code will expire in ${expires_in} seconds`);\n  console.log(`Waiting for you to authorize...`);\n\n  // we do this because for some reason the clipboardy package doesn't work\n  // with a direct import up top\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore kill me, bring me sweet release of death please\n  const { default: clipboardy } = await import(\"clipboardy\");\n  clipboardy.writeSync(user_code);\n\n  open(verification_uri).catch(() => {\n    console.error(\n      `Failed to open ${verification_uri}, please copy the code ${user_code} to your clipboard`\n    );\n  });\n\n  const start = Date.now();\n  while (Date.now() - start < expires_in * 1000) {\n    const res = await fetch(\"https://github.com/login/oauth/access_token\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        client_id: GITHUB_APP_ID,\n        device_code,\n        grant_type: \"urn:ietf:params:oauth:grant-type:device_code\",\n      }),\n    });\n\n    if (!res.ok) {\n      throw new Error(\n        `Failed to get access token: ${res.status} ${res.statusText}`\n      );\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const { access_token, error } = (await res.json()) as any;\n\n    // now get the username\n    const githubUserDetails = (await (\n      await fetch(\"https://api.github.com/user\", {\n        headers: {\n          Authorization: `Bearer ${access_token}`,\n        },\n      })\n    ).json()) as { login: string };\n\n    if (access_token) {\n      // now write the token to the config file at ~/.partykit/config.json\n      fs.mkdirSync(path.dirname(USER_CONFIG_PATH), { recursive: true });\n      fs.writeFileSync(\n        USER_CONFIG_PATH,\n        JSON.stringify(\n          userConfigSchema.parse({\n            access_token,\n            login: githubUserDetails.login,\n            type: \"github\",\n          }),\n          null,\n          2\n        )\n      );\n      return;\n    }\n    if (error === \"authorization_pending\") {\n      // try again in a bit\n      await new Promise((resolve) => setTimeout(resolve, interval * 1000));\n      continue;\n    }\n    throw new Error(`Unexpected error: ${error}`);\n  }\n}\n\nexport async function logout() {\n  if (fs.existsSync(USER_CONFIG_PATH)) {\n    fs.rmSync(USER_CONFIG_PATH);\n  }\n  // TODO: delete the token from github\n}\n\nconst configSchema = z\n  .object({\n    account: z.string().optional(),\n    name: z.string().optional(),\n    main: z.string().optional(),\n    port: z.number().optional(),\n    assets: z.string().optional(),\n    vars: z.record(z.unknown()).optional(),\n    define: z.record(z.string()).optional(),\n    build: z\n      .object({\n        command: z.string().optional(),\n        cwd: z.string().optional(),\n        watch: z.string().optional(),\n      })\n      .strict()\n      .optional(),\n    // env: z\n    //   .record(\n    //     z.object({\n    //       vars: z.record(z.unknown()).optional(),\n    //     })\n    //   )\n    //   .optional(),\n  })\n  .strict();\n\nexport type Config = z.infer<typeof configSchema>;\n\nexport type ConfigOverrides = Config; // Partial? what of .env?\n\nexport function getConfigPath() {\n  return (\n    findConfig(\"partykit.json\", { home: false }) ||\n    findConfig(\"partykit.json5\", { home: false }) ||\n    findConfig(\"partykit.jsonc\", { home: false })\n  );\n}\n\nexport function getConfig(\n  configPath: string | undefined | null,\n  overrides: ConfigOverrides = {},\n  options?: { readEnvLocal?: boolean }\n): Config {\n  const envPath = findConfig(\".env\");\n  const envLocalPath = findConfig(\".env.local\");\n  let envVars: Record<string, string> = {};\n  if (envPath) {\n    console.log(\n      `Loading environment variables from ${path.relative(\n        process.cwd(),\n        envPath\n      )}`\n    );\n    envVars = dotenv.parse(fs.readFileSync(envPath, \"utf8\"));\n  }\n  if (envLocalPath && options?.readEnvLocal) {\n    console.log(\n      `Loading environment variables from ${path.relative(\n        process.cwd(),\n        envLocalPath\n      )}`\n    );\n    envVars = {\n      ...envVars,\n      ...dotenv.parse(fs.readFileSync(envLocalPath, \"utf8\")),\n    };\n  }\n\n  configPath ||= getConfigPath();\n\n  // do a quick check of the overrides\n  configSchema.parse(overrides);\n\n  if (!configPath) {\n    if (overrides.account) {\n      console.warn('configuration field \"account\" is not yet operational');\n    }\n\n    let packageJsonConfig = {} as ConfigOverrides;\n    const packageJsonPath = findConfig(\"package.json\", { home: false });\n    if (packageJsonPath) {\n      packageJsonConfig =\n        JSON.parse(fs.readFileSync(packageJsonPath, \"utf8\")).partykit || {};\n      // @ts-expect-error partykit is our special field in package.json\n      if (packageJsonConfig.partykit) {\n        console.log(\n          `Loading config from ${path.relative(\n            process.cwd(),\n            packageJsonPath\n          )}#partykit`\n        );\n      }\n    }\n\n    const config = configSchema.parse({\n      // defaults?\n      ...packageJsonConfig,\n      ...overrides,\n      vars: {\n        ...packageJsonConfig.vars,\n        ...envVars,\n        ...overrides.vars,\n      },\n      define: {\n        ...packageJsonConfig.define,\n        ...overrides.define,\n      },\n    });\n\n    if (config.main) {\n      // make the path absolute\n      const absoluteMainPath = path.isAbsolute(config.main)\n        ? config.main\n        : path.join(process.cwd(), config.main);\n\n      if (!fs.existsSync(absoluteMainPath)) {\n        throw new Error(`Could not find main: ${config.main}`);\n      } else {\n        config.main = \"./\" + path.relative(process.cwd(), absoluteMainPath);\n      }\n    }\n\n    return config;\n  }\n  console.log(\n    `Loading config from ${path.relative(process.cwd(), configPath)}`\n  );\n\n  const parsedConfig = JSON5.parse(fs.readFileSync(configPath, \"utf8\"));\n\n  // do a quick check of the parsed object\n  configSchema.parse(parsedConfig);\n\n  const config = configSchema.parse({\n    ...overrides,\n    ...parsedConfig,\n    vars: {\n      ...parsedConfig.vars,\n      ...envVars,\n      ...overrides.vars,\n    },\n    define: {\n      ...parsedConfig.define,\n      ...overrides.define,\n    },\n  });\n\n  if (config.account) {\n    console.warn('configuration field \"account\" is not yet operational');\n  }\n\n  if (config.main) {\n    if (overrides.main) {\n      const absoluteMainPath = path.isAbsolute(overrides.main)\n        ? overrides.main\n        : path.join(process.cwd(), overrides.main);\n      if (!fs.existsSync(absoluteMainPath)) {\n        throw new Error(`Could not find main: ${overrides.main}`);\n      } else {\n        config.main = \"./\" + path.relative(process.cwd(), absoluteMainPath);\n      }\n    } else if (parsedConfig.main) {\n      const absoluteMainPath = path.isAbsolute(parsedConfig.main)\n        ? parsedConfig.main\n        : path.join(path.dirname(configPath), parsedConfig.main);\n      if (!fs.existsSync(absoluteMainPath)) {\n        throw new Error(`Could not find main: ${parsedConfig.main}`);\n      } else {\n        config.main = \"./\" + path.relative(process.cwd(), absoluteMainPath);\n      }\n    }\n  }\n\n  return config;\n}\n", "import { readFileSync } from \"fs\";\nimport { readFile } from \"fs/promises\";\nimport assert from \"node:assert\";\nimport { createServer } from \"node:http\";\nimport os from \"node:os\";\nimport { URL } from \"node:url\";\nimport path from \"path\";\nimport open from \"open\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { SourceMapConsumer } from \"source-map\";\nimport WebSocket, { WebSocketServer } from \"ws\";\nimport { version } from \"../package.json\";\nimport { createServer as createHttpServer } from \"node:http\";\nimport { createHttpTerminator } from \"http-terminator\";\n\nimport type Protocol from \"devtools-protocol\";\nimport type { IncomingMessage, Server, ServerResponse } from \"node:http\";\nimport type { MessageEvent } from \"ws\";\n\nconst logger = console;\n\n/**\n * A helper function that waits for a port to be available.\n */\nexport async function waitForPortToBeAvailable(\n  port: number,\n  options: { retryPeriod: number; timeout: number; abortSignal: AbortSignal }\n): Promise<void> {\n  return new Promise((resolve, reject) => {\n    options.abortSignal.addEventListener(\"abort\", () => {\n      const abortError = new Error(\"waitForPortToBeAvailable() aborted\");\n      (abortError as Error & { code: string }).code = \"ABORT_ERR\";\n      doReject(abortError);\n    });\n\n    const timeout = setTimeout(() => {\n      doReject(new Error(`Timed out waiting for port ${port}`));\n    }, options.timeout);\n\n    const interval = setInterval(checkPort, options.retryPeriod);\n    checkPort();\n\n    function doResolve() {\n      clearTimeout(timeout);\n      clearInterval(interval);\n      resolve();\n    }\n\n    function doReject(err: unknown) {\n      clearInterval(interval);\n      clearTimeout(timeout);\n      reject(err);\n    }\n\n    function checkPort() {\n      if (port === 0) {\n        doResolve();\n        return;\n      }\n\n      // Testing whether a port is 'available' involves simply\n      // trying to make a server listen on that port, and retrying\n      // until it succeeds.\n      const server = createHttpServer();\n      const terminator = createHttpTerminator({\n        server,\n        gracefulTerminationTimeout: 0, // default 1000\n      });\n\n      server.on(\"error\", (err) => {\n        // @ts-expect-error non standard property on Error\n        if (err.code !== \"EADDRINUSE\") {\n          doReject(err);\n        }\n      });\n      server.listen(port, () =>\n        terminator\n          .terminate()\n          .then(doResolve, () =>\n            logger.error(\"Failed to terminate the port checker.\")\n          )\n      );\n    }\n  });\n}\n\n/**\n * `useInspector` is a hook for debugging Workers applications\n *  when using `wrangler dev`.\n *\n * When we start a session with `wrangler dev`, the Workers platform\n * also exposes a debugging websocket that implements the DevTools\n * Protocol. While we could just start up DevTools and connect to this\n * URL, that URL changes every time we make a change to the\n * worker, or when the session expires. Instead, we start up a proxy\n * server locally that acts as a bridge between the remote DevTools\n * server and the local DevTools instance. So whenever the URL changes,\n * we can can silently connect to it and keep the local DevTools instance\n * up to date. Further, we also intercept these messages and selectively\n * log them directly to the terminal (namely, calls to `console.<x>`,\n * and exceptions)\n */\n\n/**\n * TODO:\n * - clear devtools whenever we save changes to the worker\n * - clear devtools when we switch between local/remote modes\n * - handle more methods from console\n */\n\n// Information about Wrangler's bundling process that needs passsed through\n// for DevTools sourcemap transformation\nexport interface SourceMapMetadata {\n  tmpDir: string;\n  entryDirectory: string;\n}\n\ninterface InspectorProps {\n  /**\n   * The port that the local proxy server should listen on.\n   */\n  port: number;\n  /**\n   * The websocket URL exposed by Workers that the inspector should connect to.\n   */\n  inspectorUrl: string | undefined;\n  /**\n   * Whether console statements and exceptions should be logged to the terminal.\n   * (We don't log them in local mode because they're already getting\n   * logged to the terminal by nature of them actually running in node locally.)\n   */\n  logToTerminal: boolean;\n  /**\n   * Sourcemap path, so that stacktraces can be interpretted\n   */\n  sourceMapPath: string | undefined;\n\n  sourceMapMetadata: SourceMapMetadata | undefined;\n\n  host?: string;\n\n  name?: string;\n}\n\nexport default function useInspector(props: InspectorProps) {\n  /** A unique ID for this session. */\n  const inspectorIdRef = useRef(randomId());\n\n  /** The websocket from the devtools instance. */\n  const [localWebSocket, setLocalWebSocket] = useState<WebSocket>();\n  /**  The websocket from the edge */\n  const [remoteWebSocket, setRemoteWebSocket] = useState<WebSocket>();\n\n  /**\n   *  The local proxy server that acts as the bridge between\n   *  the remote websocket and the local DevTools instance.\n   */\n  const serverRef = useRef<Server>();\n  if (serverRef.current === undefined) {\n    serverRef.current = createServer(\n      (req: IncomingMessage, res: ServerResponse) => {\n        switch (req.url) {\n          // We implement a couple of well known end points\n          // that are queried for metadata by chrome://inspect\n          case \"/json/version\":\n            res.setHeader(\"Content-Type\", \"application/json\");\n            res.end(\n              JSON.stringify({\n                Browser: `wrangler/v${version}`,\n                // TODO: (someday): The DevTools protocol should match that of Edge Worker.\n                // This could be exposed by the preview API.\n                \"Protocol-Version\": \"1.3\",\n              })\n            );\n            return;\n          case \"/json\":\n          case \"/json/list\":\n            {\n              res.setHeader(\"Content-Type\", \"application/json\");\n              const localHost = `localhost:${props.port}/ws`;\n              const devtoolsFrontendUrl = `devtools://devtools/bundled/js_app.html?experiments=true&v8only=true&ws=${localHost}`;\n              const devtoolsFrontendUrlCompat = `devtools://devtools/bundled/inspector.html?experiments=true&v8only=true&ws=${localHost}`;\n              res.end(\n                JSON.stringify([\n                  {\n                    id: inspectorIdRef.current,\n                    type: \"node\",\n                    description: \"workers\",\n                    webSocketDebuggerUrl: `ws://${localHost}`,\n                    devtoolsFrontendUrl,\n                    devtoolsFrontendUrlCompat,\n                    // Below are fields that are visible in the DevTools UI.\n                    title: \"Cloudflare Worker\",\n                    faviconUrl: \"https://workers.cloudflare.com/favicon.ico\",\n                    url:\n                      \"https://\" +\n                      (remoteWebSocket\n                        ? new URL(remoteWebSocket.url).host\n                        : \"workers.dev\"),\n                  },\n                ])\n              );\n            }\n            return;\n          default:\n            break;\n        }\n      }\n    );\n  }\n  const server = serverRef.current;\n\n  /**\n   * The websocket server that runs on top of the proxy server.\n   */\n  const wsServerRef = useRef<WebSocketServer>();\n  if (wsServerRef.current === undefined) {\n    wsServerRef.current = new WebSocketServer({\n      server,\n      clientTracking: true,\n    });\n  }\n  const wsServer = wsServerRef.current;\n\n  wsServer.on(\"connection\", (ws: WebSocket) => {\n    if (wsServer.clients.size > 1) {\n      /** We only want to have one active Devtools instance at a time. */\n      logger.error(\n        \"Tried to open a new devtools window when a previous one was already open.\"\n      );\n      ws.close(1013, \"Too many clients; only one can be connected at a time\");\n    } else {\n      // Since Wrangler proxies the inspector, reloading Chrome DevTools won't trigger debugger initialisation events (because it's connecting to an extant session).\n      // This sends a `Debugger.disable` message to the remote when a new WebSocket connection is initialised,\n      // with the assumption that the new connection will shortly send a `Debugger.enable` event and trigger re-initialisation.\n      // The key initialisation messages that are needed are the `Debugger.scriptParsed events`.\n      remoteWebSocket?.send(\n        JSON.stringify({\n          // This number is arbitrary, and is chosen to be high so as not to conflict with messages that DevTools might actually send.\n          // For completeness, these options don't work: 0, -1, or Number.MAX_SAFE_INTEGER\n          id: 100_000_000,\n          method: \"Debugger.disable\",\n        })\n      );\n      // As promised, save the created websocket in a state hook\n      setLocalWebSocket(ws);\n\n      ws.addEventListener(\"close\", () => {\n        // And and cleanup when devtools closes\n        setLocalWebSocket(undefined);\n      });\n    }\n  });\n\n  /**\n   * We start and stop the server in an effect to take advantage\n   * of the component lifecycle. Convenient.\n   */\n  useEffect(() => {\n    const abortController = new AbortController();\n    async function startInspectorProxy() {\n      await waitForPortToBeAvailable(props.port, {\n        retryPeriod: 200,\n        timeout: 2000,\n        abortSignal: abortController.signal,\n      });\n      server.listen(props.port);\n    }\n    startInspectorProxy().catch((err) => {\n      if ((err as { code: string }).code !== \"ABORT_ERR\") {\n        logger.error(\"Failed to start inspector:\", err);\n      }\n    });\n    return () => {\n      server.close();\n      // Also disconnect any open websockets/devtools connections\n\n      wsServer.clients.forEach((ws) => {\n        ws.close();\n      });\n      wsServer.close();\n      abortController.abort();\n    };\n  }, [props.port, server, wsServer]);\n\n  /**\n   * When connecting to the remote websocket, if we don't start either\n   * the devtools instance or make an actual request to the worker in time,\n   * then the connecting process can error out. When this happens, we\n   * want to simply retry the connection. We use a state hook to trigger retries\n   * of the effect that connects to the remote websocket.\n   */\n  const [\n    retryRemoteWebSocketConnectionSigil,\n    setRetryRemoteWebSocketConnectionSigil,\n  ] = useState<number>(0);\n  function retryRemoteWebSocketConnection() {\n    setRetryRemoteWebSocketConnectionSigil((x) => x + 1);\n  }\n\n  /** A simple incrementing id to attach to messages we send to devtools */\n  const messageCounterRef = useRef(1);\n\n  // This effect tracks the connection to the remote websocket\n  // (stored in, no surprises here, `remoteWebSocket`)\n  useEffect(() => {\n    if (!props.inspectorUrl) {\n      return;\n    }\n\n    // The actual websocket instance\n    const ws = new WebSocket(props.inspectorUrl);\n    setRemoteWebSocket(ws);\n\n    /**\n     * A handle to the interval we run to keep the websocket alive\n     */\n    let keepAliveInterval: NodeJS.Timer;\n\n    /**\n     * Test if the websocket is closed\n     */\n    function isClosed() {\n      return (\n        ws.readyState === WebSocket.CLOSED ||\n        ws.readyState === WebSocket.CLOSING\n      );\n    }\n\n    /**\n     * Send a message to the remote websocket\n     */\n    function send(event: Record<string, unknown>): void {\n      if (!isClosed()) {\n        ws.send(JSON.stringify(event));\n      }\n    }\n\n    /**\n     * Closes the inspector.\n     */\n    function close(): void {\n      if (!isClosed() && ws.readyState !== WebSocket.CONNECTING) {\n        try {\n          ws.close();\n        } catch (err) {\n          // Closing before the websocket is ready will throw an error.\n        }\n      }\n    }\n\n    /**\n     * Since we have a handle on the remote websocket, we can tap\n     * into its events, and log any pertinent ones directly to\n     * the terminal (which means you have insight into your worker\n     * without having to open the devtools).\n     */\n    if (props.logToTerminal) {\n      ws.addEventListener(\"message\", async (event: MessageEvent) => {\n        if (typeof event.data === \"string\") {\n          const evt = JSON.parse(event.data);\n          if (evt.method === \"Runtime.exceptionThrown\") {\n            const params = evt.params as Protocol.Runtime.ExceptionThrownEvent;\n\n            // Parse stack trace with source map.\n            if (props.sourceMapPath) {\n              // Parse in the sourcemap\n              const mapContent = JSON.parse(\n                await readFile(props.sourceMapPath, \"utf-8\")\n              );\n\n              // Create the lines for the exception details log\n              const exceptionLines = [\n                params.exceptionDetails.exception?.description?.split(\"\\n\")[0],\n              ];\n\n              await SourceMapConsumer.with(\n                mapContent,\n                null,\n                async (consumer) => {\n                  // Pass each of the callframes into the consumer, and format the error\n                  const stack = params.exceptionDetails.stackTrace?.callFrames;\n\n                  stack?.forEach(\n                    ({ functionName, lineNumber, columnNumber }, i) => {\n                      try {\n                        if (lineNumber) {\n                          // The line and column numbers in the stackTrace are zero indexed,\n                          // whereas the sourcemap consumer indexes from one.\n                          const pos = consumer.originalPositionFor({\n                            line: lineNumber + 1,\n                            column: columnNumber + 1,\n                          });\n\n                          // Print out line which caused error:\n                          if (i === 0 && pos.source && pos.line) {\n                            const fileSource = consumer.sourceContentFor(\n                              pos.source\n                            );\n                            const fileSourceLine =\n                              fileSource?.split(\"\\n\")[pos.line - 1] || \"\";\n                            exceptionLines.push(fileSourceLine.trim());\n\n                            // If we have a column, we can mark the position underneath\n                            if (pos.column) {\n                              exceptionLines.push(\n                                `${\" \".repeat(\n                                  pos.column - fileSourceLine.search(/\\S/)\n                                )}^`\n                              );\n                            }\n                          }\n\n                          // From the way esbuild implements the \"names\" field:\n                          // > To save space, the original name is only recorded when it's different from the final name.\n                          // however, source-map consumer does not handle this\n                          if (pos && pos.line != null) {\n                            const convertedFnName =\n                              pos.name || functionName || \"\";\n                            exceptionLines.push(\n                              `    at ${convertedFnName} (${pos.source}:${pos.line}:${pos.column})`\n                            );\n                          }\n                        }\n                      } catch {\n                        // Line failed to parse through the sourcemap consumer\n                        // We should handle this better\n                      }\n                    }\n                  );\n                }\n              );\n\n              // Log the parsed stacktrace\n              logger.error(\n                params.exceptionDetails.text,\n                exceptionLines.join(\"\\n\")\n              );\n            } else {\n              // We log the stacktrace to the terminal\n              logger.error(\n                params.exceptionDetails.text,\n                params.exceptionDetails.exception?.description ?? \"\"\n              );\n            }\n          }\n          if (evt.method === \"Runtime.consoleAPICalled\") {\n            logConsoleMessage(\n              evt.params as Protocol.Runtime.ConsoleAPICalledEvent\n            );\n          }\n        } else {\n          // We should never get here, but who know is 2022...\n          logger.error(\"Unrecognised devtools event:\", event);\n        }\n      });\n    }\n\n    ws.addEventListener(\"open\", () => {\n      send({ method: \"Runtime.enable\", id: messageCounterRef.current });\n      // TODO: This doesn't actually work. Must fix.\n      send({ method: \"Network.enable\", id: messageCounterRef.current++ });\n\n      keepAliveInterval = setInterval(() => {\n        send({\n          method: \"Runtime.getIsolateId\",\n          id: messageCounterRef.current++,\n        });\n      }, 10_000);\n    });\n\n    ws.on(\"unexpected-response\", () => {\n      logger.log(\"Waiting for connection...\");\n      /**\n       * This usually means the worker is not \"ready\" yet\n       * so we'll just retry the connection process\n       */\n      retryRemoteWebSocketConnection();\n    });\n\n    ws.addEventListener(\"close\", () => {\n      clearInterval(keepAliveInterval);\n    });\n\n    return () => {\n      // clean up! Let's first stop the heartbeat interval\n      clearInterval(keepAliveInterval);\n      // Then we'll send a message to the devtools instance to\n      // tell it to clear the console.\n      wsServer.clients.forEach((client) => {\n        // We could've used `localSocket` here, but\n        // then we would have had to add it to the effect\n        // change detection array, which would have made a\n        // bunch of other stuff complicated. So we'll just\n        // cycle through all of the server's connected clients\n        // (in practice, there should only be one or zero) and send\n        // the Log.clear message.\n        client.send(\n          JSON.stringify({\n            // TODO: This doesn't actually work. Must fix.\n            method: \"Log.clear\",\n            // we can disable the next eslint warning since\n            // we're referencing a ref that stays alive\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n            id: messageCounterRef.current++,\n            params: {},\n          })\n        );\n      });\n      // Finally, we'll close the websocket\n      close();\n      // And we'll clear `remoteWebsocket`\n      setRemoteWebSocket(undefined);\n    };\n  }, [\n    props.inspectorUrl,\n    props.logToTerminal,\n    props.sourceMapPath,\n    wsServer,\n    // We use a state value as a sigil to trigger a retry of the\n    // remote websocket connection. It's not used inside the effect,\n    // so react-hooks/exhaustive-deps doesn't complain if it's not\n    // included in the dependency array. But its presence is critical,\n    // so do NOT remove it from the dependency list.\n    retryRemoteWebSocketConnectionSigil,\n  ]);\n\n  /**\n   * We want to make sure we don't lose any messages we receive from the\n   * remote websocket before devtools connects. So we use a ref to buffer\n   * messages, and flush them whenever devtools connects.\n   */\n  const messageBufferRef = useRef<MessageEvent[]>([]);\n\n  // This effect tracks the state changes _between_ the local\n  // and remote websockets, and handles how messages flow between them.\n  useEffect(() => {\n    /**\n     * This event listener is used for buffering messages from\n     * the remote websocket, and flushing them\n     * when the local websocket connects.\n     */\n    function bufferMessageFromRemoteSocket(event: MessageEvent) {\n      messageBufferRef.current.push(event);\n      // TODO: maybe we should have a max limit on this?\n      // if so, we should be careful when removing messages\n      // from the front, because they could be critical for\n      // devtools (like execution context creation, etc)\n    }\n\n    if (remoteWebSocket && !localWebSocket) {\n      // The local websocket hasn't connected yet, so we'll\n      // buffer messages until it does.\n      remoteWebSocket.addEventListener(\n        \"message\",\n        bufferMessageFromRemoteSocket\n      );\n    }\n\n    /** Send a message from the local websocket to the remote websocket */\n    function sendMessageToRemoteWebSocket(event: MessageEvent) {\n      try {\n        // Intercept Network.loadNetworkResource to load sourcemaps\n        const message = JSON.parse(event.data as string);\n        if (\n          message.method === \"Network.loadNetworkResource\" &&\n          props.sourceMapPath !== undefined &&\n          props.sourceMapMetadata !== undefined\n        ) {\n          // Read the generated source map from esbuild\n          const sourceMap = JSON.parse(\n            readFileSync(props.sourceMapPath, \"utf-8\")\n          );\n\n          // The source root is a temporary directory (`tmpDir`), and so shouldn't be user-visible\n          // It provides no useful info to the user\n          sourceMap.sourceRoot = \"\";\n\n          const tmpDir = props.sourceMapMetadata.tmpDir;\n\n          // See https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.mt2g20loc2ct\n          // The above link documents the x_google_ignoreList property, which is intended to mark code that shouldn't be visible in DevTools\n          // Here we use it to indicate specifically Wrangler-injected code (facades & middleware)\n          sourceMap.x_google_ignoreList = sourceMap.sources\n            // Filter anything in the generated tmpDir, and anything from Wrangler's templates\n            // This should cover facades and middleware, but intentionally doesn't include all non-user code e.g. node_modules\n            .map((s: string, idx: number) =>\n              s.includes(tmpDir) || s.includes(\"wrangler/templates\")\n                ? idx\n                : null\n            )\n            .filter((i: number | null) => i !== null);\n\n          const entryDirectory = props.sourceMapMetadata.entryDirectory;\n\n          sourceMap.sources = sourceMap.sources.map(\n            (s: string) =>\n              // These are never loaded by Wrangler or DevTools. However, the presence of a scheme is required for DevTools to show the path as folders in the Sources view\n              // The scheme is intentially not the same as for the sourceMappingURL\n              // Without this difference in scheme, DevTools will not strip prefix `../` path elements from top level folders (../node_modules -> node_modules, for instance)\n              `worker://${props.name}/${path.relative(entryDirectory, s)}`\n          );\n\n          sendMessageToLocalWebSocket({\n            data: JSON.stringify({\n              id: message.id,\n              result: {\n                resource: {\n                  success: true,\n                  text: JSON.stringify(sourceMap),\n                },\n              },\n            }),\n          });\n          return;\n        }\n      } catch (e) {\n        logger.debug(e);\n        // Ignore errors, fallthrough to the remote inspector\n      }\n      try {\n        assert(\n          remoteWebSocket,\n          \"Trying to send a message to an undefined `remoteWebSocket`\"\n        );\n        remoteWebSocket.send(event.data);\n      } catch (e) {\n        if (\n          (e as Error).message !==\n          \"WebSocket is not open: readyState 0 (CONNECTING)\"\n        ) {\n          /**\n           * ^ this just means we haven't opened a websocket yet\n           * usually happens until there's at least one request\n           * which is weird, because we may miss something that\n           * happens on the first request. Maybe we should buffer\n           * these messages too?\n           */\n          logger.error(e);\n        }\n      }\n    }\n\n    /** Send a message from the local websocket to the remote websocket */\n    function sendMessageToLocalWebSocket(event: Pick<MessageEvent, \"data\">) {\n      assert(\n        localWebSocket,\n        \"Trying to send a message to an undefined `localWebSocket`\"\n      );\n      try {\n        // Intercept Debugger.scriptParsed responses to inject URL schemes\n        const message = JSON.parse(event.data as string);\n        if (message.method === \"Debugger.scriptParsed\") {\n          // Add the worker:// scheme conditionally, since some module types already have schemes (e.g. wasm)\n          message.params.url = new URL(\n            message.params.url,\n            `worker://${props.name}`\n          ).href;\n          localWebSocket.send(JSON.stringify(message));\n          return;\n        }\n      } catch (e) {\n        logger.debug(e);\n        // Ignore errors, fallthrough to the local websocket\n      }\n\n      localWebSocket.send(event.data);\n    }\n\n    if (localWebSocket && remoteWebSocket) {\n      // Both the remote and local websockets are connected, so let's\n      // start sending messages between them.\n      localWebSocket.addEventListener(\"message\", sendMessageToRemoteWebSocket);\n      remoteWebSocket.addEventListener(\"message\", sendMessageToLocalWebSocket);\n\n      // Also, let's flush any buffered messages\n      messageBufferRef.current.forEach(sendMessageToLocalWebSocket);\n      messageBufferRef.current = [];\n    }\n\n    return () => {\n      // Cleanup like good citizens\n      if (remoteWebSocket) {\n        remoteWebSocket.removeEventListener(\n          \"message\",\n          bufferMessageFromRemoteSocket\n        );\n        remoteWebSocket.removeEventListener(\n          \"message\",\n          sendMessageToLocalWebSocket\n        );\n      }\n      if (localWebSocket) {\n        localWebSocket.removeEventListener(\n          \"message\",\n          sendMessageToRemoteWebSocket\n        );\n      }\n    };\n  }, [\n    localWebSocket,\n    remoteWebSocket,\n    props.name,\n    props.sourceMapMetadata,\n    props.sourceMapPath,\n  ]);\n}\n\n// Credit: https://stackoverflow.com/a/2117523\nfunction randomId(): string {\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == \"x\" ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n\n/**\n * This function converts a message serialised as a devtools event\n * into arguments suitable to be called by a console method, and\n * then actually calls the method with those arguments. Effectively,\n * we're just doing a little bit of the work of the devtools console,\n * directly in the terminal.\n */\n\nexport const mapConsoleAPIMessageTypeToConsoleMethod: {\n  [key in Protocol.Runtime.ConsoleAPICalledEvent[\"type\"]]: Exclude<\n    keyof Console,\n    \"Console\"\n  >;\n} = {\n  log: \"log\",\n  debug: \"debug\",\n  info: \"info\",\n  warning: \"warn\",\n  error: \"error\",\n  dir: \"dir\",\n  dirxml: \"dirxml\",\n  table: \"table\",\n  trace: \"trace\",\n  clear: \"clear\",\n  count: \"count\",\n  assert: \"assert\",\n  profile: \"profile\",\n  profileEnd: \"profileEnd\",\n  timeEnd: \"timeEnd\",\n  startGroup: \"group\",\n  startGroupCollapsed: \"groupCollapsed\",\n  endGroup: \"groupEnd\",\n};\n\nfunction logConsoleMessage(evt: Protocol.Runtime.ConsoleAPICalledEvent): void {\n  const args: string[] = [];\n  for (const ro of evt.args) {\n    switch (ro.type) {\n      case \"string\":\n      case \"number\":\n      case \"boolean\":\n      case \"undefined\":\n      case \"symbol\":\n      case \"bigint\":\n        args.push(ro.value);\n        break;\n      case \"function\":\n        args.push(`[Function: ${ro.description ?? \"<no-description>\"}]`);\n        break;\n      case \"object\":\n        if (!ro.preview) {\n          args.push(\n            ro.subtype === \"null\"\n              ? \"null\"\n              : ro.description ?? \"<no-description>\"\n          );\n        } else {\n          args.push(ro.preview.description ?? \"<no-description>\");\n\n          switch (ro.preview.subtype) {\n            case \"array\":\n              args.push(\n                \"[ \" +\n                  ro.preview.properties\n                    .map(({ value }) => {\n                      return value as string | number | undefined;\n                    })\n                    .join(\", \") +\n                  (ro.preview.overflow ? \"...\" : \"\") +\n                  \" ]\"\n              );\n\n              break;\n            case \"weakmap\":\n            case \"map\":\n              ro.preview.entries === undefined\n                ? args.push(\"{}\")\n                : args.push(\n                    \"{\\n\" +\n                      ro.preview.entries\n                        .map(({ key, value }) => {\n                          return `  ${key?.description ?? \"<unknown>\"} => ${\n                            value.description\n                          }`;\n                        })\n                        .join(\",\\n\") +\n                      (ro.preview.overflow ? \"\\n  ...\" : \"\") +\n                      \"\\n}\"\n                  );\n\n              break;\n            case \"weakset\":\n            case \"set\":\n              ro.preview.entries === undefined\n                ? args.push(\"{}\")\n                : args.push(\n                    \"{ \" +\n                      ro.preview.entries\n                        .map(({ value }) => {\n                          return `${value.description}`;\n                        })\n                        .join(\", \") +\n                      (ro.preview.overflow ? \", ...\" : \"\") +\n                      \" }\"\n                  );\n              break;\n            case \"regexp\":\n              break;\n            case \"date\":\n              break;\n            case \"generator\":\n              args.push(ro.preview.properties[0].value || \"\");\n              break;\n            case \"promise\":\n              if (ro.preview.properties[0].value === \"pending\") {\n                args.push(`{<${ro.preview.properties[0].value}>}`);\n              } else {\n                args.push(\n                  `{<${ro.preview.properties[0].value}>: ${ro.preview.properties[1].value}}`\n                );\n              }\n              break;\n            case \"node\":\n            case \"iterator\":\n            case \"proxy\":\n            case \"typedarray\":\n            case \"arraybuffer\":\n            case \"dataview\":\n            case \"webassemblymemory\":\n            case \"wasmvalue\":\n              break;\n            case \"error\":\n            default:\n              // just a pojo\n              args.push(\n                \"{\\n\" +\n                  ro.preview.properties\n                    .map(({ name, value }) => {\n                      return `  ${name}: ${value}`;\n                    })\n                    .join(\",\\n\") +\n                  (ro.preview.overflow ? \"\\n  ...\" : \"\") +\n                  \"\\n}\"\n              );\n          }\n        }\n        break;\n      default:\n        args.push(ro.description || ro.unserializableValue || \"\uD83E\uDD8B\");\n        break;\n    }\n  }\n\n  const method = mapConsoleAPIMessageTypeToConsoleMethod[evt.type];\n\n  if (method in console) {\n    switch (method) {\n      case \"dir\":\n        console.dir(args);\n        break;\n      case \"table\":\n        console.table(args);\n        break;\n      default:\n        // eslint-disable-next-line prefer-spread\n        console[method].apply(console, args);\n        break;\n    }\n  } else {\n    logger.warn(`Unsupported console method: ${method}`);\n    logger.warn(\"console event:\", evt);\n  }\n}\n\n/**\n * Opens the chrome debugger\n */\nexport const openInspector = async (\n  inspectorPort: number,\n  worker: string | undefined\n) => {\n  const query = new URLSearchParams();\n  query.set(\"theme\", \"systemPreferred\");\n  query.set(\"ws\", `localhost:${inspectorPort}/ws`);\n  if (worker) query.set(\"domain\", worker);\n  const url = `https://devtools.devprod.cloudflare.dev/js_app?${query.toString()}`;\n  const errorMessage =\n    \"Failed to open inspector.\\nInspector depends on having a Chromium-based browser installed, maybe you need to install one?\";\n\n  // see: https://github.com/sindresorhus/open/issues/177#issue-610016699\n  let braveBrowser: string;\n  switch (os.platform()) {\n    case \"darwin\":\n    case \"win32\":\n      braveBrowser = \"Brave\";\n      break;\n    default:\n      braveBrowser = \"brave\";\n  }\n\n  const childProcess = await open(url, {\n    app: [\n      {\n        name: open.apps.chrome,\n      },\n      {\n        name: braveBrowser,\n      },\n      {\n        name: open.apps.edge,\n      },\n      {\n        name: open.apps.firefox,\n      },\n    ],\n  });\n  childProcess.on(\"error\", () => {\n    logger.warn(errorMessage);\n  });\n};\n", "{\n\t\"name\": \"partykit\",\n\t\"version\": \"0.0.0-a16ecec\",\n\t\"description\": \"Everything's better with friends\",\n\t\"bin\": \"dist/bin.mjs\",\n\t\"exports\": {\n\t\t\"./server\": \"./dist/server.js\",\n\t\t\"./src/cli\": \"./src/cli.ts\"\n\t},\n\t\"dependencies\": {\n\t\t\"chalk\": \"^5.2.0\",\n\t\t\"chokidar\": \"^3.5.3\",\n\t\t\"clipboardy\": \"^3.0.0\",\n\t\t\"commander\": \"^10.0.0\",\n\t\t\"devtools-protocol\": \"^0.0.1149535\",\n\t\t\"dotenv\": \"^16.0.3\",\n\t\t\"esbuild\": \"^0.17.11\",\n\t\t\"execa\": \"^7.1.1\",\n\t\t\"find-config\": \"^1.0.0\",\n\t\t\"http-proxy\": \"^1.18.1\",\n\t\t\"http-terminator\": \"^3.2.0\",\n\t\t\"ink\": \"^4.2.0\",\n\t\t\"json5\": \"^2.2.3\",\n\t\t\"miniflare\": \"^3.0.1\",\n\t\t\"open\": \"^8.4.2\",\n\t\t\"prompts\": \"^2.4.2\",\n\t\t\"react\": \"^18.2.0\",\n\t\t\"react-error-boundary\": \"^4.0.9\",\n\t\t\"signal-exit\": \"^3.0.7\",\n\t\t\"sirv\": \"^2.0.3\",\n\t\t\"source-map\": \"^0.7.4\",\n\t\t\"undici\": \"^5.21.0\",\n\t\t\"ws\": \"^8.13.0\",\n\t\t\"zod\": \"^3.21.4\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@cloudflare/workers-types\": \"^4.20230518.0\",\n\t\t\"@types/execa\": \"^2.0.0\",\n\t\t\"@types/find-config\": \"^1.0.1\",\n\t\t\"@types/http-proxy\": \"^1.17.10\",\n\t\t\"@types/node\": \"^18.15.3\",\n\t\t\"@types/prompts\": \"^2.4.3\",\n\t\t\"@types/signal-exit\": \"^3.0.1\",\n\t\t\"@types/update-notifier\": \"^6.0.2\",\n\t\t\"@types/ws\": \"^8.5.4\",\n\t\t\"eslint-plugin-react-hooks\": \"^4.6.0\",\n\t\t\"update-notifier\": \"^6.0.2\"\n\t},\n\t\"files\": [\n\t\t\"dist\",\n\t\t\"*.d.ts\",\n\t\t\"*.d.ts.map\",\n\t\t\"facade/generated.js\"\n\t],\n\t\"scripts\": {\n\t\t\"clean\": \"rm -rf dist dts *.d.ts *.d.ts.map && mkdir dts\",\n\t\t\"start\": \"npm run clean && concurrently \\\"PARTYKIT_API_BASE=http://127.0.0.1:8787 node -r esbuild-register --watch --watch-path src --watch-path facade scripts/build.ts\\\" \\\"tsc -p scripts/tsconfig.extract.json --watch\\\" \\\"node -r esbuild-register --watch --watch-path dts scripts/copy-dts.ts\\\" --kill-others\",\n\t\t\"build\": \"npm run clean && PARTYKIT_API_BASE=https://api.partykit.dev node -r esbuild-register scripts/build.ts && tsc -p scripts/tsconfig.extract.json --incremental false && node -r esbuild-register scripts/copy-dts.ts\"\n\t}\n}\n", "/**\n * When tailing logs from a worker, oftentimes you don't want to see _every\n * single event_. That's where filters come in. We can send a set of filters\n * to the tail worker, and it will pre-filter any logs for us so that we\n * only recieve the ones we care about.\n */\n\n/**\n * These are the filters we accept in the CLI. They\n * were copied directly from Wrangler v1 in order to\n * maintain compatability, so they aren't actually the exact\n * filters we need to send up to the tail worker. They generally map 1:1,\n * but often require some transformation or\n * renaming to match what it expects.\n *\n * For a full description of each filter, either check the\n * CLI description or see the documentation for `ApiFilter`.\n */\nexport type TailCLIFilters = {\n  status?: (\"ok\" | \"error\" | \"canceled\")[];\n  header?: string;\n  method?: string[];\n  search?: string;\n  samplingRate?: number;\n  clientIp?: string[];\n};\n\n/**\n * These are the filters we send to the tail worker. We\n * actually send a list of filters (an array of objects),\n * so rather than having a single TailAPIFilters type,\n * each kind of filter gets its own type and we define\n * TailAPIFilter to be the union of those types.\n */\nexport type TailAPIFilter =\n  | SamplingRateFilter\n  | OutcomeFilter\n  | MethodFilter\n  | HeaderFilter\n  | ClientIPFilter\n  | QueryFilter;\n\n/**\n * Filters logs based on a given sampling rate.\n * For example, a `sampling_rate` of 0.25 will let one-quarter of the\n * logs through.\n */\ntype SamplingRateFilter = {\n  sampling_rate: number;\n};\n\n/**\n * Filters logs based on the outcome of the worker's event handler.\n */\ntype OutcomeFilter = {\n  outcome: Outcome[];\n};\n\n/**\n * There are five possible outcomes we can get, three of which\n * (exception, exceededCpu, exceededMemory, and unknown) are considered errors\n */\nexport type Outcome =\n  | \"ok\"\n  | \"canceled\"\n  | \"exception\"\n  | \"exceededCpu\"\n  | \"exceededMemory\"\n  | \"unknown\";\n\n/**\n * Filters logs based on the HTTP method used for the request\n * that triggered the worker.\n */\ntype MethodFilter = {\n  method: string[];\n};\n\n/**\n * Filters logs based on an HTTP header on the request that\n * triggered the worker.\n */\ntype HeaderFilter = {\n  header: {\n    /**\n     * Filters on the header \"key\", e.g. \"X-CLOUDFLARE-HEADER\"\n     * or \"X-CUSTOM-HEADER\"\n     */\n    key: string;\n\n    /**\n     * Filters on the header \"value\", e.g. if this is set to\n     * \"filter-for-me\" and the \"key\" is \"X-SHOULD-LOG\", only\n     * events triggered by requests with the header\n     * \"X-SHOULD-LOG:filter-for-me\" will be logged.\n     */\n    query?: string;\n  };\n};\n\n/**\n * Filters on the IP address the request came from that triggered\n * the worker. A value of \"self\" will be replaced with the IP\n * address that is running `wrangler tail`\n */\ntype ClientIPFilter = {\n  client_ip: string[];\n};\n\n/**\n * Filters logs by a query string. This means only logs that\n * contain the given string will be sent to wrangler, and any\n * that don't will be discarded by the tail worker.\n */\ntype QueryFilter = {\n  query: string;\n};\n\n/**\n * The full message we send to the tail worker includes our\n * filters and a debug flag.\n */\nexport type TailFilterMessage = {\n  filters: TailAPIFilter[];\n};\n\n/**\n * Translate the flags passed in via a CLI invokation of wrangler\n * into a message that we can send to the tail worker.\n *\n * @param cliFilters An object containing all the filters passed in from the CLI\n * @returns A filter message ready to be sent to the tail worker\n */\nexport function translateCLICommandToFilterMessage(\n  cliFilters: TailCLIFilters\n): TailFilterMessage {\n  const apiFilters: TailAPIFilter[] = [];\n\n  if (cliFilters.samplingRate) {\n    apiFilters.push(parseSamplingRate(cliFilters.samplingRate));\n  }\n\n  if (cliFilters.status) {\n    apiFilters.push(parseOutcome(cliFilters.status));\n  }\n\n  if (cliFilters.method) {\n    apiFilters.push(parseMethod(cliFilters.method));\n  }\n\n  if (cliFilters.header) {\n    apiFilters.push(parseHeader(cliFilters.header));\n  }\n\n  if (cliFilters.clientIp) {\n    apiFilters.push(parseIP(cliFilters.clientIp));\n  }\n\n  if (cliFilters.search) {\n    apiFilters.push(parseQuery(cliFilters.search));\n  }\n\n  return {\n    filters: apiFilters,\n  };\n}\n\n/**\n * Parse the sampling rate passed in via command line\n *\n * @param sampling_rate the sampling rate passed in via CLI\n * @throws an Error if the rate doesn't make sense\n * @returns a SamplingRateFilter for use with the API\n */\nfunction parseSamplingRate(sampling_rate: number): SamplingRateFilter {\n  if (sampling_rate <= 0 || sampling_rate >= 1) {\n    throw new Error(\n      \"A sampling rate must be between 0 and 1 in order to have any effect.\\nFor example, a sampling rate of 0.25 means 25% of events will be logged.\"\n    );\n  }\n\n  return { sampling_rate };\n}\n\n/**\n * Translate from CLI \"status\"es to API \"outcome\"s, including\n * broadening \"error\" into \"exception\", \"exceededCpu\", and \"unknown\".\n *\n * @param statuses statuses passed in via CLI\n * @returns an OutcomeFilter for use with the API\n */\nfunction parseOutcome(\n  statuses: (\"ok\" | \"error\" | \"canceled\")[]\n): OutcomeFilter {\n  const outcomes = new Set<Outcome>();\n\n  for (const status of statuses) {\n    switch (status) {\n      case \"ok\":\n        outcomes.add(\"ok\");\n        break;\n\n      case \"canceled\":\n        outcomes.add(\"canceled\");\n        break;\n\n      case \"error\":\n        outcomes.add(\"exception\");\n        outcomes.add(\"exceededCpu\");\n        outcomes.add(\"exceededMemory\");\n        outcomes.add(\"unknown\");\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return {\n    outcome: Array.from(outcomes),\n  };\n}\n\n/**\n * We just send silly methods through to the API anyway, since they don't\n * cause any harm.\n *\n * @param method an array of HTTP request methods passed in via CLI\n * @returns a MethodFilter for use with the API\n */\nfunction parseMethod(method: string[]): MethodFilter {\n  return { method };\n}\n\n/**\n * Header filters can contain either just a key (\"X-HEADER-KEY\") or both\n * a key and a value (\"X-HEADER-KEY:some-value\"). This function parses\n * a given string according to that pattern.\n *\n * @param header a header string, \"X-HEADER-KEY\" or \"X-HEADER-KEY:some-value\"\n * @returns a HeaderFilter for use with the API\n */\nfunction parseHeader(header: string): HeaderFilter {\n  const [headerKey, headerQuery] = header.split(\":\", 2);\n\n  return {\n    header: {\n      key: headerKey.trim(),\n      query: headerQuery?.trim(),\n    },\n  };\n}\n\n/**\n * A list of IPs can be passed in to filter for messages that come from\n * a worker triggered by a request originating from one of those IPs.\n * You can also pass in the string \"self\" to filter for the IP of the\n * machine running `wrangler tail`.\n *\n * @param client_ip an array of IP addresses to filter\n * @returns a ClientIPFilter for use with the API\n */\nfunction parseIP(client_ip: string[]): ClientIPFilter {\n  return { client_ip };\n}\n\n/**\n * Users can filter for logs that contain a \"search\" or a \"query string\".\n * For example, if `--search findme` is passed to then we will only\n * receive logs that contain the string \"findme\".\n *\n * @param query a query string to search for\n * @returns a QueryFilter for use with the API\n */\nfunction parseQuery(query: string): QueryFilter {\n  return { query };\n}\n", "import type {\n  AlarmEvent,\n  EmailEvent,\n  RequestEvent,\n  ScheduledEvent,\n  TailEventMessage,\n} from \"./\";\nimport type { Outcome } from \"./filters\";\nimport type WebSocket from \"ws\";\n\nexport function prettyPrintLogs(data: WebSocket.RawData): void {\n  const eventMessage: TailEventMessage = JSON.parse(data.toString());\n\n  if (isScheduledEvent(eventMessage.event)) {\n    const cronPattern = eventMessage.event.cron;\n    const datetime = new Date(\n      eventMessage.event.scheduledTime\n    ).toLocaleString();\n    const outcome = prettifyOutcome(eventMessage.outcome);\n\n    console.log(`\"${cronPattern}\" @ ${datetime} - ${outcome}`);\n  } else if (isRequestEvent(eventMessage.event)) {\n    const requestMethod = eventMessage.event?.request.method.toUpperCase();\n    const url = eventMessage.event?.request.url;\n    const outcome = prettifyOutcome(eventMessage.outcome);\n    const datetime = new Date(eventMessage.eventTimestamp).toLocaleString();\n\n    console.log(\n      url\n        ? `${requestMethod} ${url} - ${outcome} @ ${datetime}`\n        : `[missing request] - ${outcome} @ ${datetime}`\n    );\n  } else if (isEmailEvent(eventMessage.event)) {\n    const outcome = prettifyOutcome(eventMessage.outcome);\n    const datetime = new Date(eventMessage.eventTimestamp).toLocaleString();\n    const mailFrom = eventMessage.event.mailFrom;\n    const rcptTo = eventMessage.event.rcptTo;\n    const rawSize = eventMessage.event.rawSize;\n\n    console.log(\n      `Email from:${mailFrom} to:${rcptTo} size:${rawSize} @ ${datetime} - ${outcome}`\n    );\n  } else if (isAlarmEvent(eventMessage.event)) {\n    const outcome = prettifyOutcome(eventMessage.outcome);\n    const datetime = new Date(\n      eventMessage.event.scheduledTime\n    ).toLocaleString();\n\n    console.log(`Alarm @ ${datetime} - ${outcome}`);\n  } else {\n    // Unknown event type\n    const outcome = prettifyOutcome(eventMessage.outcome);\n    const datetime = new Date(eventMessage.eventTimestamp).toLocaleString();\n\n    console.log(`Unknown Event - ${outcome} @ ${datetime}`);\n  }\n\n  if (eventMessage.logs.length > 0) {\n    eventMessage.logs.forEach(({ level, message }) => {\n      console.log(`  (${level})`, ...message);\n    });\n  }\n\n  if (eventMessage.exceptions.length > 0) {\n    eventMessage.exceptions.forEach(({ name, message }) => {\n      console.error(`  ${name}:`, message);\n    });\n  }\n}\n\nexport function jsonPrintLogs(data: WebSocket.RawData): void {\n  console.log(JSON.stringify(JSON.parse(data.toString()), null, 2));\n}\n\nfunction isRequestEvent(\n  event: TailEventMessage[\"event\"]\n): event is RequestEvent {\n  return Boolean(event && \"request\" in event);\n}\n\nfunction isScheduledEvent(\n  event: TailEventMessage[\"event\"]\n): event is ScheduledEvent {\n  return Boolean(event && \"cron\" in event);\n}\n\nfunction isEmailEvent(event: TailEventMessage[\"event\"]): event is EmailEvent {\n  return Boolean(event && \"mailFrom\" in event);\n}\n\n/**\n * Check to see if an event sent from a worker is an AlarmEvent.\n *\n * Because the only property on `AlarmEvent` is \"scheduledTime\", which it\n * shares with `ScheduledEvent`, `isAlarmEvent` checks if there's _not_\n * a \"cron\" property in `event` to confirm it's an alarm event.\n *\n * @param event An event\n * @returns true if the event is an AlarmEvent\n */\nfunction isAlarmEvent(event: TailEventMessage[\"event\"]): event is AlarmEvent {\n  return Boolean(event && \"scheduledTime\" in event && !(\"cron\" in event));\n}\n\nfunction prettifyOutcome(outcome: Outcome): string {\n  switch (outcome) {\n    case \"ok\":\n      return \"Ok\";\n    case \"canceled\":\n      return \"Canceled\";\n    case \"exceededCpu\":\n      return \"Exceeded CPU Limit\";\n    case \"exceededMemory\":\n      return \"Exceeded Memory Limit\";\n    case \"exception\":\n      return \"Exception Thrown\";\n    case \"unknown\":\n    default:\n      return \"Unknown\";\n  }\n}\n", "#!/usr/bin/env node\nimport * as cli from \"./cli\";\nimport { version } from \"../package.json\";\nimport { Option, program /*, Option*/ } from \"commander\";\nimport React, { Suspense } from \"react\";\n\nimport Login from \"./commands/login\";\nimport Logout from \"./commands/logout\";\n\nimport { render } from \"ink\";\nimport { Dev } from \"./dev\";\n\n// import packageJson from \"../package.json\";\n\n// import(\"update-notifier\").then(\n//   ({ default: updateNotifier }) => {\n//     // Checks for available update and returns an instance\n//     const notifier = updateNotifier({ pkg: packageJson, distTag: \"beta\" });\n//     // Notify using the built-in convenience method\n//     notifier.notify();\n//   },\n//   (err) => {\n//     console.error(\"Error loading update-notifier\", err);\n//   }\n// );\n\nprocess.on(\"SIGINT\", () => {\n  // console.log(\"Interrupted\");\n  process.exit(0);\n});\n\nprocess.on(\"SIGTERM\", () => {\n  // console.log(\"Terminated\");\n  process.exit(0);\n});\n\nprocess.on(\"exit\", (_code) => {\n  // console.log(`About to exit with code: ${_code}`);\n});\n\nprocess.on(\"uncaughtExceptionMonitor\", function (err) {\n  // console.error(\"uncaught exception\", err);\n  throw err;\n});\n\nprocess.on(\"unhandledRejection\", function (reason, _promise) {\n  // console.error(\"Unhandled Rejection at:\", _promise, \"reason:\", reason);\n  throw reason;\n});\n\nfunction getArrayKVOption(val: string[] = []) {\n  return val.reduce((acc, curr) => {\n    const [key, ...value] = curr.split(\"=\");\n    acc[key] = value.join(\"=\");\n    return acc;\n  }, {} as Record<string, string>);\n}\n\n// const EnvironmentOption = new Option(\n//   \"-e, --env <env>\",\n//   \"environment to use\"\n// ).choices([\"production\", \"development\", \"preview\"]);\n\nprogram\n  .name(\"partykit\")\n  .version(version, \"-v, --version\", \"output the current version\")\n  .description(\"Welcome to the party, pal!\");\n\nprogram\n  .command(\"dev\")\n  .description(\"run a script in development mode\")\n  .argument(\"[script]\", \"path to the script to run\")\n  .option(\"-p, --port <number>\", \"port to run the server on\")\n  .option(\"--assets <path>\", \"path to assets directory\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  // .option(\"-e, --env\", \"environment to use\")\n  .option(\n    \"-v, --var [vars...]\",\n    \"A key-value pair to be injected into the script as a variable\"\n  )\n  .option(\n    \"-d, --define [defines...]\",\n    \"A key-value pair to be substituted in the project\"\n  )\n  .action(async (scriptPath, options) => {\n    render(\n      <Dev\n        main={scriptPath}\n        port={options.port}\n        config={options.config}\n        vars={getArrayKVOption(options.var)}\n        define={getArrayKVOption(options.define)}\n      />\n    );\n  });\n\nprogram\n  .command(\"deploy\")\n  .alias(\"publish\")\n  .description(\"deploy a script to the internet\")\n  .argument(\"[script]\", \"path to the script to deploy\")\n  .option(\"--assets <path>\", \"path to assets directory\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  // .option(\"-e, --env\", \"environment to use\")\n  .option(\n    \"-v, --var [vars...]\",\n    \"A key-value pair to be injected into the script as a variable\"\n  )\n  .option(\n    \"-d, --define [defines...]\",\n    \"A key-value pair to be substituted in the script\"\n  )\n  .option(\"--with-vars\", \"include all variables in the deployment\")\n  .option(\"-n, --name <name>\", \"name of the project\")\n  .option(\"--preview [name]\", \"deploy to preview environment\")\n  .action(async (scriptPath, options) => {\n    if (options.withVars) {\n      console.warn(\"--with-vars is not yet implemented\");\n    }\n    await cli.deploy({\n      main: scriptPath,\n      name: options.name,\n      config: options.config,\n      vars: getArrayKVOption(options.var),\n      define: getArrayKVOption(options.define),\n      preview: options.preview,\n      withVars: options.withVars,\n      assets: options.assets,\n    });\n  });\n\nprogram\n  .command(\"list\")\n  .description(\"list all deployed projects\")\n  .action(async () => {\n    await cli.list();\n  });\n\nprogram\n  .command(\"delete\")\n  .description(\"delete a deployed project\")\n  .option(\"-n, --name <name>\", \"name of the project\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  .option(\"--preview [name]\", \"delete preview\")\n  .action(async (options) => {\n    await cli._delete(options);\n  });\n\nprogram\n  .command(\"tail\")\n  .description(\"tail logs from a deployed project\")\n  .option(\"-n, --name <name>\", \"name of the project\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  .option(\"--preview [name]\", \"tail logs from preview\")\n  .addOption(\n    new Option(\"-f, --format\", \"format of the logs\")\n      .choices([\"json\", \"pretty\"])\n      .default(\"pretty\")\n  )\n  .option(\"--debug\", \"show debug logs\", false)\n  .addOption(\n    new Option(\"--status\", \"filter by invocation status\").choices([\n      \"ok\",\n      \"error\",\n      \"canceled\",\n    ])\n  )\n  .option(\"--header\", \"filter by HTTP header\")\n  .option(\"--method <...methods>\", \"filter by HTTP method(s)\")\n  .option(\"--sampling-rate <number>\", \"sampling rate of logs\")\n  .option(\"--search <string>\", \"search for a string in the logs\")\n  .option(\n    \"--ip <..ips>\",\n    'filter by the IP address the request originates from (use \"self\" to filter for your own IP)'\n  )\n  .action(async (options) => {\n    await cli.tail(options);\n  });\n\nconst envCommand = program.command(\"env\");\n\nenvCommand\n  .command(\"list\")\n  .description(\"list all environment variables\")\n  .option(\"-n, --name <name>\", \"name of the project\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  // .addOption(EnvironmentOption)\n  // -p preview id?\n  .action(async (options) => {\n    await cli.env.list(options);\n  });\n\nenvCommand\n  .command(\"pull\")\n  .description(\"pull environment variables to a file\")\n  .argument(\"[file]\", \"file to pull development env vars to\")\n  .option(\"-n, --name <name>\", \"name of the project\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  .option(\"--preview [name]\", \"pull from preview\")\n  .action(async (fileName, options) => {\n    await cli.env.pull(fileName, options);\n  });\n\nenvCommand\n  .command(\"push\")\n  .description(\"push environment variables from config file(s)\")\n  .option(\"-n, --name <name>\", \"name of the project\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  .option(\"--preview [name]\", \"push to preview\")\n  .action(async (options) => {\n    await cli.env.push(options);\n  });\n\nenvCommand\n  .command(\"add\")\n  .description(\"add an environment variable\")\n  .argument(\"<key>\", \"name of the environment variable\")\n  .option(\"-n, --name <name>\", \"name of the project\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  .option(\"--preview [name]\", \"add to preview\")\n  // .addOption(EnvironmentOption)\n  // -p preview id?\n  .action(async (key, options) => {\n    await cli.env.add(key, options);\n  });\n\nenvCommand\n  .command(\"remove\")\n  .description(\"remove an environment variable\")\n  .argument(\"[key]\", \"name of the environment variable\")\n  .option(\"-n, --name <name>\", \"name of the project\")\n  .option(\"-c, --config <path>\", \"path to config file\")\n  .option(\"--preview [name]\", \"remove from preview\")\n  // .addOption(EnvironmentOption)\n  .action(async (key, options) => {\n    await cli.env.remove(key, options);\n  });\n\nprogram\n  .command(\"login\")\n  .description(\"login to partykit\")\n  .action(async () => {\n    render(\n      <Suspense>\n        <Login />\n      </Suspense>\n    );\n  });\n\nprogram\n  .command(\"logout\")\n  .description(\"logout from partykit\")\n  .action(async () => {\n    render(\n      <Suspense>\n        <Logout />\n      </Suspense>\n    );\n  });\n\n// semiver implementation via https://github.com/lukeed/semiver/blob/ae7eebe6053c96be63032b14fb0b68e2553fcac4/src/index.js\n\n/**\nMIT License\nCopyright (c) Luke Edwards <luke.edwards05@gmail.com> (lukeed.com)\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst fn = new Intl.Collator(undefined, { numeric: true }).compare;\n\nfunction semiver(aStr: string, bStr: string, bool?: boolean) {\n  const a = aStr.split(\".\");\n  const b = bStr.split(\".\");\n\n  return (\n    fn(a[0], b[0]) ||\n    fn(a[1], b[1]) ||\n    ((b[2] = b.slice(2).join(\".\")),\n    (bool = /[.-]/.test((a[2] = a.slice(2).join(\".\")))),\n    bool == /[.-]/.test(b[2]) ? fn(a[2], b[2]) : bool ? -1 : 1)\n  );\n}\n\nconst MIN_NODE_VERSION = \"16.8.0\";\n\nif (semiver(process.versions.node, MIN_NODE_VERSION) < 0) {\n  // Note Volta and nvm are also recommended in the official docs:\n  // https://developers.cloudflare.com/workers/get-started/guide#2-install-the-workers-cli\n  console.error(\n    `Partykit requires at least node.js v${MIN_NODE_VERSION}. You are using v${process.versions.node}. Please update your version of node.js.`\n  );\n  process.exit(1);\n}\n\n// end semiver implementation\n\nprogram.parse(process.argv);\n", "import React from \"react\";\nimport { getUser } from \"../config\";\nimport asyncCache from \"../async-cache\";\nimport { Text } from \"ink\";\n\nconst read = asyncCache();\n\nexport default function Login() {\n  const userConfig = read(\"get-user\", getUser) as Awaited<\n    ReturnType<typeof getUser>\n  >;\n\n  return (\n    <Text>\n      Logged in as <Text bold>{userConfig.login}</Text>\n    </Text>\n  );\n}\n", "/* eslint-disable @typescript-eslint/no-explicit-any */\nexport default function asyncCache(): (\n  name: string,\n  fn: () => Promise<any>\n) => any {\n  const promises: { [key: string]: Promise<any> } = {};\n  const states: {\n    [key: string]: {\n      status: \"pending\" | \"success\" | \"error\";\n      value: any;\n    };\n  } = {};\n  return function read(name: string, fn: () => Promise<any>) {\n    if (!promises[name]) {\n      promises[name] = fn();\n      states[name] = {\n        status: \"pending\",\n        value: undefined,\n      };\n      promises[name]\n        .then((value) => {\n          states[name] = {\n            status: \"success\",\n            value,\n          };\n        })\n        .catch((error) => {\n          states[name] = {\n            status: \"error\",\n            value: error,\n          };\n        });\n    }\n    if (states[name].status === \"pending\") {\n      throw promises[name];\n    }\n    if (states[name].status === \"error\") {\n      throw states[name].value;\n    }\n    if (states[name].status === \"success\") {\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n      return states[name].value;\n    }\n  };\n}\n", "import React from \"react\";\nimport { logout } from \"../config\";\nimport asyncCache from \"../async-cache\";\nimport { Text } from \"ink\";\n\nconst read = asyncCache();\n\nexport default function () {\n  read(\"logout\", logout) as Awaited<ReturnType<typeof logout>>;\n\n  return <Text>Logged out</Text>;\n}\n"],
  "mappings": "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",
  "names": ["path", "assert", "fs", "crypto", "WebSocket", "onExit", "fetch", "res", "config", "fs", "path", "chalk", "useEffect", "useState", "assert", "os", "URL", "path", "open", "URL", "path", "assert", "fetch", "useState", "useEffect", "fs", "path", "chalk", "fetch", "execaCommand", "esbuildOptions", "assert", "execaCommand", "path", "esbuild", "WebSocket", "onExit", "res", "React", "Suspense", "React", "read", "fn", "React", "React", "Text", "read", "React", "render", "render", "React", "Suspense"]
}
