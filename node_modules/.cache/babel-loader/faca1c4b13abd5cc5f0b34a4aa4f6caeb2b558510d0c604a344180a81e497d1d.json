{"ast":null,"code":"import _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nfunction getHashForString(string) {\n  var hash = 0;\n  for (var i = 0; i < string.length; i++) {\n    hash = (hash << 5) - hash + string.charCodeAt(i);\n    hash |= 0;\n  }\n  return hash + \"\";\n}\nfunction getHashForObject(obj) {\n  return getHashForString(JSON.stringify(obj));\n}\nfunction lns(str) {\n  var result = str.split(\"\");\n  result.push.apply(result, _toConsumableArray(result.splice(0, Math.round(result.length / 5))));\n  result.push.apply(result, _toConsumableArray(result.splice(0, Math.round(result.length / 4))));\n  result.push.apply(result, _toConsumableArray(result.splice(0, Math.round(result.length / 3))));\n  result.push.apply(result, _toConsumableArray(result.splice(0, Math.round(result.length / 2))));\n  return result.reverse().map(function (n) {\n    return +n ? +n < 5 ? 5 + +n : +n > 5 ? +n - 5 : n : n;\n  }).join(\"\");\n}\nexport { getHashForObject, getHashForString, lns };","map":{"version":3,"names":["getHashForString","string","hash","i","length","charCodeAt","getHashForObject","obj","JSON","stringify","lns","str","result","split","push","apply","_toConsumableArray","splice","Math","round","reverse","map","n","join"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/utils/src/lib/hash.ts"],"sourcesContent":["/**\n * Hash a string using the FNV-1a algorithm.\n *\n * @public\n */\nexport function getHashForString(string: string) {\n\tlet hash = 0\n\tfor (let i = 0; i < string.length; i++) {\n\t\thash = (hash << 5) - hash + string.charCodeAt(i)\n\t\thash |= 0 // Convert to 32bit integer\n\t}\n\treturn hash + ''\n}\n\n/**\n * Hash a string using the FNV-1a algorithm.\n *\n * @public\n */\nexport function getHashForObject(obj: any) {\n\treturn getHashForString(JSON.stringify(obj))\n}\n\n/** @public */\nexport function lns(str: string) {\n\tconst result = str.split('')\n\tresult.push(...result.splice(0, Math.round(result.length / 5)))\n\tresult.push(...result.splice(0, Math.round(result.length / 4)))\n\tresult.push(...result.splice(0, Math.round(result.length / 3)))\n\tresult.push(...result.splice(0, Math.round(result.length / 2)))\n\treturn result\n\t\t.reverse()\n\t\t.map((n) => (+n ? (+n < 5 ? 5 + +n : +n > 5 ? +n - 5 : n) : n))\n\t\t.join('')\n}\n"],"mappings":";AAKO,SAASA,iBAAiBC,MAAA,EAAgB;EAChD,IAAIC,IAAA,GAAO;EACX,SAASC,CAAA,GAAI,GAAGA,CAAA,GAAIF,MAAA,CAAOG,MAAA,EAAQD,CAAA,IAAK;IACvCD,IAAA,IAAQA,IAAA,IAAQ,KAAKA,IAAA,GAAOD,MAAA,CAAOI,UAAA,CAAWF,CAAC;IAC/CD,IAAA,IAAQ;EACT;EACA,OAAOA,IAAA,GAAO;AACf;AAOO,SAASI,iBAAiBC,GAAA,EAAU;EAC1C,OAAOP,gBAAA,CAAiBQ,IAAA,CAAKC,SAAA,CAAUF,GAAG,CAAC;AAC5C;AAGO,SAASG,IAAIC,GAAA,EAAa;EAChC,IAAMC,MAAA,GAASD,GAAA,CAAIE,KAAA,CAAM,EAAE;EAC3BD,MAAA,CAAOE,IAAA,CAAAC,KAAA,CAAPH,MAAA,EAAAI,kBAAA,CAAeJ,MAAA,CAAOK,MAAA,CAAO,GAAGC,IAAA,CAAKC,KAAA,CAAMP,MAAA,CAAOR,MAAA,GAAS,CAAC,CAAC,CAAC;EAC9DQ,MAAA,CAAOE,IAAA,CAAAC,KAAA,CAAPH,MAAA,EAAAI,kBAAA,CAAeJ,MAAA,CAAOK,MAAA,CAAO,GAAGC,IAAA,CAAKC,KAAA,CAAMP,MAAA,CAAOR,MAAA,GAAS,CAAC,CAAC,CAAC;EAC9DQ,MAAA,CAAOE,IAAA,CAAAC,KAAA,CAAPH,MAAA,EAAAI,kBAAA,CAAeJ,MAAA,CAAOK,MAAA,CAAO,GAAGC,IAAA,CAAKC,KAAA,CAAMP,MAAA,CAAOR,MAAA,GAAS,CAAC,CAAC,CAAC;EAC9DQ,MAAA,CAAOE,IAAA,CAAAC,KAAA,CAAPH,MAAA,EAAAI,kBAAA,CAAeJ,MAAA,CAAOK,MAAA,CAAO,GAAGC,IAAA,CAAKC,KAAA,CAAMP,MAAA,CAAOR,MAAA,GAAS,CAAC,CAAC,CAAC;EAC9D,OAAOQ,MAAA,CACLQ,OAAA,CAAQ,EACRC,GAAA,CAAI,UAACC,CAAA;IAAA,OAAO,CAACA,CAAA,GAAK,CAACA,CAAA,GAAI,IAAI,IAAI,CAACA,CAAA,GAAI,CAACA,CAAA,GAAI,IAAI,CAACA,CAAA,GAAI,IAAIA,CAAA,GAAKA,CAAE;EAAA,GAC7DC,IAAA,CAAK,EAAE;AACV"},"metadata":{},"sourceType":"module","externalDependencies":[]}