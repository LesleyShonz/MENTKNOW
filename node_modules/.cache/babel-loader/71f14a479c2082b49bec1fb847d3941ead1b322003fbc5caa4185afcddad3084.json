{"ast":null,"code":"import _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nfunction hasOwnProperty(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nfunction getOwnProperty(obj, key) {\n  if (!hasOwnProperty(obj, key)) {\n    return void 0;\n  }\n  return obj[key];\n}\nfunction deepCopy(obj) {\n  if (!obj) return obj;\n  if (Array.isArray(obj)) {\n    var arr = [];\n    var length = obj.length;\n    for (var i = 0; i < length; i++) arr.push(deepCopy(obj[i]));\n    return arr;\n  } else if (typeof obj === \"object\") {\n    var keys = Object.keys(obj);\n    var _length = keys.length;\n    var newObject = {};\n    for (var _i = 0; _i < _length; _i++) {\n      var key = keys[_i];\n      newObject[key] = deepCopy(obj[key]);\n    }\n    return newObject;\n  }\n  return obj;\n}\nfunction objectMapKeys(object) {\n  return Object.keys(object);\n}\nfunction objectMapValues(object) {\n  return Object.values(object);\n}\nfunction objectMapEntries(object) {\n  return Object.entries(object);\n}\nfunction objectMapFromEntries(entries) {\n  return Object.fromEntries(entries);\n}\nfunction filterEntries(object, predicate) {\n  var result = {};\n  var didChange = false;\n  var _iterator = _createForOfIteratorHelper(objectMapEntries(object)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n        key = _step$value[0],\n        value = _step$value[1];\n      if (predicate(key, value)) {\n        result[key] = value;\n      } else {\n        didChange = true;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return didChange ? result : object;\n}\nfunction mapObjectMapValues(object, mapper) {\n  var result = {};\n  var _iterator2 = _createForOfIteratorHelper(objectMapEntries(object)),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _step2$value = _slicedToArray(_step2.value, 2),\n        key = _step2$value[0],\n        value = _step2$value[1];\n      var newValue = mapper(key, value);\n      result[key] = newValue;\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n  return result;\n}\nexport { deepCopy, filterEntries, getOwnProperty, hasOwnProperty, mapObjectMapValues, objectMapEntries, objectMapFromEntries, objectMapKeys, objectMapValues };","map":{"version":3,"names":["hasOwnProperty","obj","key","Object","prototype","call","getOwnProperty","deepCopy","Array","isArray","arr","length","i","push","keys","newObject","objectMapKeys","object","objectMapValues","values","objectMapEntries","entries","objectMapFromEntries","fromEntries","filterEntries","predicate","result","didChange","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","_slicedToArray","value","err","e","f","mapObjectMapValues","mapper","_iterator2","_step2","_step2$value","newValue"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/utils/src/lib/object.ts"],"sourcesContent":["/** @internal */\nexport function hasOwnProperty(obj: object, key: string): boolean {\n\treturn Object.prototype.hasOwnProperty.call(obj, key)\n}\n\n/** @internal */\nexport function getOwnProperty<K extends string, V>(\n\tobj: Partial<Record<K, V>>,\n\tkey: K\n): V | undefined\n/** @internal */\nexport function getOwnProperty(obj: object, key: string): unknown\n/** @internal */\nexport function getOwnProperty(obj: object, key: string): unknown {\n\tif (!hasOwnProperty(obj, key)) {\n\t\treturn undefined\n\t}\n\t// @ts-expect-error we know the property exists\n\treturn obj[key]\n}\n\n/**\n * Deep copy function for TypeScript.\n *\n * @example\n *\n * ```ts\n * const A = deepCopy({ a: 1, b: { c: 2 } })\n * ```\n *\n * @param obj - Target value to be copied.\n * @public\n * @see Source - project, ts-deeply https://github.com/ykdr2017/ts-deepcopy\n * @see Code - pen https://codepen.io/erikvullings/pen/ejyBYg\n */\nexport function deepCopy<T = unknown>(obj: T): T {\n\tif (!obj) return obj\n\tif (Array.isArray(obj)) {\n\t\tconst arr: unknown[] = []\n\t\tconst length = obj.length\n\t\tfor (let i = 0; i < length; i++) arr.push(deepCopy(obj[i]))\n\t\treturn arr as unknown as T\n\t} else if (typeof obj === 'object') {\n\t\tconst keys = Object.keys(obj!)\n\t\tconst length = keys.length\n\t\tconst newObject: any = {}\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tconst key = keys[i]\n\t\t\tnewObject[key] = deepCopy((obj as any)[key])\n\t\t}\n\t\treturn newObject\n\t}\n\treturn obj\n}\n\n/**\n * An alias for `Object.keys` that treats the object as a map and so preserves the type of the keys.\n *\n * @internal\n */\nexport function objectMapKeys<Key extends string>(object: {\n\treadonly [K in Key]: unknown\n}): Array<Key> {\n\treturn Object.keys(object) as Key[]\n}\n\n/**\n * An alias for `Object.values` that treats the object as a map and so preserves the type of the\n * keys.\n *\n * @internal\n */\nexport function objectMapValues<Key extends string, Value>(object: {\n\t[K in Key]: Value\n}): Array<Value> {\n\treturn Object.values(object) as Value[]\n}\n\n/**\n * An alias for `Object.entries` that treats the object as a map and so preserves the type of the\n * keys.\n *\n * @internal\n */\nexport function objectMapEntries<Key extends string, Value>(object: {\n\t[K in Key]: Value\n}): Array<[Key, Value]> {\n\treturn Object.entries(object) as [Key, Value][]\n}\n\n/**\n * An alias for `Object.fromEntries` that treats the object as a map and so preserves the type of the\n * keys.\n *\n * @internal\n */\nexport function objectMapFromEntries<Key extends string, Value>(\n\tentries: ReadonlyArray<readonly [Key, Value]>\n): { [K in Key]: Value } {\n\treturn Object.fromEntries(entries) as { [K in Key]: Value }\n}\n\n/**\n * Filters an object using a predicate function.\n * @returns a new object with only the entries that pass the predicate\n * @internal\n */\nexport function filterEntries<Key extends string, Value>(\n\tobject: { [K in Key]: Value },\n\tpredicate: (key: Key, value: Value) => boolean\n): { [K in Key]: Value } {\n\tconst result: { [K in Key]?: Value } = {}\n\tlet didChange = false\n\tfor (const [key, value] of objectMapEntries(object)) {\n\t\tif (predicate(key, value)) {\n\t\t\tresult[key] = value\n\t\t} else {\n\t\t\tdidChange = true\n\t\t}\n\t}\n\treturn didChange ? (result as { [K in Key]: Value }) : object\n}\n\n/**\n * Maps the values of one object map to another.\n * @returns a new object with the entries mapped\n * @internal\n */\nexport function mapObjectMapValues<Key extends string, ValueBefore, ValueAfter>(\n\tobject: { readonly [K in Key]: ValueBefore },\n\tmapper: (key: Key, value: ValueBefore) => ValueAfter\n): { [K in Key]: ValueAfter } {\n\tconst result = {} as { [K in Key]: ValueAfter }\n\tfor (const [key, value] of objectMapEntries(object)) {\n\t\tconst newValue = mapper(key, value)\n\t\tresult[key] = newValue\n\t}\n\treturn result\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}