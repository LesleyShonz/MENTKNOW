{"ast":null,"code":"import _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js';\nimport * as string from './string.js';\nimport * as conditions from './conditions.js';\nimport * as storage from './storage.js';\nimport * as f from './function.js';\n\n/* c8 ignore next */\n// @ts-ignore\nexport var isNode = typeof process !== 'undefined' && process.release && /node|io\\.js/.test(process.release.name);\n/* c8 ignore next */\nexport var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode;\n/* c8 ignore next 3 */\nexport var isMac = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false;\n\n/**\n * @type {Map<string,string>}\n */\nvar params;\nvar args = [];\n\n/* c8 ignore start */\nvar computeParams = function computeParams() {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create();\n      var pargs = process.argv;\n      var currParamName = null;\n      for (var i = 0; i < pargs.length; i++) {\n        var parg = pargs[i];\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '');\n          }\n          currParamName = parg;\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg);\n            currParamName = null;\n          } else {\n            args.push(parg);\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '');\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach(function (kv) {\n        if (kv.length !== 0) {\n          var _kv$split = kv.split('='),\n            _kv$split2 = _slicedToArray(_kv$split, 2),\n            key = _kv$split2[0],\n            value = _kv$split2[1];\n          params.set(\"--\".concat(string.fromCamelCase(key, '-')), value);\n          params.set(\"-\".concat(string.fromCamelCase(key, '-')), value);\n        }\n      });\n    } else {\n      params = map.create();\n    }\n  }\n  return params;\n};\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport var hasParam = function hasParam(name) {\n  return computeParams().has(name);\n};\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport var getParam = function getParam(name, defaultVal) {\n  return computeParams().get(name) || defaultVal;\n};\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport var getVariable = function getVariable(name) {\n  return isNode ? conditions.undefinedToNull(process.env[name.toUpperCase()]) : conditions.undefinedToNull(storage.varStorage.getItem(name));\n};\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport var getConf = function getConf(name) {\n  return computeParams().get('--' + name) || getVariable(name);\n};\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport var hasConf = function hasConf(name) {\n  return hasParam('--' + name) || getVariable(name) !== null;\n};\n\n/* c8 ignore next */\nexport var production = hasConf('production');\n\n/* c8 ignore next 2 */\nvar forceColor = isNode && f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2']);\n\n/* c8 ignore start */\nexport var supportsColor = !hasParam('no-colors') && (!isNode || process.stdout.isTTY || forceColor) && (!isNode || hasParam('color') || forceColor || getVariable('COLORTERM') !== null || (getVariable('TERM') || '').includes('color'));\n/* c8 ignore stop */","map":{"version":3,"names":["map","string","conditions","storage","f","isNode","process","release","test","name","isBrowser","window","document","isMac","navigator","platform","params","args","computeParams","undefined","create","pargs","argv","currParamName","i","length","parg","set","push","location","search","slice","split","forEach","kv","_kv$split","_kv$split2","_slicedToArray","key","value","concat","fromCamelCase","hasParam","has","getParam","defaultVal","get","getVariable","undefinedToNull","env","toUpperCase","varStorage","getItem","getConf","hasConf","production","forceColor","isOneOf","FORCE_COLOR","supportsColor","stdout","isTTY","includes"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/lib0/environment.js"],"sourcesContent":["/**\n * Isomorphic module to work access the environment (query params, env variables).\n *\n * @module map\n */\n\nimport * as map from './map.js'\nimport * as string from './string.js'\nimport * as conditions from './conditions.js'\nimport * as storage from './storage.js'\nimport * as f from './function.js'\n\n/* c8 ignore next */\n// @ts-ignore\nexport const isNode = typeof process !== 'undefined' && process.release &&\n  /node|io\\.js/.test(process.release.name)\n/* c8 ignore next */\nexport const isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && !isNode\n/* c8 ignore next 3 */\nexport const isMac = typeof navigator !== 'undefined'\n  ? /Mac/.test(navigator.platform)\n  : false\n\n/**\n * @type {Map<string,string>}\n */\nlet params\nconst args = []\n\n/* c8 ignore start */\nconst computeParams = () => {\n  if (params === undefined) {\n    if (isNode) {\n      params = map.create()\n      const pargs = process.argv\n      let currParamName = null\n      for (let i = 0; i < pargs.length; i++) {\n        const parg = pargs[i]\n        if (parg[0] === '-') {\n          if (currParamName !== null) {\n            params.set(currParamName, '')\n          }\n          currParamName = parg\n        } else {\n          if (currParamName !== null) {\n            params.set(currParamName, parg)\n            currParamName = null\n          } else {\n            args.push(parg)\n          }\n        }\n      }\n      if (currParamName !== null) {\n        params.set(currParamName, '')\n      }\n      // in ReactNative for example this would not be true (unless connected to the Remote Debugger)\n    } else if (typeof location === 'object') {\n      params = map.create(); // eslint-disable-next-line no-undef\n      (location.search || '?').slice(1).split('&').forEach((kv) => {\n        if (kv.length !== 0) {\n          const [key, value] = kv.split('=')\n          params.set(`--${string.fromCamelCase(key, '-')}`, value)\n          params.set(`-${string.fromCamelCase(key, '-')}`, value)\n        }\n      })\n    } else {\n      params = map.create()\n    }\n  }\n  return params\n}\n/* c8 ignore stop */\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next */\nexport const hasParam = (name) => computeParams().has(name)\n\n/**\n * @param {string} name\n * @param {string} defaultVal\n * @return {string}\n */\n/* c8 ignore next 2 */\nexport const getParam = (name, defaultVal) =>\n  computeParams().get(name) || defaultVal\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 4 */\nexport const getVariable = (name) =>\n  isNode\n    ? conditions.undefinedToNull(process.env[name.toUpperCase()])\n    : conditions.undefinedToNull(storage.varStorage.getItem(name))\n\n/**\n * @param {string} name\n * @return {string|null}\n */\n/* c8 ignore next 2 */\nexport const getConf = (name) =>\n  computeParams().get('--' + name) || getVariable(name)\n\n/**\n * @param {string} name\n * @return {boolean}\n */\n/* c8 ignore next 2 */\nexport const hasConf = (name) =>\n  hasParam('--' + name) || getVariable(name) !== null\n\n/* c8 ignore next */\nexport const production = hasConf('production')\n\n/* c8 ignore next 2 */\nconst forceColor = isNode &&\n  f.isOneOf(process.env.FORCE_COLOR, ['true', '1', '2'])\n\n/* c8 ignore start */\nexport const supportsColor = !hasParam('no-colors') &&\n  (!isNode || process.stdout.isTTY || forceColor) && (\n  !isNode || hasParam('color') || forceColor ||\n    getVariable('COLORTERM') !== null ||\n    (getVariable('TERM') || '').includes('color')\n)\n/* c8 ignore stop */\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}