{"ast":null,"code":"/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js';\nimport * as binary from './binary.js';\nimport { getRandomValues } from 'lib0/webcrypto';\nexport var rand = Math.random;\nexport var uint32 = function uint32() {\n  return getRandomValues(new Uint32Array(1))[0];\n};\nexport var uint53 = function uint53() {\n  var arr = getRandomValues(new Uint32Array(8));\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0);\n};\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport var oneOf = function oneOf(arr) {\n  return arr[math.floor(rand() * arr.length)];\n};\n\n// @ts-ignore\nvar uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11;\n\n/**\n * @return {string}\n */\nexport var uuidv4 = function uuidv4() {\n  return uuidv4Template.replace(/[018]/g, /** @param {number} c */function (c) {\n    return (c ^ uint32() & 15 >> c / 4).toString(16);\n  });\n};","map":{"version":3,"names":["math","binary","getRandomValues","rand","Math","random","uint32","Uint32Array","uint53","arr","BITS21","BITS32","oneOf","floor","length","uuidv4Template","uuidv4","replace","c","toString"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/lib0/random.js"],"sourcesContent":["/**\n * Isomorphic module for true random numbers / buffers / uuids.\n *\n * Attention: falls back to Math.random if the browser does not support crypto.\n *\n * @module random\n */\n\nimport * as math from './math.js'\nimport * as binary from './binary.js'\nimport { getRandomValues } from 'lib0/webcrypto'\n\nexport const rand = Math.random\n\nexport const uint32 = () => getRandomValues(new Uint32Array(1))[0]\n\nexport const uint53 = () => {\n  const arr = getRandomValues(new Uint32Array(8))\n  return (arr[0] & binary.BITS21) * (binary.BITS32 + 1) + (arr[1] >>> 0)\n}\n\n/**\n * @template T\n * @param {Array<T>} arr\n * @return {T}\n */\nexport const oneOf = arr => arr[math.floor(rand() * arr.length)]\n\n// @ts-ignore\nconst uuidv4Template = [1e7] + -1e3 + -4e3 + -8e3 + -1e11\n\n/**\n * @return {string}\n */\nexport const uuidv4 = () => uuidv4Template.replace(/[018]/g, /** @param {number} c */ c =>\n  (c ^ uint32() & 15 >> c / 4).toString(16)\n)\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,IAAI,MAAM,WAAW;AACjC,OAAO,KAAKC,MAAM,MAAM,aAAa;AACrC,SAASC,eAAe,QAAQ,gBAAgB;AAEhD,OAAO,IAAMC,IAAI,GAAGC,IAAI,CAACC,MAAM;AAE/B,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA;EAAA,OAASJ,eAAe,CAAC,IAAIK,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAAA;AAElE,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;EAC1B,IAAMC,GAAG,GAAGP,eAAe,CAAC,IAAIK,WAAW,CAAC,CAAC,CAAC,CAAC;EAC/C,OAAO,CAACE,GAAG,CAAC,CAAC,CAAC,GAAGR,MAAM,CAACS,MAAM,KAAKT,MAAM,CAACU,MAAM,GAAG,CAAC,CAAC,IAAIF,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;AACxE,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMG,KAAK,GAAG,SAARA,KAAKA,CAAGH,GAAG;EAAA,OAAIA,GAAG,CAACT,IAAI,CAACa,KAAK,CAACV,IAAI,CAAC,CAAC,GAAGM,GAAG,CAACK,MAAM,CAAC,CAAC;AAAA;;AAEhE;AACA,IAAMC,cAAc,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI;;AAEzD;AACA;AACA;AACA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAA;EAAA,OAASD,cAAc,CAACE,OAAO,CAAC,QAAQ,EAAE,wBAAyB,UAAAC,CAAC;IAAA,OACrF,CAACA,CAAC,GAAGZ,MAAM,CAAC,CAAC,GAAG,EAAE,IAAIY,CAAC,GAAG,CAAC,EAAEC,QAAQ,CAAC,EAAE,CAAC;EAAA,CAC3C,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}