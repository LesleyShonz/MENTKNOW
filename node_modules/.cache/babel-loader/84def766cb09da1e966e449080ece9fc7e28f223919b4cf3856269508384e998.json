{"ast":null,"code":"function toStartCase(str) {\n  return str.split(\" \").map(function (s) {\n    return s.charAt(0).toUpperCase() + s.slice(1);\n  }).join(\" \");\n}\nvar isDarwin = typeof window === \"undefined\" ? false : window.navigator.userAgent.toLowerCase().indexOf(\"mac\") > -1;\nvar cmdKey = isDarwin ? \"\\u2318\" : \"Ctrl\";\nvar altKey = isDarwin ? \"\\u2325\" : \"Alt\";\nfunction kbd(str) {\n  return str.split(\",\")[0].split(\"\").map(function (sub) {\n    var subStr = sub.replace(/\\$/g, cmdKey).replace(/\\?/g, altKey).replace(/!/g, \"\\u21E7\");\n    return subStr[0].toUpperCase() + subStr.slice(1);\n  });\n}\nfunction kbdStr(str) {\n  return \"\\u2014 \" + str.split(\",\")[0].split(\"\").map(function (sub) {\n    var subStr = sub.replace(/\\$/g, cmdKey).replace(/\\?/g, altKey).replace(/!/g, \"\\u21E7\");\n    return subStr[0].toUpperCase() + subStr.slice(1);\n  }).join(\"\\u2009\");\n}\nexport { kbd, kbdStr, toStartCase };","map":{"version":3,"names":["toStartCase","str","split","map","s","charAt","toUpperCase","slice","join","isDarwin","window","navigator","userAgent","toLowerCase","indexOf","cmdKey","altKey","kbd","sub","subStr","replace","kbdStr"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/primitives/shared.ts"],"sourcesContent":["/** @internal */\nexport function toStartCase(str: string) {\n\treturn str\n\t\t.split(' ')\n\t\t.map((s) => s.charAt(0).toUpperCase() + s.slice(1))\n\t\t.join(' ')\n}\n\nconst isDarwin =\n\ttypeof window === 'undefined'\n\t\t? false\n\t\t: window.navigator.userAgent.toLowerCase().indexOf('mac') > -1\nconst cmdKey = isDarwin ? '⌘' : 'Ctrl'\nconst altKey = isDarwin ? '⌥' : 'Alt'\n\n/** @internal */\nexport function kbd(str: string) {\n\treturn str\n\t\t.split(',')[0]\n\t\t.split('')\n\t\t.map((sub) => {\n\t\t\tconst subStr = sub.replace(/\\$/g, cmdKey).replace(/\\?/g, altKey).replace(/!/g, '⇧')\n\t\t\treturn subStr[0].toUpperCase() + subStr.slice(1)\n\t\t})\n}\n\n/** @internal */\nexport function kbdStr(str: string) {\n\treturn (\n\t\t'— ' +\n\t\tstr\n\t\t\t.split(',')[0]\n\t\t\t.split('')\n\t\t\t.map((sub) => {\n\t\t\t\tconst subStr = sub.replace(/\\$/g, cmdKey).replace(/\\?/g, altKey).replace(/!/g, '⇧')\n\t\t\t\treturn subStr[0].toUpperCase() + subStr.slice(1)\n\t\t\t})\n\t\t\t.join(' ')\n\t)\n}\n"],"mappings":"AACO,SAASA,YAAYC,GAAA,EAAa;EACxC,OAAOA,GAAA,CACLC,KAAA,CAAM,GAAG,EACTC,GAAA,CAAI,UAACC,CAAA;IAAA,OAAMA,CAAA,CAAEC,MAAA,CAAO,CAAC,EAAEC,WAAA,CAAY,IAAIF,CAAA,CAAEG,KAAA,CAAM,CAAC,CAAC;EAAA,GACjDC,IAAA,CAAK,GAAG;AACX;AAEA,IAAMC,QAAA,GACL,OAAOC,MAAA,KAAW,cACf,QACAA,MAAA,CAAOC,SAAA,CAAUC,SAAA,CAAUC,WAAA,CAAY,EAAEC,OAAA,CAAQ,KAAK,IAAI;AAC9D,IAAMC,MAAA,GAASN,QAAA,GAAW,WAAM;AAChC,IAAMO,MAAA,GAASP,QAAA,GAAW,WAAM;AAGzB,SAASQ,IAAIhB,GAAA,EAAa;EAChC,OAAOA,GAAA,CACLC,KAAA,CAAM,GAAG,EAAE,CAAC,EACZA,KAAA,CAAM,EAAE,EACRC,GAAA,CAAI,UAACe,GAAA,EAAQ;IACb,IAAMC,MAAA,GAASD,GAAA,CAAIE,OAAA,CAAQ,OAAOL,MAAM,EAAEK,OAAA,CAAQ,OAAOJ,MAAM,EAAEI,OAAA,CAAQ,MAAM,QAAG;IAClF,OAAOD,MAAA,CAAO,CAAC,EAAEb,WAAA,CAAY,IAAIa,MAAA,CAAOZ,KAAA,CAAM,CAAC;EAChD,CAAC;AACH;AAGO,SAASc,OAAOpB,GAAA,EAAa;EACnC,OACC,YACAA,GAAA,CACEC,KAAA,CAAM,GAAG,EAAE,CAAC,EACZA,KAAA,CAAM,EAAE,EACRC,GAAA,CAAI,UAACe,GAAA,EAAQ;IACb,IAAMC,MAAA,GAASD,GAAA,CAAIE,OAAA,CAAQ,OAAOL,MAAM,EAAEK,OAAA,CAAQ,OAAOJ,MAAM,EAAEI,OAAA,CAAQ,MAAM,QAAG;IAClF,OAAOD,MAAA,CAAO,CAAC,EAAEb,WAAA,CAAY,IAAIa,MAAA,CAAOZ,KAAA,CAAM,CAAC;EAChD,CAAC,EACAC,IAAA,CAAK,QAAG;AAEZ"},"metadata":{},"sourceType":"module","externalDependencies":[]}