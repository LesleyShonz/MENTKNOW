{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { useEditor } from \"@tldraw/editor\";\nimport { compact } from \"@tldraw/utils\";\nimport React, { useMemo } from \"react\";\nimport { useValue } from \"signia-react\";\nimport { menuCustom, menuGroup, menuItem, menuSubmenu, showMenuPaste, useAllowGroup, useAllowUngroup } from \"./menuHelpers.mjs\";\nimport { useActions } from \"./useActions.mjs\";\nimport { useBreakpoint } from \"./useBreakpoint.mjs\";\nimport { useCanRedo } from \"./useCanRedo.mjs\";\nimport { useCanUndo } from \"./useCanUndo.mjs\";\nimport { useHasLinkShapeSelected } from \"./useHasLinkShapeSelected.mjs\";\nimport { useShowAutoSizeToggle } from \"./useShowAutoSizeToggle.mjs\";\nvar TLUiMenuSchemaContext = React.createContext({});\nfunction TLUiMenuSchemaProvider(_ref) {\n  var _window$navigator$cli;\n  var overrides = _ref.overrides,\n    children = _ref.children;\n  var editor = useEditor();\n  var actions = useActions();\n  var breakpoint = useBreakpoint();\n  var isMobile = breakpoint < 5;\n  var isDarkMode = useValue(\"isDarkMode\", function () {\n    return editor.isDarkMode;\n  }, [editor]);\n  var animationSpeed = useValue(\"animationSpeed\", function () {\n    return editor.animationSpeed;\n  }, [editor]);\n  var isGridMode = useValue(\"isGridMode\", function () {\n    return editor.isGridMode;\n  }, [editor]);\n  var isSnapMode = useValue(\"isSnapMode\", function () {\n    return editor.isSnapMode;\n  }, [editor]);\n  var isToolLock = useValue(\"isToolLock\", function () {\n    return editor.instanceState.isToolLocked;\n  }, [editor]);\n  var isFocusMode = useValue(\"isFocusMode\", function () {\n    return editor.instanceState.isFocusMode;\n  }, [editor]);\n  var isDebugMode = useValue(\"isDebugMode\", function () {\n    return editor.instanceState.isDebugMode;\n  }, [editor]);\n  var exportBackground = useValue(\"exportBackground\", function () {\n    return editor.instanceState.exportBackground;\n  }, [editor]);\n  var emptyPage = useValue(\"emptyPage\", function () {\n    return editor.currentPageShapeIds.size === 0;\n  }, [editor]);\n  var selectedCount = useValue(\"selectedCount\", function () {\n    return editor.selectedIds.length;\n  }, [editor]);\n  var noneSelected = selectedCount === 0;\n  var oneSelected = selectedCount > 0;\n  var twoSelected = selectedCount > 1;\n  var threeSelected = selectedCount > 2;\n  var hasClipboardWrite = Boolean((_window$navigator$cli = window.navigator.clipboard) === null || _window$navigator$cli === void 0 ? void 0 : _window$navigator$cli.write);\n  var showEditLink = useHasLinkShapeSelected();\n  var showAutoSizeToggle = useShowAutoSizeToggle();\n  var allowGroup = useAllowGroup();\n  var allowUngroup = useAllowUngroup();\n  var canUndo = useCanUndo();\n  var canRedo = useCanRedo();\n  var isZoomedTo100 = useValue(\"isZoomedTo100\", function () {\n    return editor.zoomLevel === 1;\n  }, [editor]);\n  var menuSchema = useMemo(function () {\n    var menuSchema2 = compact([menuGroup(\"menu\", menuSubmenu(\"file\", \"menu.file\", menuGroup(\"print\", menuItem(actions[\"print\"], {\n      disabled: emptyPage\n    }))), menuSubmenu(\"edit\", \"menu.edit\", menuGroup(\"undo-actions\", menuItem(actions[\"undo\"], {\n      disabled: !canUndo\n    }), menuItem(actions[\"redo\"], {\n      disabled: !canRedo\n    })), menuGroup(\"clipboard-actions\", menuItem(actions[\"cut\"], {\n      disabled: noneSelected\n    }), menuItem(actions[\"copy\"], {\n      disabled: noneSelected\n    }), menuItem(actions[\"paste\"], {\n      disabled: !showMenuPaste\n    })), menuGroup(\"conversions\", menuSubmenu(\"copy-as\", \"menu.copy-as\", menuGroup(\"copy-as-group\", menuItem(actions[\"copy-as-svg\"], {\n      disabled: emptyPage\n    }), menuItem(actions[\"copy-as-png\"], {\n      disabled: emptyPage || !hasClipboardWrite\n    }), menuItem(actions[\"copy-as-json\"], {\n      disabled: emptyPage\n    })), menuGroup(\"export-bg\", menuItem(actions[\"toggle-transparent\"], {\n      checked: !exportBackground\n    }))), menuSubmenu(\"export-as\", \"menu.export-as\", menuGroup(\"export-as-group\", menuItem(actions[\"export-as-svg\"], {\n      disabled: emptyPage\n    }), menuItem(actions[\"export-as-png\"], {\n      disabled: emptyPage\n    }), menuItem(actions[\"export-as-json\"], {\n      disabled: emptyPage\n    })), menuGroup(\"export-bg\", menuItem(actions[\"toggle-transparent\"], {\n      checked: !exportBackground\n    })))), menuGroup(\"set-selection-group\", menuItem(actions[\"select-all\"], {\n      disabled: emptyPage\n    }), menuItem(actions[\"select-none\"], {\n      disabled: !oneSelected\n    })), menuGroup(\"selection\", showAutoSizeToggle && menuItem(actions[\"toggle-auto-size\"]), showEditLink && menuItem(actions[\"edit-link\"]), menuItem(actions[\"duplicate\"], {\n      disabled: !oneSelected\n    }), allowGroup && menuItem(actions[\"group\"]), allowUngroup && menuItem(actions[\"ungroup\"])), menuGroup(\"delete-group\", menuItem(actions[\"delete\"], {\n      disabled: !oneSelected\n    }))), menuSubmenu(\"view\", \"menu.view\", menuGroup(\"view-actions\", menuItem(actions[\"zoom-in\"]), menuItem(actions[\"zoom-out\"]), menuItem(actions[\"zoom-to-100\"], {\n      disabled: isZoomedTo100\n    }), menuItem(actions[\"zoom-to-fit\"], {\n      disabled: emptyPage\n    }), menuItem(actions[\"zoom-to-selection\"], {\n      disabled: emptyPage || !oneSelected\n    })))), menuGroup(\"extras\", menuItem(actions[\"insert-embed\"]), menuItem(actions[\"insert-media\"])), menuGroup(\"preferences\", menuSubmenu(\"preferences\", \"menu.preferences\", menuGroup(\"preferences-actions\", menuItem(actions[\"toggle-snap-mode\"], {\n      checked: isSnapMode\n    }), menuItem(actions[\"toggle-tool-lock\"], {\n      checked: isToolLock\n    }), menuItem(actions[\"toggle-grid\"], {\n      checked: isGridMode\n    }), menuItem(actions[\"toggle-dark-mode\"], {\n      checked: isDarkMode\n    }), menuItem(actions[\"toggle-focus-mode\"], {\n      checked: isFocusMode\n    }), menuItem(actions[\"toggle-reduce-motion\"], {\n      checked: animationSpeed === 0\n    }), menuItem(actions[\"toggle-debug-mode\"], {\n      checked: isDebugMode\n    }))), isMobile && menuCustom(\"LANGUAGE_MENU\", {\n      readonlyOk: true\n    }))]);\n    if (overrides) {\n      return overrides(editor, menuSchema2, {\n        actions: actions,\n        noneSelected: noneSelected,\n        oneSelected: oneSelected,\n        twoSelected: twoSelected,\n        threeSelected: threeSelected\n      });\n    }\n    return menuSchema2;\n  }, [editor, overrides, actions, oneSelected, twoSelected, threeSelected, emptyPage, isMobile, allowGroup, allowUngroup, showEditLink, hasClipboardWrite, showAutoSizeToggle, noneSelected, canUndo, canRedo, animationSpeed, isDarkMode, isGridMode, isSnapMode, isToolLock, isFocusMode, exportBackground, isDebugMode, isZoomedTo100]);\n  return /* @__PURE__ */jsx(TLUiMenuSchemaContext.Provider, {\n    value: menuSchema,\n    children: children\n  });\n}\nfunction useMenuSchema() {\n  var ctx = React.useContext(TLUiMenuSchemaContext);\n  if (!ctx) {\n    throw new Error(\"useMenuSchema must be used inside of a TLUiMenuSchemaProvider.\");\n  }\n  return ctx;\n}\nexport { TLUiMenuSchemaContext, TLUiMenuSchemaProvider, useMenuSchema };","map":{"version":3,"names":["jsx","useEditor","compact","React","useMemo","useValue","menuCustom","menuGroup","menuItem","menuSubmenu","showMenuPaste","useAllowGroup","useAllowUngroup","useActions","useBreakpoint","useCanRedo","useCanUndo","useHasLinkShapeSelected","useShowAutoSizeToggle","TLUiMenuSchemaContext","createContext","TLUiMenuSchemaProvider","_ref","_window$navigator$cli","overrides","children","editor","actions","breakpoint","isMobile","isDarkMode","animationSpeed","isGridMode","isSnapMode","isToolLock","instanceState","isToolLocked","isFocusMode","isDebugMode","exportBackground","emptyPage","currentPageShapeIds","size","selectedCount","selectedIds","length","noneSelected","oneSelected","twoSelected","threeSelected","hasClipboardWrite","Boolean","window","navigator","clipboard","write","showEditLink","showAutoSizeToggle","allowGroup","allowUngroup","canUndo","canRedo","isZoomedTo100","zoomLevel","menuSchema","menuSchema2","disabled","checked","readonlyOk","Provider","value","useMenuSchema","ctx","useContext","Error"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useMenuSchema.tsx"],"sourcesContent":["import { Editor, useEditor } from '@tldraw/editor'\nimport { compact } from '@tldraw/utils'\nimport React, { useMemo } from 'react'\nimport { useValue } from 'signia-react'\nimport {\n\tTLUiMenuSchema,\n\tmenuCustom,\n\tmenuGroup,\n\tmenuItem,\n\tmenuSubmenu,\n\tshowMenuPaste,\n\tuseAllowGroup,\n\tuseAllowUngroup,\n} from './menuHelpers'\nimport { useActions } from './useActions'\nimport { useBreakpoint } from './useBreakpoint'\nimport { useCanRedo } from './useCanRedo'\nimport { useCanUndo } from './useCanUndo'\nimport { useHasLinkShapeSelected } from './useHasLinkShapeSelected'\nimport { useShowAutoSizeToggle } from './useShowAutoSizeToggle'\n\n/** @public */\nexport type TLUiMenuSchemaContextType = TLUiMenuSchema\n\n/** @internal */\nexport const TLUiMenuSchemaContext = React.createContext({} as TLUiMenuSchemaContextType)\n\n/** @public */\nexport type TLUiMenuSchemaProviderProps = {\n\toverrides?: (\n\t\teditor: Editor,\n\t\tschema: TLUiMenuSchemaContextType,\n\t\thelpers: {\n\t\t\tactions: ReturnType<typeof useActions>\n\t\t\tnoneSelected: boolean\n\t\t\toneSelected: boolean\n\t\t\ttwoSelected: boolean\n\t\t\tthreeSelected: boolean\n\t\t}\n\t) => TLUiMenuSchemaContextType\n\tchildren: any\n}\n\n/** @internal */\nexport function TLUiMenuSchemaProvider({ overrides, children }: TLUiMenuSchemaProviderProps) {\n\tconst editor = useEditor()\n\tconst actions = useActions()\n\n\tconst breakpoint = useBreakpoint()\n\tconst isMobile = breakpoint < 5\n\n\tconst isDarkMode = useValue('isDarkMode', () => editor.isDarkMode, [editor])\n\tconst animationSpeed = useValue('animationSpeed', () => editor.animationSpeed, [editor])\n\tconst isGridMode = useValue('isGridMode', () => editor.isGridMode, [editor])\n\tconst isSnapMode = useValue('isSnapMode', () => editor.isSnapMode, [editor])\n\tconst isToolLock = useValue('isToolLock', () => editor.instanceState.isToolLocked, [editor])\n\tconst isFocusMode = useValue('isFocusMode', () => editor.instanceState.isFocusMode, [editor])\n\tconst isDebugMode = useValue('isDebugMode', () => editor.instanceState.isDebugMode, [editor])\n\tconst exportBackground = useValue(\n\t\t'exportBackground',\n\t\t() => editor.instanceState.exportBackground,\n\t\t[editor]\n\t)\n\n\tconst emptyPage = useValue('emptyPage', () => editor.currentPageShapeIds.size === 0, [editor])\n\n\tconst selectedCount = useValue('selectedCount', () => editor.selectedIds.length, [editor])\n\tconst noneSelected = selectedCount === 0\n\tconst oneSelected = selectedCount > 0\n\tconst twoSelected = selectedCount > 1\n\tconst threeSelected = selectedCount > 2\n\n\tconst hasClipboardWrite = Boolean(window.navigator.clipboard?.write)\n\tconst showEditLink = useHasLinkShapeSelected()\n\tconst showAutoSizeToggle = useShowAutoSizeToggle()\n\tconst allowGroup = useAllowGroup()\n\tconst allowUngroup = useAllowUngroup()\n\tconst canUndo = useCanUndo()\n\tconst canRedo = useCanRedo()\n\tconst isZoomedTo100 = useValue('isZoomedTo100', () => editor.zoomLevel === 1, [editor])\n\n\tconst menuSchema = useMemo<TLUiMenuSchema>(() => {\n\t\tconst menuSchema = compact([\n\t\t\tmenuGroup(\n\t\t\t\t'menu',\n\t\t\t\tmenuSubmenu(\n\t\t\t\t\t'file',\n\t\t\t\t\t'menu.file',\n\t\t\t\t\tmenuGroup('print', menuItem(actions['print'], { disabled: emptyPage }))\n\t\t\t\t),\n\t\t\t\tmenuSubmenu(\n\t\t\t\t\t'edit',\n\t\t\t\t\t'menu.edit',\n\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t'undo-actions',\n\t\t\t\t\t\tmenuItem(actions['undo'], { disabled: !canUndo }),\n\t\t\t\t\t\tmenuItem(actions['redo'], { disabled: !canRedo })\n\t\t\t\t\t),\n\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t'clipboard-actions',\n\t\t\t\t\t\tmenuItem(actions['cut'], { disabled: noneSelected }),\n\t\t\t\t\t\tmenuItem(actions['copy'], { disabled: noneSelected }),\n\t\t\t\t\t\tmenuItem(actions['paste'], { disabled: !showMenuPaste })\n\t\t\t\t\t),\n\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t'conversions',\n\t\t\t\t\t\tmenuSubmenu(\n\t\t\t\t\t\t\t'copy-as',\n\t\t\t\t\t\t\t'menu.copy-as',\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'copy-as-group',\n\t\t\t\t\t\t\t\tmenuItem(actions['copy-as-svg'], { disabled: emptyPage }),\n\t\t\t\t\t\t\t\tmenuItem(actions['copy-as-png'], { disabled: emptyPage || !hasClipboardWrite }),\n\t\t\t\t\t\t\t\tmenuItem(actions['copy-as-json'], { disabled: emptyPage })\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'export-bg',\n\t\t\t\t\t\t\t\tmenuItem(actions['toggle-transparent'], { checked: !exportBackground })\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t),\n\t\t\t\t\t\tmenuSubmenu(\n\t\t\t\t\t\t\t'export-as',\n\t\t\t\t\t\t\t'menu.export-as',\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'export-as-group',\n\t\t\t\t\t\t\t\tmenuItem(actions['export-as-svg'], { disabled: emptyPage }),\n\t\t\t\t\t\t\t\tmenuItem(actions['export-as-png'], { disabled: emptyPage }),\n\t\t\t\t\t\t\t\tmenuItem(actions['export-as-json'], { disabled: emptyPage })\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t\t\t'export-bg',\n\t\t\t\t\t\t\t\tmenuItem(actions['toggle-transparent'], { checked: !exportBackground })\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t\t),\n\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t'set-selection-group',\n\t\t\t\t\t\tmenuItem(actions['select-all'], { disabled: emptyPage }),\n\t\t\t\t\t\tmenuItem(actions['select-none'], { disabled: !oneSelected })\n\t\t\t\t\t),\n\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t'selection',\n\t\t\t\t\t\tshowAutoSizeToggle && menuItem(actions['toggle-auto-size']),\n\t\t\t\t\t\tshowEditLink && menuItem(actions['edit-link']),\n\t\t\t\t\t\tmenuItem(actions['duplicate'], { disabled: !oneSelected }),\n\t\t\t\t\t\tallowGroup && menuItem(actions['group']),\n\t\t\t\t\t\tallowUngroup && menuItem(actions['ungroup'])\n\t\t\t\t\t),\n\t\t\t\t\tmenuGroup('delete-group', menuItem(actions['delete'], { disabled: !oneSelected }))\n\t\t\t\t),\n\t\t\t\tmenuSubmenu(\n\t\t\t\t\t'view',\n\t\t\t\t\t'menu.view',\n\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t'view-actions',\n\t\t\t\t\t\tmenuItem(actions['zoom-in']),\n\t\t\t\t\t\tmenuItem(actions['zoom-out']),\n\t\t\t\t\t\tmenuItem(actions['zoom-to-100'], { disabled: isZoomedTo100 }),\n\t\t\t\t\t\tmenuItem(actions['zoom-to-fit'], { disabled: emptyPage }),\n\t\t\t\t\t\tmenuItem(actions['zoom-to-selection'], { disabled: emptyPage || !oneSelected })\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t\tmenuGroup('extras', menuItem(actions['insert-embed']), menuItem(actions['insert-media'])),\n\t\t\tmenuGroup(\n\t\t\t\t'preferences',\n\t\t\t\tmenuSubmenu(\n\t\t\t\t\t'preferences',\n\t\t\t\t\t'menu.preferences',\n\t\t\t\t\tmenuGroup(\n\t\t\t\t\t\t'preferences-actions',\n\t\t\t\t\t\tmenuItem(actions['toggle-snap-mode'], { checked: isSnapMode }),\n\t\t\t\t\t\tmenuItem(actions['toggle-tool-lock'], { checked: isToolLock }),\n\t\t\t\t\t\tmenuItem(actions['toggle-grid'], { checked: isGridMode }),\n\t\t\t\t\t\tmenuItem(actions['toggle-dark-mode'], { checked: isDarkMode }),\n\t\t\t\t\t\tmenuItem(actions['toggle-focus-mode'], { checked: isFocusMode }),\n\t\t\t\t\t\tmenuItem(actions['toggle-reduce-motion'], { checked: animationSpeed === 0 }),\n\t\t\t\t\t\tmenuItem(actions['toggle-debug-mode'], { checked: isDebugMode })\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tisMobile && menuCustom('LANGUAGE_MENU', { readonlyOk: true })\n\t\t\t),\n\t\t])\n\n\t\tif (overrides) {\n\t\t\treturn overrides(editor, menuSchema, {\n\t\t\t\tactions,\n\t\t\t\tnoneSelected,\n\t\t\t\toneSelected,\n\t\t\t\ttwoSelected,\n\t\t\t\tthreeSelected,\n\t\t\t})\n\t\t}\n\n\t\treturn menuSchema\n\t}, [\n\t\teditor,\n\t\toverrides,\n\t\tactions,\n\t\toneSelected,\n\t\ttwoSelected,\n\t\tthreeSelected,\n\t\temptyPage,\n\t\tisMobile,\n\t\tallowGroup,\n\t\tallowUngroup,\n\t\tshowEditLink,\n\t\thasClipboardWrite,\n\t\tshowAutoSizeToggle,\n\t\tnoneSelected,\n\t\tcanUndo,\n\t\tcanRedo,\n\t\tanimationSpeed,\n\t\tisDarkMode,\n\t\tisGridMode,\n\t\tisSnapMode,\n\t\tisToolLock,\n\t\tisFocusMode,\n\t\texportBackground,\n\t\tisDebugMode,\n\t\tisZoomedTo100,\n\t])\n\n\treturn (\n\t\t<TLUiMenuSchemaContext.Provider value={menuSchema}>{children}</TLUiMenuSchemaContext.Provider>\n\t)\n}\n\n/** @public */\nexport function useMenuSchema(): TLUiMenuSchema {\n\tconst ctx = React.useContext(TLUiMenuSchemaContext)\n\n\tif (!ctx) {\n\t\tthrow new Error('useMenuSchema must be used inside of a TLUiMenuSchemaProvider.')\n\t}\n\n\treturn ctx\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}