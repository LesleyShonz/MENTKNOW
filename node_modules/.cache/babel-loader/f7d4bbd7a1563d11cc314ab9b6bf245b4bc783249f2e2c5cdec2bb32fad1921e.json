{"ast":null,"code":"import _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { pointInPolygon } from \"@tldraw/primitives\";\nimport { ScribbleManager } from \"../../../managers/ScribbleManager.mjs\";\nimport { FrameShapeUtil } from \"../../../shapes/frame/FrameShapeUtil.mjs\";\nimport { GroupShapeUtil } from \"../../../shapes/group/GroupShapeUtil.mjs\";\nimport { StateNode } from \"../../StateNode.mjs\";\nvar Erasing = /*#__PURE__*/function (_StateNode) {\n  _inherits(Erasing, _StateNode);\n  var _super = _createSuper(Erasing);\n  function Erasing() {\n    var _this;\n    _classCallCheck(this, Erasing);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"info\", {});\n    _defineProperty(_assertThisInitialized(_this), \"scribble\", {});\n    _defineProperty(_assertThisInitialized(_this), \"markId\", \"\");\n    _defineProperty(_assertThisInitialized(_this), \"excludedShapeIds\", /* @__PURE__ */new Set());\n    _defineProperty(_assertThisInitialized(_this), \"onEnter\", function (info) {\n      _this.markId = _this.editor.mark(\"erase scribble begin\");\n      _this.info = info;\n      var originPagePoint = _this.editor.inputs.originPagePoint;\n      _this.excludedShapeIds = new Set(_this.editor.shapesArray.filter(function (shape) {\n        return _this.editor.isShapeOrAncestorLocked(shape) || (_this.editor.isShapeOfType(shape, GroupShapeUtil) || _this.editor.isShapeOfType(shape, FrameShapeUtil)) && _this.editor.isPointInShape(originPagePoint, shape);\n      }).map(function (shape) {\n        return shape.id;\n      }));\n      _this.startScribble();\n      _this.update();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"startScribble\", function () {\n      if (_this.scribble.tick) {\n        var _this$scribble;\n        _this.editor.off(\"tick\", (_this$scribble = _this.scribble) === null || _this$scribble === void 0 ? void 0 : _this$scribble.tick);\n      }\n      _this.scribble = new ScribbleManager({\n        onUpdate: _this.onScribbleUpdate,\n        onComplete: _this.onScribbleComplete,\n        color: \"muted-1\",\n        size: 12\n      });\n      _this.editor.on(\"tick\", _this.scribble.tick);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"pushPointToScribble\", function () {\n      var _this$editor$inputs$c = _this.editor.inputs.currentPagePoint,\n        x = _this$editor$inputs$c.x,\n        y = _this$editor$inputs$c.y;\n      _this.scribble.addPoint(x, y);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onScribbleUpdate\", function (scribble) {\n      _this.editor.setScribble(scribble);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onScribbleComplete\", function () {\n      _this.editor.off(\"tick\", _this.scribble.tick);\n      _this.editor.setScribble(null);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onExit\", function () {\n      _this.scribble.stop();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function () {\n      _this.update();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerUp\", function () {\n      _this.complete();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onCancel\", function () {\n      _this.cancel();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onComplete\", function () {\n      _this.complete();\n    });\n    return _this;\n  }\n  _createClass(Erasing, [{\n    key: \"update\",\n    value: function update() {\n      var _this$editor = this.editor,\n        shapesArray = _this$editor.shapesArray,\n        erasingIdsSet = _this$editor.erasingIdsSet,\n        _this$editor$inputs = _this$editor.inputs,\n        currentPagePoint = _this$editor$inputs.currentPagePoint,\n        previousPagePoint = _this$editor$inputs.previousPagePoint;\n      var excludedShapeIds = this.excludedShapeIds;\n      this.pushPointToScribble();\n      var erasing = new Set(erasingIdsSet);\n      var _iterator = _createForOfIteratorHelper(shapesArray),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var shape = _step.value;\n          if (this.editor.isShapeOfType(shape, GroupShapeUtil)) continue;\n          var pageMask = this.editor.getPageMaskById(shape.id);\n          if (pageMask && !pointInPolygon(currentPagePoint, pageMask)) {\n            continue;\n          }\n          var util = this.editor.getShapeUtil(shape);\n          var A = this.editor.getPointInShapeSpace(shape, previousPagePoint);\n          var B = this.editor.getPointInShapeSpace(shape, currentPagePoint);\n          if (util.hitTestLineSegment(shape, A, B)) {\n            erasing.add(this.editor.getOutermostSelectableShape(shape).id);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.editor.setErasingIds(_toConsumableArray(erasing).filter(function (id) {\n        return !excludedShapeIds.has(id);\n      }));\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      this.editor.deleteShapes(this.editor.pageState.erasingIds);\n      this.editor.setErasingIds([]);\n      this.parent.transition(\"idle\", {});\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.editor.setErasingIds([]);\n      this.editor.bailToMark(this.markId);\n      this.parent.transition(\"idle\", this.info);\n    }\n  }]);\n  return Erasing;\n}(StateNode);\n_defineProperty(Erasing, \"id\", \"erasing\");\nexport { Erasing };","map":{"version":3,"names":["pointInPolygon","ScribbleManager","FrameShapeUtil","GroupShapeUtil","StateNode","Erasing","_StateNode","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","Set","info","markId","editor","mark","originPagePoint","inputs","excludedShapeIds","shapesArray","filter","shape","isShapeOrAncestorLocked","isShapeOfType","isPointInShape","map","id","startScribble","update","scribble","tick","_this$scribble","off","onUpdate","onScribbleUpdate","onComplete","onScribbleComplete","color","size","on","_this$editor$inputs$c","currentPagePoint","x","y","addPoint","setScribble","stop","complete","cancel","_createClass","key","value","_this$editor","erasingIdsSet","_this$editor$inputs","previousPagePoint","pushPointToScribble","erasing","_iterator","_createForOfIteratorHelper","_step","s","n","done","pageMask","getPageMaskById","util","getShapeUtil","A","getPointInShapeSpace","B","hitTestLineSegment","add","getOutermostSelectableShape","err","e","f","setErasingIds","_toConsumableArray","has","deleteShapes","pageState","erasingIds","parent","transition","bailToMark"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/tools/EraserTool/children/Erasing.ts"],"sourcesContent":["import { pointInPolygon } from '@tldraw/primitives'\nimport { TLScribble, TLShapeId } from '@tldraw/tlschema'\nimport { ScribbleManager } from '../../../managers/ScribbleManager'\nimport { FrameShapeUtil } from '../../../shapes/frame/FrameShapeUtil'\nimport { GroupShapeUtil } from '../../../shapes/group/GroupShapeUtil'\nimport { TLEventHandlers, TLPointerEventInfo } from '../../../types/event-types'\nimport { StateNode } from '../../StateNode'\n\nexport class Erasing extends StateNode {\n\tstatic override id = 'erasing'\n\n\tprivate info = {} as TLPointerEventInfo\n\tprivate scribble = {} as ScribbleManager\n\tprivate markId = ''\n\tprivate excludedShapeIds = new Set<TLShapeId>()\n\n\toverride onEnter = (info: TLPointerEventInfo) => {\n\t\tthis.markId = this.editor.mark('erase scribble begin')\n\t\tthis.info = info\n\n\t\tconst { originPagePoint } = this.editor.inputs\n\t\tthis.excludedShapeIds = new Set(\n\t\t\tthis.editor.shapesArray\n\t\t\t\t.filter(\n\t\t\t\t\t(shape) =>\n\t\t\t\t\t\tthis.editor.isShapeOrAncestorLocked(shape) ||\n\t\t\t\t\t\t((this.editor.isShapeOfType(shape, GroupShapeUtil) ||\n\t\t\t\t\t\t\tthis.editor.isShapeOfType(shape, FrameShapeUtil)) &&\n\t\t\t\t\t\t\tthis.editor.isPointInShape(originPagePoint, shape))\n\t\t\t\t)\n\t\t\t\t.map((shape) => shape.id)\n\t\t)\n\n\t\tthis.startScribble()\n\t\tthis.update()\n\t}\n\n\tprivate startScribble = () => {\n\t\tif (this.scribble.tick) {\n\t\t\tthis.editor.off('tick', this.scribble?.tick)\n\t\t}\n\n\t\tthis.scribble = new ScribbleManager({\n\t\t\tonUpdate: this.onScribbleUpdate,\n\t\t\tonComplete: this.onScribbleComplete,\n\t\t\tcolor: 'muted-1',\n\t\t\tsize: 12,\n\t\t})\n\n\t\tthis.editor.on('tick', this.scribble.tick)\n\t}\n\n\tprivate pushPointToScribble = () => {\n\t\tconst { x, y } = this.editor.inputs.currentPagePoint\n\t\tthis.scribble.addPoint(x, y)\n\t}\n\n\tprivate onScribbleUpdate = (scribble: TLScribble) => {\n\t\tthis.editor.setScribble(scribble)\n\t}\n\n\tprivate onScribbleComplete = () => {\n\t\tthis.editor.off('tick', this.scribble.tick)\n\t\tthis.editor.setScribble(null)\n\t}\n\n\toverride onExit = () => {\n\t\tthis.scribble.stop()\n\t}\n\n\toverride onPointerMove = () => {\n\t\tthis.update()\n\t}\n\n\toverride onPointerUp: TLEventHandlers['onPointerUp'] = () => {\n\t\tthis.complete()\n\t}\n\n\toverride onCancel: TLEventHandlers['onCancel'] = () => {\n\t\tthis.cancel()\n\t}\n\n\toverride onComplete: TLEventHandlers['onComplete'] = () => {\n\t\tthis.complete()\n\t}\n\n\tupdate() {\n\t\tconst {\n\t\t\tshapesArray,\n\t\t\terasingIdsSet,\n\t\t\tinputs: { currentPagePoint, previousPagePoint },\n\t\t} = this.editor\n\n\t\tconst { excludedShapeIds } = this\n\n\t\tthis.pushPointToScribble()\n\n\t\tconst erasing = new Set<TLShapeId>(erasingIdsSet)\n\n\t\tfor (const shape of shapesArray) {\n\t\t\tif (this.editor.isShapeOfType(shape, GroupShapeUtil)) continue\n\n\t\t\t// Avoid testing masked shapes, unless the pointer is inside the mask\n\t\t\tconst pageMask = this.editor.getPageMaskById(shape.id)\n\t\t\tif (pageMask && !pointInPolygon(currentPagePoint, pageMask)) {\n\t\t\t\tcontinue\n\t\t\t}\n\n\t\t\t// Hit test the shape using a line segment\n\t\t\tconst util = this.editor.getShapeUtil(shape)\n\t\t\tconst A = this.editor.getPointInShapeSpace(shape, previousPagePoint)\n\t\t\tconst B = this.editor.getPointInShapeSpace(shape, currentPagePoint)\n\n\t\t\t// If it's a hit, erase the outermost selectable shape\n\t\t\tif (util.hitTestLineSegment(shape, A, B)) {\n\t\t\t\terasing.add(this.editor.getOutermostSelectableShape(shape).id)\n\t\t\t}\n\t\t}\n\n\t\t// Remove the hit shapes, except if they're in the list of excluded shapes\n\t\t// (these excluded shapes will be any frames or groups the pointer was inside of\n\t\t// when the user started erasing)\n\t\tthis.editor.setErasingIds([...erasing].filter((id) => !excludedShapeIds.has(id)))\n\t}\n\n\tcomplete() {\n\t\tthis.editor.deleteShapes(this.editor.pageState.erasingIds)\n\t\tthis.editor.setErasingIds([])\n\t\tthis.parent.transition('idle', {})\n\t}\n\n\tcancel() {\n\t\tthis.editor.setErasingIds([])\n\t\tthis.editor.bailToMark(this.markId)\n\t\tthis.parent.transition('idle', this.info)\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}