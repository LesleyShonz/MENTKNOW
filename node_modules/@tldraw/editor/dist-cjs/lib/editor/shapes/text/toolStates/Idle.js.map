{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/shapes/text/toolStates/Idle.ts"],
  "sourcesContent": ["import { StateNode } from '../../../tools/StateNode'\nimport { TLEventHandlers } from '../../../types/event-types'\nimport { GeoShapeUtil } from '../../geo/GeoShapeUtil'\nimport { TextShapeUtil } from '../TextShapeUtil'\n\nexport class Idle extends StateNode {\n\tstatic override id = 'idle'\n\n\tonPointerEnter: TLEventHandlers['onPointerEnter'] = (info) => {\n\t\tswitch (info.target) {\n\t\t\tcase 'canvas': {\n\t\t\t\t// noop\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'shape': {\n\t\t\t\tconst { selectedIds, focusLayerId } = this.editor\n\t\t\t\tconst hoveringShape = this.editor.getOutermostSelectableShape(\n\t\t\t\t\tinfo.shape,\n\t\t\t\t\t(parent) => !selectedIds.includes(parent.id)\n\t\t\t\t)\n\t\t\t\tif (hoveringShape.id !== focusLayerId) {\n\t\t\t\t\tif (this.editor.isShapeOfType(hoveringShape, TextShapeUtil)) {\n\t\t\t\t\t\tthis.editor.setHoveredId(hoveringShape.id)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonPointerLeave: TLEventHandlers['onPointerLeave'] = (info) => {\n\t\tswitch (info.target) {\n\t\t\tcase 'shape': {\n\t\t\t\tthis.editor.setHoveredId(null)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonPointerDown: TLEventHandlers['onPointerDown'] = (info) => {\n\t\tconst { hoveredId } = this.editor\n\t\tif (hoveredId) {\n\t\t\tconst shape = this.editor.getShapeById(hoveredId)!\n\t\t\tif (this.editor.isShapeOfType(shape, TextShapeUtil)) {\n\t\t\t\trequestAnimationFrame(() => {\n\t\t\t\t\tthis.editor.setSelectedIds([shape.id])\n\t\t\t\t\tthis.editor.setEditingId(shape.id)\n\t\t\t\t\tthis.editor.setSelectedTool('select.editing_shape', {\n\t\t\t\t\t\t...info,\n\t\t\t\t\t\ttarget: 'shape',\n\t\t\t\t\t\tshape,\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tthis.parent.transition('pointing', info)\n\t}\n\n\tonEnter = () => {\n\t\tthis.editor.setCursor({ type: 'cross' })\n\t}\n\n\tonKeyDown: TLEventHandlers['onKeyDown'] = (info) => {\n\t\tif (info.key === 'Enter') {\n\t\t\tconst shape = this.editor.selectedShapes[0]\n\t\t\tif (shape && this.editor.isShapeOfType(shape, GeoShapeUtil)) {\n\t\t\t\tthis.editor.setSelectedTool('select')\n\t\t\t\tthis.editor.setEditingId(shape.id)\n\t\t\t\tthis.editor.root.current.value!.transition('editing_shape', {\n\t\t\t\t\t...info,\n\t\t\t\t\ttarget: 'shape',\n\t\t\t\t\tshape,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tonCancel = () => {\n\t\tthis.editor.setSelectedTool('select')\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0B;AAE1B,0BAA6B;AAC7B,2BAA8B;AAEvB,MAAM,aAAa,2BAAU;AAAA,EACnC,OAAgB,KAAK;AAAA,EAErB,iBAAoD,CAAC,SAAS;AAC7D,YAAQ,KAAK,QAAQ;AAAA,MACpB,KAAK,UAAU;AAEd;AAAA,MACD;AAAA,MACA,KAAK,SAAS;AACb,cAAM,EAAE,aAAa,aAAa,IAAI,KAAK;AAC3C,cAAM,gBAAgB,KAAK,OAAO;AAAA,UACjC,KAAK;AAAA,UACL,CAAC,WAAW,CAAC,YAAY,SAAS,OAAO,EAAE;AAAA,QAC5C;AACA,YAAI,cAAc,OAAO,cAAc;AACtC,cAAI,KAAK,OAAO,cAAc,eAAe,kCAAa,GAAG;AAC5D,iBAAK,OAAO,aAAa,cAAc,EAAE;AAAA,UAC1C;AAAA,QACD;AACA;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,iBAAoD,CAAC,SAAS;AAC7D,YAAQ,KAAK,QAAQ;AAAA,MACpB,KAAK,SAAS;AACb,aAAK,OAAO,aAAa,IAAI;AAC7B;AAAA,MACD;AAAA,IACD;AAAA,EACD;AAAA,EAEA,gBAAkD,CAAC,SAAS;AAC3D,UAAM,EAAE,UAAU,IAAI,KAAK;AAC3B,QAAI,WAAW;AACd,YAAM,QAAQ,KAAK,OAAO,aAAa,SAAS;AAChD,UAAI,KAAK,OAAO,cAAc,OAAO,kCAAa,GAAG;AACpD,8BAAsB,MAAM;AAC3B,eAAK,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC;AACrC,eAAK,OAAO,aAAa,MAAM,EAAE;AACjC,eAAK,OAAO,gBAAgB,wBAAwB;AAAA,YACnD,GAAG;AAAA,YACH,QAAQ;AAAA,YACR;AAAA,UACD,CAAC;AAAA,QACF,CAAC;AACD;AAAA,MACD;AAAA,IACD;AAEA,SAAK,OAAO,WAAW,YAAY,IAAI;AAAA,EACxC;AAAA,EAEA,UAAU,MAAM;AACf,SAAK,OAAO,UAAU,EAAE,MAAM,QAAQ,CAAC;AAAA,EACxC;AAAA,EAEA,YAA0C,CAAC,SAAS;AACnD,QAAI,KAAK,QAAQ,SAAS;AACzB,YAAM,QAAQ,KAAK,OAAO,eAAe,CAAC;AAC1C,UAAI,SAAS,KAAK,OAAO,cAAc,OAAO,gCAAY,GAAG;AAC5D,aAAK,OAAO,gBAAgB,QAAQ;AACpC,aAAK,OAAO,aAAa,MAAM,EAAE;AACjC,aAAK,OAAO,KAAK,QAAQ,MAAO,WAAW,iBAAiB;AAAA,UAC3D,GAAG;AAAA,UACH,QAAQ;AAAA,UACR;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AAAA,EAEA,WAAW,MAAM;AAChB,SAAK,OAAO,gBAAgB,QAAQ;AAAA,EACrC;AACD;",
  "names": []
}
