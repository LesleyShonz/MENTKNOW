{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/tools/SelectTool/children/Idle.ts"],
  "sourcesContent": ["import { Vec2d } from '@tldraw/primitives'\nimport { TLGeoShape, TLShape, TLTextShape, createShapeId } from '@tldraw/tlschema'\nimport { debugFlags } from '../../../../utils/debug-flags'\nimport { GroupShapeUtil } from '../../../shapes/group/GroupShapeUtil'\nimport {\n\tTLClickEventInfo,\n\tTLEventHandlers,\n\tTLKeyboardEventInfo,\n\tTLPointerEventInfo,\n} from '../../../types/event-types'\nimport { StateNode } from '../../StateNode'\n\nexport class Idle extends StateNode {\n\tstatic override id = 'idle'\n\n\tisDarwin = window.navigator.userAgent.toLowerCase().indexOf('mac') > -1\n\n\tonPointerEnter: TLEventHandlers['onPointerEnter'] = (info) => {\n\t\tswitch (info.target) {\n\t\t\tcase 'canvas': {\n\t\t\t\t// noop\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'shape': {\n\t\t\t\tconst { selectedIds, focusLayerId } = this.editor\n\t\t\t\tconst hoveringShape = this.editor.getOutermostSelectableShape(\n\t\t\t\t\tinfo.shape,\n\t\t\t\t\t(parent) => !selectedIds.includes(parent.id)\n\t\t\t\t)\n\t\t\t\tif (hoveringShape.id !== focusLayerId) {\n\t\t\t\t\tthis.editor.setHoveredId(hoveringShape.id)\n\t\t\t\t}\n\n\t\t\t\t// Custom cursor debugging!\n\t\t\t\t// Change the cursor to the type specified by the shape's text label\n\t\t\t\tif (debugFlags.debugCursors.value) {\n\t\t\t\t\tif (hoveringShape.type !== 'geo') break\n\t\t\t\t\tconst cursorType = (hoveringShape as TLGeoShape).props.text\n\t\t\t\t\ttry {\n\t\t\t\t\t\tthis.editor.setCursor({ type: cursorType })\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\tconsole.error(`Cursor type not recognized: '${cursorType}'`)\n\t\t\t\t\t\tthis.editor.setCursor({ type: 'default' })\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonPointerLeave: TLEventHandlers['onPointerLeave'] = (info) => {\n\t\tswitch (info.target) {\n\t\t\tcase 'shape': {\n\t\t\t\tthis.editor.setHoveredId(null)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonPointerDown: TLEventHandlers['onPointerDown'] = (info) => {\n\t\tif (this.editor.isMenuOpen) return\n\n\t\tconst shouldEnterCropMode = this.shouldEnterCropMode(info, true)\n\n\t\tif (info.ctrlKey && !shouldEnterCropMode) {\n\t\t\t// On Mac, you can right click using the Control keys + Click.\n\t\t\tif (info.target === 'shape' && this.isDarwin && this.editor.inputs.keys.has('ControlLeft')) {\n\t\t\t\tif (!this.editor.isShapeOrAncestorLocked(info.shape)) {\n\t\t\t\t\tthis.parent.transition('pointing_shape', info)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.parent.transition('brushing', info)\n\t\t\treturn\n\t\t}\n\n\t\tswitch (info.target) {\n\t\t\tcase 'canvas': {\n\t\t\t\tthis.parent.transition('pointing_canvas', info)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'shape': {\n\t\t\t\tif (this.editor.isShapeOrAncestorLocked(info.shape)) break\n\t\t\t\tthis.parent.transition('pointing_shape', info)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'handle': {\n\t\t\t\tif (this.editor.isReadOnly) break\n\t\t\t\tif (this.editor.inputs.altKey) {\n\t\t\t\t\tthis.parent.transition('pointing_shape', info)\n\t\t\t\t} else {\n\t\t\t\t\tthis.parent.transition('pointing_handle', info)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'selection': {\n\t\t\t\tswitch (info.handle) {\n\t\t\t\t\tcase 'mobile_rotate':\n\t\t\t\t\tcase 'top_left_rotate':\n\t\t\t\t\tcase 'top_right_rotate':\n\t\t\t\t\tcase 'bottom_left_rotate':\n\t\t\t\t\tcase 'bottom_right_rotate': {\n\t\t\t\t\t\tthis.parent.transition('pointing_rotate_handle', info)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase 'top':\n\t\t\t\t\tcase 'right':\n\t\t\t\t\tcase 'bottom':\n\t\t\t\t\tcase 'left': {\n\t\t\t\t\t\tif (shouldEnterCropMode) {\n\t\t\t\t\t\t\tthis.parent.transition('pointing_crop_handle', info)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.parent.transition('pointing_resize_handle', info)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase 'top_left':\n\t\t\t\t\tcase 'top_right':\n\t\t\t\t\tcase 'bottom_left':\n\t\t\t\t\tcase 'bottom_right': {\n\t\t\t\t\t\tif (shouldEnterCropMode) {\n\t\t\t\t\t\t\tthis.parent.transition('pointing_crop_handle', info)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.parent.transition('pointing_resize_handle', info)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tthis.parent.transition('pointing_selection', info)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonDoubleClick: TLEventHandlers['onDoubleClick'] = (info) => {\n\t\tif (info.phase !== 'up') return\n\n\t\tswitch (info.target) {\n\t\t\tcase 'canvas': {\n\t\t\t\t// Create text shape and transition to editing_shape\n\t\t\t\tif (this.editor.isReadOnly) break\n\t\t\t\tthis.handleDoubleClickOnCanvas(info)\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'selection': {\n\t\t\t\tif (this.editor.isReadOnly) break\n\n\t\t\t\tconst { onlySelectedShape } = this.editor\n\t\t\t\tif (onlySelectedShape) {\n\t\t\t\t\tconst util = this.editor.getShapeUtil(onlySelectedShape)\n\n\t\t\t\t\t// Test edges for an onDoubleClickEdge handler\n\t\t\t\t\tif (\n\t\t\t\t\t\tinfo.handle === 'right' ||\n\t\t\t\t\t\tinfo.handle === 'left' ||\n\t\t\t\t\t\tinfo.handle === 'top' ||\n\t\t\t\t\t\tinfo.handle === 'bottom'\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst change = util.onDoubleClickEdge?.(onlySelectedShape)\n\t\t\t\t\t\tif (change) {\n\t\t\t\t\t\t\tthis.editor.mark('double click edge')\n\t\t\t\t\t\t\tthis.editor.updateShapes([change])\n\t\t\t\t\t\t\treturn\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// For corners OR edges\n\t\t\t\t\tif (\n\t\t\t\t\t\tutil.canCrop(onlySelectedShape) &&\n\t\t\t\t\t\t!this.editor.isShapeOrAncestorLocked(onlySelectedShape)\n\t\t\t\t\t) {\n\t\t\t\t\t\tthis.parent.transition('crop', info)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shouldStartEditingShape(onlySelectedShape)) {\n\t\t\t\t\t\tthis.startEditingShape(onlySelectedShape, info)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'shape': {\n\t\t\t\tconst { shape } = info\n\t\t\t\tconst util = this.editor.getShapeUtil(shape)\n\n\t\t\t\t// Allow playing videos and embeds\n\t\t\t\tif (shape.type !== 'video' && shape.type !== 'embed' && this.editor.isReadOnly) break\n\n\t\t\t\tif (util.onDoubleClick) {\n\t\t\t\t\t// Call the shape's double click handler\n\t\t\t\t\tconst change = util.onDoubleClick?.(shape)\n\t\t\t\t\tif (change) {\n\t\t\t\t\t\tthis.editor.updateShapes([change])\n\t\t\t\t\t\treturn\n\t\t\t\t\t} else if (util.canCrop(shape) && !this.editor.isShapeOrAncestorLocked(shape)) {\n\t\t\t\t\t\t// crop on double click\n\t\t\t\t\t\tthis.editor.mark('select and crop')\n\t\t\t\t\t\tthis.editor.select(info.shape?.id)\n\t\t\t\t\t\tthis.parent.transition('crop', info)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// If the shape can edit, then begin editing\n\t\t\t\tif (this.shouldStartEditingShape(shape)) {\n\t\t\t\t\tthis.startEditingShape(shape, info)\n\t\t\t\t} else {\n\t\t\t\t\t// If the shape's double click handler has not created a change,\n\t\t\t\t\t// and if the shape cannot edit, then create a text shape and\n\t\t\t\t\t// begin editing the text shape\n\t\t\t\t\tthis.handleDoubleClickOnCanvas(info)\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'handle': {\n\t\t\t\tif (this.editor.isReadOnly) break\n\t\t\t\tconst { shape, handle } = info\n\n\t\t\t\tconst util = this.editor.getShapeUtil(shape)\n\t\t\t\tconst changes = util.onDoubleClickHandle?.(shape, handle)\n\n\t\t\t\tif (changes) {\n\t\t\t\t\tthis.editor.updateShapes([changes])\n\t\t\t\t} else {\n\t\t\t\t\t// If the shape's double click handler has not created a change,\n\t\t\t\t\t// and if the shape can edit, then begin editing the shape.\n\t\t\t\t\tif (this.shouldStartEditingShape(shape)) {\n\t\t\t\t\t\tthis.startEditingShape(shape, info)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tonRightClick: TLEventHandlers['onRightClick'] = (info) => {\n\t\tswitch (info.target) {\n\t\t\tcase 'canvas': {\n\t\t\t\tthis.editor.selectNone()\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'shape': {\n\t\t\t\tconst { selectedIds } = this.editor.pageState\n\t\t\t\tconst { shape } = info\n\n\t\t\t\tconst targetShape = this.editor.getOutermostSelectableShape(\n\t\t\t\t\tshape,\n\t\t\t\t\t(parent) => !this.editor.isSelected(parent.id)\n\t\t\t\t)\n\n\t\t\t\tif (!selectedIds.includes(targetShape.id)) {\n\t\t\t\t\tthis.editor.mark('selecting shape')\n\t\t\t\t\tthis.editor.setSelectedIds([targetShape.id])\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonEnter = () => {\n\t\tthis.editor.setHoveredId(null)\n\t\tthis.editor.setCursor({ type: 'default' })\n\t}\n\n\tonCancel: TLEventHandlers['onCancel'] = () => {\n\t\tif (\n\t\t\tthis.editor.focusLayerId !== this.editor.currentPageId &&\n\t\t\tthis.editor.selectedIds.length > 0\n\t\t) {\n\t\t\tthis.editor.popFocusLayer()\n\t\t} else {\n\t\t\tthis.editor.mark('clearing selection')\n\t\t\tthis.editor.selectNone()\n\t\t}\n\t}\n\n\tonKeyDown: TLEventHandlers['onKeyDown'] = (info) => {\n\t\tswitch (info.code) {\n\t\t\tcase 'ArrowLeft':\n\t\t\tcase 'ArrowRight':\n\t\t\tcase 'ArrowUp':\n\t\t\tcase 'ArrowDown': {\n\t\t\t\tthis.nudgeSelectedShapes(false)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonKeyRepeat: TLEventHandlers['onKeyDown'] = (info) => {\n\t\tswitch (info.code) {\n\t\t\tcase 'ArrowLeft':\n\t\t\tcase 'ArrowRight':\n\t\t\tcase 'ArrowUp':\n\t\t\tcase 'ArrowDown': {\n\t\t\t\tthis.nudgeSelectedShapes(true)\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonKeyUp = (info: TLKeyboardEventInfo) => {\n\t\tif (this.editor.isReadOnly) {\n\t\t\tswitch (info.code) {\n\t\t\t\tcase 'Enter': {\n\t\t\t\t\tif (this.shouldStartEditingShape() && this.editor.onlySelectedShape) {\n\t\t\t\t\t\tthis.startEditingShape(this.editor.onlySelectedShape, {\n\t\t\t\t\t\t\t...info,\n\t\t\t\t\t\t\ttarget: 'shape',\n\t\t\t\t\t\t\tshape: this.editor.onlySelectedShape,\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tswitch (info.code) {\n\t\t\t\tcase 'Enter': {\n\t\t\t\t\tconst { selectedShapes } = this.editor\n\n\t\t\t\t\tif (selectedShapes.every((shape) => this.editor.isShapeOfType(shape, GroupShapeUtil))) {\n\t\t\t\t\t\tthis.editor.setSelectedIds(\n\t\t\t\t\t\t\tselectedShapes.flatMap((shape) => this.editor.getSortedChildIds(shape.id))\n\t\t\t\t\t\t)\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shouldStartEditingShape() && this.editor.onlySelectedShape) {\n\t\t\t\t\t\tthis.startEditingShape(this.editor.onlySelectedShape, {\n\t\t\t\t\t\t\t...info,\n\t\t\t\t\t\t\ttarget: 'shape',\n\t\t\t\t\t\t\tshape: this.editor.onlySelectedShape,\n\t\t\t\t\t\t})\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.shouldEnterCropMode(info, false)) {\n\t\t\t\t\t\tthis.parent.transition('crop', info)\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate shouldStartEditingShape(shape: TLShape | null = this.editor.onlySelectedShape): boolean {\n\t\tif (!shape) return false\n\t\tif (this.editor.isShapeOrAncestorLocked(shape) && shape.type !== 'embed') return false\n\n\t\tconst util = this.editor.getShapeUtil(shape)\n\t\treturn util.canEdit(shape)\n\t}\n\n\tprivate shouldEnterCropMode(\n\t\tinfo: TLPointerEventInfo | TLKeyboardEventInfo,\n\t\twithCtrlKey: boolean\n\t): boolean {\n\t\tconst singleShape = this.editor.onlySelectedShape\n\t\tif (!singleShape) return false\n\t\tif (this.editor.isShapeOrAncestorLocked(singleShape)) return false\n\n\t\tconst shapeUtil = this.editor.getShapeUtil(singleShape)\n\t\t// Should the Ctrl key be pressed to enter crop mode\n\t\tif (withCtrlKey) {\n\t\t\treturn shapeUtil.canCrop(singleShape) && info.ctrlKey\n\t\t} else {\n\t\t\treturn shapeUtil.canCrop(singleShape)\n\t\t}\n\t}\n\n\tprivate startEditingShape(shape: TLShape, info: TLClickEventInfo | TLKeyboardEventInfo) {\n\t\tif (this.editor.isShapeOrAncestorLocked(shape) && shape.type !== 'embed') return\n\t\tthis.editor.mark('editing shape')\n\t\tthis.editor.setEditingId(shape.id)\n\t\tthis.parent.transition('editing_shape', info)\n\t}\n\n\thandleDoubleClickOnCanvas(info: TLClickEventInfo) {\n\t\tthis.editor.mark('creating text shape')\n\n\t\tconst id = createShapeId()\n\n\t\tconst { x, y } = this.editor.inputs.currentPagePoint\n\n\t\tthis.editor.createShapes<TLTextShape>([\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\ttype: 'text',\n\t\t\t\tx,\n\t\t\t\ty,\n\t\t\t\tprops: {\n\t\t\t\t\ttext: '',\n\t\t\t\t\tautoSize: true,\n\t\t\t\t},\n\t\t\t},\n\t\t])\n\n\t\tconst shape = this.editor.getShapeById(id)\n\t\tif (!shape) return\n\n\t\tconst bounds = this.editor.getBounds(shape)\n\n\t\tthis.editor.updateShapes([\n\t\t\t{\n\t\t\t\tid,\n\t\t\t\ttype: 'text',\n\t\t\t\tx: shape.x - bounds.width / 2,\n\t\t\t\ty: shape.y - bounds.height / 2,\n\t\t\t},\n\t\t])\n\n\t\tthis.editor.setEditingId(id)\n\t\tthis.editor.select(id)\n\t\tthis.parent.transition('editing_shape', info)\n\t}\n\n\tprivate nudgeSelectedShapes(ephemeral = false) {\n\t\tconst {\n\t\t\teditor: {\n\t\t\t\tinputs: { keys },\n\t\t\t},\n\t\t} = this\n\n\t\t// We want to use the \"actual\" shift key state,\n\t\t// not the one that's in the editor.inputs.shiftKey,\n\t\t// because that one uses a short timeout on release\n\t\tconst shiftKey = keys.has('ShiftLeft')\n\n\t\tconst delta = new Vec2d(0, 0)\n\n\t\tif (keys.has('ArrowLeft')) delta.x -= 1\n\t\tif (keys.has('ArrowRight')) delta.x += 1\n\t\tif (keys.has('ArrowUp')) delta.y -= 1\n\t\tif (keys.has('ArrowDown')) delta.y += 1\n\n\t\tif (delta.equals(new Vec2d(0, 0))) return\n\n\t\tif (!ephemeral) this.editor.mark('nudge shapes')\n\n\t\tthis.editor.nudgeShapes(this.editor.selectedIds, delta, shiftKey)\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
