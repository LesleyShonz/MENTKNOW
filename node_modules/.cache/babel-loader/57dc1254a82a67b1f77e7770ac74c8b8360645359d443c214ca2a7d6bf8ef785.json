{"ast":null,"code":"import _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { Fragment, jsx } from \"react/jsx-runtime\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { HASH_PATERN_ZOOM_NAMES, MAX_ZOOM } from \"../constants.mjs\";\nimport { debugFlags } from \"../utils/debug-flags.mjs\";\nimport { useEditor } from \"./useEditor.mjs\";\nvar TILE_PATTERN_SIZE = 8;\nvar generateImage = function generateImage(dpr, currentZoom, darkMode) {\n  return new Promise(function (resolve, reject) {\n    var size = TILE_PATTERN_SIZE * currentZoom * dpr;\n    var canvasEl = document.createElement(\"canvas\");\n    canvasEl.width = size;\n    canvasEl.height = size;\n    var ctx = canvasEl.getContext(\"2d\");\n    if (!ctx) return;\n    ctx.fillStyle = darkMode ? \"#212529\" : \"#f8f9fa\";\n    ctx.fillRect(0, 0, size, size);\n    ctx.globalCompositeOperation = \"destination-out\";\n    ctx.lineCap = \"round\";\n    ctx.lineWidth = 1.25 * currentZoom * dpr;\n    var t2 = 8 / 12;\n    var s = function s(v) {\n      return v * currentZoom * dpr;\n    };\n    ctx.beginPath();\n    ctx.moveTo(s(t2 * 1), s(t2 * 3));\n    ctx.lineTo(s(t2 * 3), s(t2 * 1));\n    ctx.moveTo(s(t2 * 5), s(t2 * 7));\n    ctx.lineTo(s(t2 * 7), s(t2 * 5));\n    ctx.moveTo(s(t2 * 9), s(t2 * 11));\n    ctx.lineTo(s(t2 * 11), s(t2 * 9));\n    ctx.stroke();\n    canvasEl.toBlob(function (blob) {\n      if (!blob || debugFlags.throwToBlob.value) {\n        reject();\n      } else {\n        resolve(blob);\n      }\n    });\n  });\n};\nvar canvasBlob = function canvasBlob(size, fn) {\n  var canvas = document.createElement(\"canvas\");\n  canvas.width = size[0];\n  canvas.height = size[1];\n  var ctx = canvas.getContext(\"2d\");\n  if (!ctx) return \"\";\n  fn(ctx);\n  return canvas.toDataURL();\n};\nvar getDefaultPatterns = function getDefaultPatterns() {\n  var defaultPatterns = [];\n  for (var i = 1; i <= Math.ceil(MAX_ZOOM); i++) {\n    var whitePixelBlob = canvasBlob([1, 1], function (ctx) {\n      ctx.fillStyle = \"#e8e8e8\";\n      ctx.fillRect(0, 0, 1, 1);\n    });\n    var blackPixelBlob = canvasBlob([1, 1], function (ctx) {\n      ctx.fillStyle = \"#2c3036\";\n      ctx.fillRect(0, 0, 1, 1);\n    });\n    defaultPatterns.push({\n      zoom: i,\n      url: whitePixelBlob,\n      darkMode: false\n    });\n    defaultPatterns.push({\n      zoom: i,\n      url: blackPixelBlob,\n      darkMode: true\n    });\n  }\n  return defaultPatterns;\n};\nvar usePattern = function usePattern() {\n  var editor = useEditor();\n  var dpr = editor.devicePixelRatio;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isReady = _useState2[0],\n    setIsReady = _useState2[1];\n  var defaultPatterns = useMemo(function () {\n    return getDefaultPatterns();\n  }, []);\n  var _useState3 = useState(defaultPatterns),\n    _useState4 = _slicedToArray(_useState3, 2),\n    backgroundUrls = _useState4[0],\n    setBackgroundUrls = _useState4[1];\n  useEffect(function () {\n    var promises = [];\n    var _loop = function _loop(i) {\n      promises.push(generateImage(dpr, i, false).then(function (blob) {\n        return {\n          zoom: i,\n          url: URL.createObjectURL(blob),\n          darkMode: false\n        };\n      }));\n      promises.push(generateImage(dpr, i, true).then(function (blob) {\n        return {\n          zoom: i,\n          url: URL.createObjectURL(blob),\n          darkMode: true\n        };\n      }));\n    };\n    for (var i = 1; i <= Math.ceil(MAX_ZOOM); i++) {\n      _loop(i);\n    }\n    var isCancelled = false;\n    Promise.all(promises).then(function (urls) {\n      if (isCancelled) return;\n      setBackgroundUrls(urls);\n      setIsReady(true);\n    });\n    return function () {\n      isCancelled = true;\n      setIsReady(false);\n    };\n  }, [dpr]);\n  var context = /* @__PURE__ */jsx(Fragment, {\n    children: backgroundUrls.map(function (item) {\n      var key = item.zoom + (item.darkMode ? \"_dark\" : \"_light\");\n      return /* @__PURE__ */jsx(\"pattern\", {\n        id: HASH_PATERN_ZOOM_NAMES[key],\n        width: TILE_PATTERN_SIZE,\n        height: TILE_PATTERN_SIZE,\n        patternUnits: \"userSpaceOnUse\",\n        children: /* @__PURE__ */jsx(\"image\", {\n          href: item.url,\n          width: TILE_PATTERN_SIZE,\n          height: TILE_PATTERN_SIZE\n        })\n      }, key);\n    })\n  });\n  return {\n    context: context,\n    isReady: isReady\n  };\n};\nvar t = 8 / 12;\nfunction exportPatternSvgDefs(backgroundColor) {\n  var divEl = document.createElement(\"div\");\n  divEl.innerHTML = \"\\n\\t\\t<svg>\\n\\t\\t\\t<defs>\\n\\t\\t\\t\\t<mask id=\\\"hash_pattern_mask\\\">\\n\\t\\t\\t\\t\\t<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"8\\\" fill=\\\"white\\\" />\\n\\t\\t\\t\\t\\t<g\\n\\t\\t\\t\\t\\t\\tstrokeLinecap=\\\"round\\\"\\n\\t\\t\\t\\t\\t\\tstroke=\\\"black\\\"\\n\\t\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t\\t<line x1=\\\"\".concat(t * 1, \"\\\" y1=\\\"\").concat(t * 3, \"\\\" x2=\\\"\").concat(t * 3, \"\\\" y2=\\\"\").concat(t * 1, \"\\\" />\\n\\t\\t\\t\\t\\t\\t<line x1=\\\"\").concat(t * 5, \"\\\" y1=\\\"\").concat(t * 7, \"\\\" x2=\\\"\").concat(t * 7, \"\\\" y2=\\\"\").concat(t * 5, \"\\\" />\\n\\t\\t\\t\\t\\t\\t<line x1=\\\"\").concat(t * 9, \"\\\" y1=\\\"\").concat(t * 11, \"\\\" x2=\\\"\").concat(t * 11, \"\\\" y2=\\\"\").concat(t * 9, \"\\\" />\\n\\t\\t\\t\\t\\t</g>\\n\\t\\t\\t\\t</mask>\\n\\t\\t\\t\\t<pattern\\n\\t\\t\\t\\t\\tid=\\\"hash_pattern\\\"\\n\\t\\t\\t\\t\\twidth=\\\"8\\\"\\n\\t\\t\\t\\t\\theight=\\\"8\\\"\\n\\t\\t\\t\\t\\tpatternUnits=\\\"userSpaceOnUse\\\"\\n\\t\\t\\t\\t>\\n\\t\\t\\t\\t\\t<rect x=\\\"0\\\" y=\\\"0\\\" width=\\\"8\\\" height=\\\"8\\\" fill=\\\"\").concat(backgroundColor, \"\\\" mask=\\\"url(#hash_pattern_mask)\\\" />\\n\\t\\t\\t\\t</pattern>\\n\\t\\t\\t</defs>\\n\\t\\t</svg>\\n\\t\");\n  return divEl.querySelectorAll(\"defs > *\");\n}\nexport { exportPatternSvgDefs, usePattern };","map":{"version":3,"names":["Fragment","jsx","useEffect","useMemo","useState","HASH_PATERN_ZOOM_NAMES","MAX_ZOOM","debugFlags","useEditor","TILE_PATTERN_SIZE","generateImage","dpr","currentZoom","darkMode","Promise","resolve","reject","size","canvasEl","document","createElement","width","height","ctx","getContext","fillStyle","fillRect","globalCompositeOperation","lineCap","lineWidth","t2","s","v","beginPath","moveTo","lineTo","stroke","toBlob","blob","throwToBlob","value","canvasBlob","fn","canvas","toDataURL","getDefaultPatterns","defaultPatterns","i","Math","ceil","whitePixelBlob","blackPixelBlob","push","zoom","url","usePattern","editor","devicePixelRatio","_useState","_useState2","_slicedToArray","isReady","setIsReady","_useState3","_useState4","backgroundUrls","setBackgroundUrls","promises","_loop","then","URL","createObjectURL","isCancelled","all","urls","context","children","map","item","key","id","patternUnits","href","t","exportPatternSvgDefs","backgroundColor","divEl","innerHTML","concat","querySelectorAll"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/hooks/usePattern.tsx"],"sourcesContent":["import { useEffect, useMemo, useState } from 'react'\nimport { HASH_PATERN_ZOOM_NAMES, MAX_ZOOM } from '../constants'\nimport { debugFlags } from '../utils/debug-flags'\nimport { useEditor } from './useEditor'\n\nconst TILE_PATTERN_SIZE = 8\n\nconst generateImage = (dpr: number, currentZoom: number, darkMode: boolean) => {\n\treturn new Promise<Blob>((resolve, reject) => {\n\t\tconst size = TILE_PATTERN_SIZE * currentZoom * dpr\n\n\t\tconst canvasEl = document.createElement('canvas')\n\t\tcanvasEl.width = size\n\t\tcanvasEl.height = size\n\n\t\tconst ctx = canvasEl.getContext('2d')\n\t\tif (!ctx) return\n\n\t\tctx.fillStyle = darkMode ? '#212529' : '#f8f9fa'\n\t\tctx.fillRect(0, 0, size, size)\n\n\t\t// This essentially generates an inverse of the pattern we're drawing.\n\t\tctx.globalCompositeOperation = 'destination-out'\n\n\t\tctx.lineCap = 'round'\n\t\tctx.lineWidth = 1.25 * currentZoom * dpr\n\n\t\tconst t = 8 / 12\n\t\tconst s = (v: number) => v * currentZoom * dpr\n\n\t\tctx.beginPath()\n\t\tctx.moveTo(s(t * 1), s(t * 3))\n\t\tctx.lineTo(s(t * 3), s(t * 1))\n\n\t\tctx.moveTo(s(t * 5), s(t * 7))\n\t\tctx.lineTo(s(t * 7), s(t * 5))\n\n\t\tctx.moveTo(s(t * 9), s(t * 11))\n\t\tctx.lineTo(s(t * 11), s(t * 9))\n\t\tctx.stroke()\n\n\t\tcanvasEl.toBlob((blob) => {\n\t\t\tif (!blob || debugFlags.throwToBlob.value) {\n\t\t\t\treject()\n\t\t\t} else {\n\t\t\t\tresolve(blob)\n\t\t\t}\n\t\t})\n\t})\n}\n\nconst canvasBlob = (size: [number, number], fn: (ctx: CanvasRenderingContext2D) => void) => {\n\tconst canvas = document.createElement('canvas')\n\tcanvas.width = size[0]\n\tcanvas.height = size[1]\n\tconst ctx = canvas.getContext('2d')\n\tif (!ctx) return ''\n\tfn(ctx)\n\treturn canvas.toDataURL()\n}\ntype PatternDef = { zoom: number; url: string; darkMode: boolean }\n\nconst getDefaultPatterns = () => {\n\tconst defaultPatterns: PatternDef[] = []\n\tfor (let i = 1; i <= Math.ceil(MAX_ZOOM); i++) {\n\t\tconst whitePixelBlob = canvasBlob([1, 1], (ctx) => {\n\t\t\t// Hard coded '--palette-black-semi'\n\t\t\tctx.fillStyle = '#e8e8e8'\n\t\t\tctx.fillRect(0, 0, 1, 1)\n\t\t})\n\t\tconst blackPixelBlob = canvasBlob([1, 1], (ctx) => {\n\t\t\t// Hard coded '--palette-black-semi'\n\t\t\tctx.fillStyle = '#2c3036'\n\t\t\tctx.fillRect(0, 0, 1, 1)\n\t\t})\n\t\tdefaultPatterns.push({\n\t\t\tzoom: i,\n\t\t\turl: whitePixelBlob,\n\t\t\tdarkMode: false,\n\t\t})\n\t\tdefaultPatterns.push({\n\t\t\tzoom: i,\n\t\t\turl: blackPixelBlob,\n\t\t\tdarkMode: true,\n\t\t})\n\t}\n\treturn defaultPatterns\n}\n\nexport const usePattern = () => {\n\tconst editor = useEditor()\n\tconst dpr = editor.devicePixelRatio\n\tconst [isReady, setIsReady] = useState(false)\n\tconst defaultPatterns = useMemo(() => getDefaultPatterns(), [])\n\tconst [backgroundUrls, setBackgroundUrls] = useState<PatternDef[]>(defaultPatterns)\n\n\tuseEffect(() => {\n\t\tconst promises: Promise<{ zoom: number; url: string; darkMode: boolean }>[] = []\n\n\t\tfor (let i = 1; i <= Math.ceil(MAX_ZOOM); i++) {\n\t\t\tpromises.push(\n\t\t\t\tgenerateImage(dpr, i, false).then((blob) => ({\n\t\t\t\t\tzoom: i,\n\t\t\t\t\turl: URL.createObjectURL(blob),\n\t\t\t\t\tdarkMode: false,\n\t\t\t\t}))\n\t\t\t)\n\t\t\tpromises.push(\n\t\t\t\tgenerateImage(dpr, i, true).then((blob) => ({\n\t\t\t\t\tzoom: i,\n\t\t\t\t\turl: URL.createObjectURL(blob),\n\t\t\t\t\tdarkMode: true,\n\t\t\t\t}))\n\t\t\t)\n\t\t}\n\n\t\tlet isCancelled = false\n\t\tPromise.all(promises).then((urls) => {\n\t\t\tif (isCancelled) return\n\t\t\tsetBackgroundUrls(urls)\n\t\t\tsetIsReady(true)\n\t\t})\n\n\t\treturn () => {\n\t\t\tisCancelled = true\n\t\t\tsetIsReady(false)\n\t\t}\n\t}, [dpr])\n\n\tconst context = (\n\t\t<>\n\t\t\t{backgroundUrls.map((item) => {\n\t\t\t\tconst key = item.zoom + (item.darkMode ? '_dark' : '_light')\n\t\t\t\treturn (\n\t\t\t\t\t<pattern\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tid={HASH_PATERN_ZOOM_NAMES[key]}\n\t\t\t\t\t\twidth={TILE_PATTERN_SIZE}\n\t\t\t\t\t\theight={TILE_PATTERN_SIZE}\n\t\t\t\t\t\tpatternUnits=\"userSpaceOnUse\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<image href={item.url} width={TILE_PATTERN_SIZE} height={TILE_PATTERN_SIZE} />\n\t\t\t\t\t</pattern>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n\n\treturn { context, isReady }\n}\n\nconst t = 8 / 12\nexport function exportPatternSvgDefs(backgroundColor: string) {\n\tconst divEl = document.createElement('div')\n\tdivEl.innerHTML = `\n\t\t<svg>\n\t\t\t<defs>\n\t\t\t\t<mask id=\"hash_pattern_mask\">\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fill=\"white\" />\n\t\t\t\t\t<g\n\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<line x1=\"${t * 1}\" y1=\"${t * 3}\" x2=\"${t * 3}\" y2=\"${t * 1}\" />\n\t\t\t\t\t\t<line x1=\"${t * 5}\" y1=\"${t * 7}\" x2=\"${t * 7}\" y2=\"${t * 5}\" />\n\t\t\t\t\t\t<line x1=\"${t * 9}\" y1=\"${t * 11}\" x2=\"${t * 11}\" y2=\"${t * 9}\" />\n\t\t\t\t\t</g>\n\t\t\t\t</mask>\n\t\t\t\t<pattern\n\t\t\t\t\tid=\"hash_pattern\"\n\t\t\t\t\twidth=\"8\"\n\t\t\t\t\theight=\"8\"\n\t\t\t\t\tpatternUnits=\"userSpaceOnUse\"\n\t\t\t\t>\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fill=\"${backgroundColor}\" mask=\"url(#hash_pattern_mask)\" />\n\t\t\t\t</pattern>\n\t\t\t</defs>\n\t\t</svg>\n\t`\n\treturn divEl.querySelectorAll('defs > *')!\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}