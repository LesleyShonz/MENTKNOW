{"ast":null,"code":"import _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { StateNode } from \"../../StateNode.mjs\";\nimport { CursorTypeMap } from \"./PointingResizeHandle.mjs\";\nvar PointingRotateHandle = /*#__PURE__*/function (_StateNode) {\n  _inherits(PointingRotateHandle, _StateNode);\n  var _super = _createSuper(PointingRotateHandle);\n  function PointingRotateHandle() {\n    var _this;\n    _classCallCheck(this, PointingRotateHandle);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"info\", {});\n    _defineProperty(_assertThisInitialized(_this), \"onEnter\", function (info) {\n      _this.info = info;\n      _this.updateCursor();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function () {\n      var isDragging = _this.editor.inputs.isDragging;\n      if (isDragging) {\n        _this.parent.transition(\"rotating\", _this.info);\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerUp\", function () {\n      _this.complete();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onCancel\", function () {\n      _this.cancel();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onComplete\", function () {\n      _this.cancel();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onInterrupt\", function () {\n      _this.cancel();\n    });\n    return _this;\n  }\n  _createClass(PointingRotateHandle, [{\n    key: \"updateCursor\",\n    value: function updateCursor() {\n      var selectionRotation = this.editor.selectionRotation;\n      this.editor.setCursor({\n        type: CursorTypeMap[this.info.handle],\n        rotation: selectionRotation\n      });\n    }\n  }, {\n    key: \"complete\",\n    value: function complete() {\n      if (this.info.onInteractionEnd) {\n        this.editor.setSelectedTool(this.info.onInteractionEnd, {});\n      } else {\n        this.parent.transition(\"idle\", {});\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this.info.onInteractionEnd) {\n        this.editor.setSelectedTool(this.info.onInteractionEnd, {});\n      } else {\n        this.parent.transition(\"idle\", {});\n      }\n    }\n  }]);\n  return PointingRotateHandle;\n}(StateNode);\n_defineProperty(PointingRotateHandle, \"id\", \"pointing_rotate_handle\");\nexport { PointingRotateHandle };","map":{"version":3,"names":["StateNode","CursorTypeMap","PointingRotateHandle","_StateNode","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","info","updateCursor","isDragging","editor","inputs","parent","transition","complete","cancel","_createClass","key","value","selectionRotation","setCursor","type","handle","rotation","onInteractionEnd","setSelectedTool"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/tools/SelectTool/children/PointingRotateHandle.ts"],"sourcesContent":["import { RotateCorner } from '@tldraw/primitives'\nimport { TLEventHandlers, TLPointerEventInfo } from '../../../types/event-types'\nimport { StateNode } from '../../StateNode'\nimport { CursorTypeMap } from './PointingResizeHandle'\n\ntype PointingRotateHandleInfo = Extract<TLPointerEventInfo, { target: 'selection' }> & {\n\tonInteractionEnd?: string\n}\n\nexport class PointingRotateHandle extends StateNode {\n\tstatic override id = 'pointing_rotate_handle'\n\n\tprivate info = {} as PointingRotateHandleInfo\n\n\tprivate updateCursor() {\n\t\tconst { selectionRotation } = this.editor\n\t\tthis.editor.setCursor({\n\t\t\ttype: CursorTypeMap[this.info.handle as RotateCorner],\n\t\t\trotation: selectionRotation,\n\t\t})\n\t}\n\n\toverride onEnter = (info: PointingRotateHandleInfo) => {\n\t\tthis.info = info\n\t\tthis.updateCursor()\n\t}\n\n\toverride onPointerMove = () => {\n\t\tconst { isDragging } = this.editor.inputs\n\n\t\tif (isDragging) {\n\t\t\tthis.parent.transition('rotating', this.info)\n\t\t}\n\t}\n\n\toverride onPointerUp = () => {\n\t\tthis.complete()\n\t}\n\n\toverride onCancel: TLEventHandlers['onCancel'] = () => {\n\t\tthis.cancel()\n\t}\n\n\toverride onComplete: TLEventHandlers['onComplete'] = () => {\n\t\tthis.cancel()\n\t}\n\n\toverride onInterrupt = () => {\n\t\tthis.cancel()\n\t}\n\n\tprivate complete() {\n\t\tif (this.info.onInteractionEnd) {\n\t\t\tthis.editor.setSelectedTool(this.info.onInteractionEnd, {})\n\t\t} else {\n\t\t\tthis.parent.transition('idle', {})\n\t\t}\n\t}\n\n\tprivate cancel() {\n\t\tif (this.info.onInteractionEnd) {\n\t\t\tthis.editor.setSelectedTool(this.info.onInteractionEnd, {})\n\t\t} else {\n\t\t\tthis.parent.transition('idle', {})\n\t\t}\n\t}\n}\n"],"mappings":";;;;;;AAEA,SAASA,SAAA,QAAiB;AAC1B,SAASC,aAAA,QAAqB;AAAA,IAMjBC,oBAAA,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,oBAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,oBAAA;EAAA,SAAAA,qBAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,oBAAA;IAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,SAAAY,MAAA,CAAAL,IAAA;IAAAM,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,WAGG,CAAC;IAAAW,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,cAUG,UAACa,IAAA,EAAmC;MACtDb,KAAA,CAAKa,IAAA,GAAOA,IAAA;MACZb,KAAA,CAAKc,YAAA,CAAa;IACnB;IAAAH,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,oBAEyB,YAAM;MAC9B,IAAQe,UAAA,GAAef,KAAA,CAAKgB,MAAA,CAAOC,MAAA,CAA3BF,UAAA;MAER,IAAIA,UAAA,EAAY;QACff,KAAA,CAAKkB,MAAA,CAAOC,UAAA,CAAW,YAAYnB,KAAA,CAAKa,IAAI;MAC7C;IACD;IAAAF,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,kBAEuB,YAAM;MAC5BA,KAAA,CAAKoB,QAAA,CAAS;IACf;IAAAT,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,eAEiD,YAAM;MACtDA,KAAA,CAAKqB,MAAA,CAAO;IACb;IAAAV,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,iBAEqD,YAAM;MAC1DA,KAAA,CAAKqB,MAAA,CAAO;IACb;IAAAV,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,kBAEuB,YAAM;MAC5BA,KAAA,CAAKqB,MAAA,CAAO;IACb;IAAA,OAAArB,KAAA;EAAA;EAAAsB,YAAA,CAAA3B,oBAAA;IAAA4B,GAAA;IAAAC,KAAA,EAnCQ,SAAAV,aAAA,EAAe;MACtB,IAAQW,iBAAA,GAAsB,KAAKT,MAAA,CAA3BS,iBAAA;MACR,KAAKT,MAAA,CAAOU,SAAA,CAAU;QACrBC,IAAA,EAAMjC,aAAA,CAAc,KAAKmB,IAAA,CAAKe,MAAsB;QACpDC,QAAA,EAAUJ;MACX,CAAC;IACF;EAAA;IAAAF,GAAA;IAAAC,KAAA,EA+BQ,SAAAJ,SAAA,EAAW;MAClB,IAAI,KAAKP,IAAA,CAAKiB,gBAAA,EAAkB;QAC/B,KAAKd,MAAA,CAAOe,eAAA,CAAgB,KAAKlB,IAAA,CAAKiB,gBAAA,EAAkB,CAAC,CAAC;MAC3D,OAAO;QACN,KAAKZ,MAAA,CAAOC,UAAA,CAAW,QAAQ,CAAC,CAAC;MAClC;IACD;EAAA;IAAAI,GAAA;IAAAC,KAAA,EAEQ,SAAAH,OAAA,EAAS;MAChB,IAAI,KAAKR,IAAA,CAAKiB,gBAAA,EAAkB;QAC/B,KAAKd,MAAA,CAAOe,eAAA,CAAgB,KAAKlB,IAAA,CAAKiB,gBAAA,EAAkB,CAAC,CAAC;MAC3D,OAAO;QACN,KAAKZ,MAAA,CAAOC,UAAA,CAAW,QAAQ,CAAC,CAAC;MAClC;IACD;EAAA;EAAA,OAAAxB,oBAAA;AAAA,EAxDyCF,SAAA;AAAAkB,eAAA,CAA7BhB,oBAAA,QACS"},"metadata":{},"sourceType":"module","externalDependencies":[]}