{"ast":null,"code":"import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { GeoShapeGeoStyle, preventDefault, useEditor } from \"@tldraw/editor\";\nimport classNames from \"classnames\";\nimport React from \"react\";\nimport { track, useValue } from \"signia-react\";\nimport { useBreakpoint } from \"../../hooks/useBreakpoint.mjs\";\nimport { useReadonly } from \"../../hooks/useReadonly.mjs\";\nimport { useToolbarSchema } from \"../../hooks/useToolbarSchema.mjs\";\nimport { useTranslation } from \"../../hooks/useTranslation/useTranslation.mjs\";\nimport { ActionsMenu } from \"../ActionsMenu.mjs\";\nimport { DuplicateButton } from \"../DuplicateButton.mjs\";\nimport { MobileStylePanel } from \"../MobileStylePanel.mjs\";\nimport { RedoButton } from \"../RedoButton.mjs\";\nimport { TrashButton } from \"../TrashButton.mjs\";\nimport { UndoButton } from \"../UndoButton.mjs\";\nimport { Button } from \"../primitives/Button.mjs\";\nimport * as M from \"../primitives/DropdownMenu.mjs\";\nimport { kbdStr } from \"../primitives/shared.mjs\";\nimport { ToggleToolLockedButton } from \"./ToggleToolLockedButton.mjs\";\nvar Toolbar = function Toolbar2() {\n  var editor = useEditor();\n  var msg = useTranslation();\n  var breakpoint = useBreakpoint();\n  var rMostRecentlyActiveDropdownItem = React.useRef(void 0);\n  var isReadOnly = useReadonly();\n  var toolbarItems = useToolbarSchema();\n  var laserTool = toolbarItems.find(function (item) {\n    return item.toolItem.id === \"laser\";\n  });\n  var activeToolId = useValue(\"current tool id\", function () {\n    return editor.currentToolId;\n  }, [editor]);\n  var isHandTool = activeToolId === \"hand\";\n  var geoState = useValue(\"geo\", function () {\n    return editor.sharedStyles.getAsKnownValue(GeoShapeGeoStyle);\n  }, [editor]);\n  var showEditingTools = !isReadOnly;\n  var showExtraActions = !(isReadOnly || isHandTool);\n  var getTitle = function getTitle(item) {\n    return item.label ? \"\".concat(msg(item.label), \" \").concat(item.kbd ? kbdStr(item.kbd) : \"\") : \"\";\n  };\n  var activeTLUiToolbarItem = toolbarItems.find(function (item) {\n    return isActiveTLUiToolItem(item.toolItem, activeToolId, geoState);\n  });\n  var _React$useMemo = React.useMemo(function () {\n      var itemsInPanel2 = [];\n      var itemsInDropdown2 = [];\n      var dropdownFirstItem2;\n      var overflowIndex = Math.min(8, 5 + breakpoint);\n      for (var i = 4; i < toolbarItems.length; i++) {\n        var item = toolbarItems[i];\n        if (i < overflowIndex) {\n          itemsInPanel2.push(item);\n        } else {\n          if (item === activeTLUiToolbarItem) {\n            dropdownFirstItem2 = item;\n          }\n          itemsInDropdown2.push(item);\n        }\n      }\n      if (dropdownFirstItem2) {} else {\n        if (!rMostRecentlyActiveDropdownItem.current) {\n          rMostRecentlyActiveDropdownItem.current = itemsInDropdown2[0];\n        }\n        dropdownFirstItem2 = rMostRecentlyActiveDropdownItem.current;\n        if (!itemsInDropdown2.includes(dropdownFirstItem2)) {\n          dropdownFirstItem2 = itemsInDropdown2[0];\n        }\n      }\n      rMostRecentlyActiveDropdownItem.current = dropdownFirstItem2;\n      if (itemsInDropdown2.length <= 2) {\n        itemsInPanel2.push.apply(itemsInPanel2, itemsInDropdown2);\n        itemsInDropdown2.length = 0;\n      }\n      return {\n        itemsInPanel: itemsInPanel2,\n        itemsInDropdown: itemsInDropdown2,\n        dropdownFirstItem: dropdownFirstItem2\n      };\n    }, [toolbarItems, activeTLUiToolbarItem, breakpoint]),\n    itemsInPanel = _React$useMemo.itemsInPanel,\n    itemsInDropdown = _React$useMemo.itemsInDropdown,\n    dropdownFirstItem = _React$useMemo.dropdownFirstItem;\n  return /* @__PURE__ */jsx(\"div\", {\n    className: \"tlui-toolbar\",\n    children: /* @__PURE__ */jsxs(\"div\", {\n      className: \"tlui-toolbar__inner\",\n      children: [/* @__PURE__ */jsxs(\"div\", {\n        className: \"tlui-toolbar__left\",\n        children: [!isReadOnly && /* @__PURE__ */jsxs(\"div\", {\n          className: classNames(\"tlui-toolbar__extras\", {\n            \"tlui-toolbar__extras__hidden\": !showExtraActions\n          }),\n          children: [breakpoint < 6 && /* @__PURE__ */jsxs(\"div\", {\n            className: \"tlui-toolbar__extras__controls\",\n            children: [/* @__PURE__ */jsx(UndoButton, {}), /* @__PURE__ */jsx(RedoButton, {}), /* @__PURE__ */jsx(TrashButton, {}), /* @__PURE__ */jsx(DuplicateButton, {}), /* @__PURE__ */jsx(ActionsMenu, {})]\n          }), /* @__PURE__ */jsx(ToggleToolLockedButton, {\n            activeToolId: activeToolId\n          })]\n        }), /* @__PURE__ */jsxs(\"div\", {\n          className: classNames(\"tlui-toolbar__tools\", {\n            \"tlui-toolbar__tools__mobile\": breakpoint < 5\n          }),\n          children: [toolbarItems.slice(0, 2).map(function (_ref) {\n            var toolItem = _ref.toolItem;\n            return /* @__PURE__ */jsx(ToolbarButton, {\n              item: toolItem,\n              title: getTitle(toolItem),\n              isSelected: isActiveTLUiToolItem(toolItem, activeToolId, geoState)\n            }, toolItem.id);\n          }), isReadOnly && laserTool && /* @__PURE__ */jsx(ToolbarButton, {\n            item: laserTool.toolItem,\n            title: getTitle(laserTool.toolItem),\n            isSelected: isActiveTLUiToolItem(laserTool.toolItem, activeToolId, geoState)\n          }, laserTool.toolItem.id), showEditingTools && /* @__PURE__ */jsxs(Fragment, {\n            children: [/* @__PURE__ */jsx(\"div\", {\n              className: \"tlui-toolbar__divider\"\n            }), toolbarItems.slice(2, 4).map(function (_ref2) {\n              var toolItem = _ref2.toolItem;\n              return /* @__PURE__ */jsx(ToolbarButton, {\n                item: toolItem,\n                title: getTitle(toolItem),\n                isSelected: isActiveTLUiToolItem(toolItem, activeToolId, geoState)\n              }, toolItem.id);\n            }), /* @__PURE__ */jsx(\"div\", {\n              className: \"tlui-toolbar__divider\"\n            }), itemsInPanel.map(function (_ref3) {\n              var toolItem = _ref3.toolItem;\n              return /* @__PURE__ */jsx(ToolbarButton, {\n                item: toolItem,\n                title: getTitle(toolItem),\n                isSelected: isActiveTLUiToolItem(toolItem, activeToolId, geoState)\n              }, toolItem.id);\n            }), itemsInDropdown.length ? /* @__PURE__ */jsxs(Fragment, {\n              children: [/* @__PURE__ */jsx(ToolbarButton, {\n                item: dropdownFirstItem.toolItem,\n                title: getTitle(dropdownFirstItem.toolItem),\n                isSelected: isActiveTLUiToolItem(dropdownFirstItem.toolItem, activeToolId, geoState)\n              }, dropdownFirstItem.toolItem.id), /* @__PURE__ */jsxs(M.Root, {\n                id: \"toolbar overflow\",\n                modal: false,\n                children: [/* @__PURE__ */jsx(M.Trigger, {\n                  children: /* @__PURE__ */jsx(Button, {\n                    className: \"tlui-toolbar__tools__button tlui-toolbar__overflow\",\n                    icon: \"chevron-up\",\n                    \"data-testid\": \"tools.more\",\n                    title: msg(\"tool-panel.more\")\n                  })\n                }), /* @__PURE__ */jsx(M.Content, {\n                  side: \"top\",\n                  align: \"center\",\n                  children: /* @__PURE__ */jsx(OverflowToolsContent, {\n                    toolbarItems: itemsInDropdown\n                  })\n                })]\n              })]\n            }) : null]\n          })]\n        })]\n      }), breakpoint < 5 && !isReadOnly && /* @__PURE__ */jsx(\"div\", {\n        className: \"tlui-toolbar__tools\",\n        children: /* @__PURE__ */jsx(MobileStylePanel, {})\n      })]\n    })\n  });\n};\nvar OverflowToolsContent = track(function OverflowToolsContent2(_ref4) {\n  var toolbarItems = _ref4.toolbarItems;\n  var msg = useTranslation();\n  return /* @__PURE__ */jsx(\"div\", {\n    className: \"tlui-button-grid__four tlui-button-grid__reverse\",\n    children: toolbarItems.map(function (_ref5) {\n      var _meta$geo;\n      var _ref5$toolItem = _ref5.toolItem,\n        id = _ref5$toolItem.id,\n        meta = _ref5$toolItem.meta,\n        kbd = _ref5$toolItem.kbd,\n        label = _ref5$toolItem.label,\n        onSelect = _ref5$toolItem.onSelect,\n        icon = _ref5$toolItem.icon;\n      return /* @__PURE__ */jsx(M.Item, {\n        className: \"tlui-button-grid__button\",\n        \"data-testid\": \"tools.\".concat(id),\n        \"data-tool\": id,\n        \"data-geo\": (_meta$geo = meta === null || meta === void 0 ? void 0 : meta.geo) !== null && _meta$geo !== void 0 ? _meta$geo : \"\",\n        \"aria-label\": label,\n        onClick: function onClick() {\n          return onSelect(\"toolbar\");\n        },\n        title: label ? \"\".concat(msg(label), \" \").concat(kbd ? kbdStr(kbd) : \"\") : \"\",\n        icon: icon\n      }, id);\n    })\n  });\n});\nfunction ToolbarButton(_ref6) {\n  var _item$meta$geo, _item$meta;\n  var item = _ref6.item,\n    title = _ref6.title,\n    isSelected = _ref6.isSelected;\n  return /* @__PURE__ */jsx(Button, {\n    className: \"tlui-toolbar__tools__button\",\n    \"data-testid\": \"tools.\".concat(item.id),\n    \"data-tool\": item.id,\n    \"data-geo\": (_item$meta$geo = (_item$meta = item.meta) === null || _item$meta === void 0 ? void 0 : _item$meta.geo) !== null && _item$meta$geo !== void 0 ? _item$meta$geo : \"\",\n    \"aria-label\": item.label,\n    title: title,\n    icon: item.icon,\n    \"data-state\": isSelected ? \"selected\" : void 0,\n    onClick: function onClick() {\n      return item.onSelect(\"toolbar\");\n    },\n    onTouchStart: function onTouchStart(e) {\n      preventDefault(e);\n      item.onSelect(\"toolbar\");\n    }\n  });\n}\nvar isActiveTLUiToolItem = function isActiveTLUiToolItem(item, activeToolId, geoState) {\n  var _item$meta2, _item$meta3;\n  return (_item$meta2 = item.meta) !== null && _item$meta2 !== void 0 && _item$meta2.geo ? activeToolId === \"geo\" && geoState === ((_item$meta3 = item.meta) === null || _item$meta3 === void 0 ? void 0 : _item$meta3.geo) : activeToolId === item.id;\n};\nexport { Toolbar };","map":{"version":3,"names":["Fragment","jsx","jsxs","GeoShapeGeoStyle","preventDefault","useEditor","classNames","React","track","useValue","useBreakpoint","useReadonly","useToolbarSchema","useTranslation","ActionsMenu","DuplicateButton","MobileStylePanel","RedoButton","TrashButton","UndoButton","Button","M","kbdStr","ToggleToolLockedButton","Toolbar","Toolbar2","editor","msg","breakpoint","rMostRecentlyActiveDropdownItem","useRef","isReadOnly","toolbarItems","laserTool","find","item","toolItem","id","activeToolId","currentToolId","isHandTool","geoState","sharedStyles","getAsKnownValue","showEditingTools","showExtraActions","getTitle","label","concat","kbd","activeTLUiToolbarItem","isActiveTLUiToolItem","_React$useMemo","useMemo","itemsInPanel2","itemsInDropdown2","dropdownFirstItem2","overflowIndex","Math","min","i","length","push","current","includes","apply","itemsInPanel","itemsInDropdown","dropdownFirstItem","className","children","slice","map","_ref","ToolbarButton","title","isSelected","_ref2","_ref3","Root","modal","Trigger","icon","Content","side","align","OverflowToolsContent","OverflowToolsContent2","_ref4","_ref5","_meta$geo","_ref5$toolItem","meta","onSelect","Item","geo","onClick","_ref6","_item$meta$geo","_item$meta","onTouchStart","e","_item$meta2","_item$meta3"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/Toolbar/Toolbar.tsx"],"sourcesContent":["import { GeoShapeGeoStyle, preventDefault, useEditor } from '@tldraw/editor'\nimport classNames from 'classnames'\nimport React from 'react'\nimport { track, useValue } from 'signia-react'\nimport { useBreakpoint } from '../../hooks/useBreakpoint'\nimport { useReadonly } from '../../hooks/useReadonly'\nimport { TLUiToolbarItem, useToolbarSchema } from '../../hooks/useToolbarSchema'\nimport { TLUiToolItem } from '../../hooks/useTools'\nimport { useTranslation } from '../../hooks/useTranslation/useTranslation'\nimport { ActionsMenu } from '../ActionsMenu'\nimport { DuplicateButton } from '../DuplicateButton'\nimport { MobileStylePanel } from '../MobileStylePanel'\nimport { RedoButton } from '../RedoButton'\nimport { TrashButton } from '../TrashButton'\nimport { UndoButton } from '../UndoButton'\nimport { Button } from '../primitives/Button'\nimport * as M from '../primitives/DropdownMenu'\nimport { kbdStr } from '../primitives/shared'\nimport { ToggleToolLockedButton } from './ToggleToolLockedButton'\n\n/** @public */\nexport const Toolbar = function Toolbar() {\n\tconst editor = useEditor()\n\tconst msg = useTranslation()\n\tconst breakpoint = useBreakpoint()\n\n\tconst rMostRecentlyActiveDropdownItem = React.useRef<TLUiToolbarItem | undefined>(undefined)\n\n\tconst isReadOnly = useReadonly()\n\tconst toolbarItems = useToolbarSchema()\n\tconst laserTool = toolbarItems.find((item) => item.toolItem.id === 'laser')\n\n\tconst activeToolId = useValue('current tool id', () => editor.currentToolId, [editor])\n\n\tconst isHandTool = activeToolId === 'hand'\n\tconst geoState = useValue('geo', () => editor.sharedStyles.getAsKnownValue(GeoShapeGeoStyle), [\n\t\teditor,\n\t])\n\n\tconst showEditingTools = !isReadOnly\n\tconst showExtraActions = !(isReadOnly || isHandTool)\n\n\tconst getTitle = (item: TLUiToolItem) =>\n\t\titem.label ? `${msg(item.label)} ${item.kbd ? kbdStr(item.kbd) : ''}` : ''\n\n\tconst activeTLUiToolbarItem = toolbarItems.find((item) => {\n\t\treturn isActiveTLUiToolItem(item.toolItem, activeToolId, geoState)\n\t})\n\n\tconst { itemsInPanel, itemsInDropdown, dropdownFirstItem } = React.useMemo(() => {\n\t\tconst itemsInPanel: TLUiToolbarItem[] = []\n\t\tconst itemsInDropdown: TLUiToolbarItem[] = []\n\t\tlet dropdownFirstItem: TLUiToolbarItem | undefined\n\n\t\tconst overflowIndex = Math.min(8, 5 + breakpoint)\n\n\t\tfor (let i = 4; i < toolbarItems.length; i++) {\n\t\t\tconst item = toolbarItems[i]\n\t\t\tif (i < overflowIndex) {\n\t\t\t\t// Items below the overflow index will always be in the panel\n\t\t\t\titemsInPanel.push(item)\n\t\t\t} else {\n\t\t\t\t// Items above will be in the dropdown menu unless the item\n\t\t\t\t// is active (or was the most recently selected active item)\n\t\t\t\tif (item === activeTLUiToolbarItem) {\n\t\t\t\t\t// If the dropdown item is active, make it the dropdownFirstItem\n\t\t\t\t\tdropdownFirstItem = item\n\t\t\t\t}\n\t\t\t\t// Otherwise, add it to the items in dropdown menu\n\t\t\t\titemsInDropdown.push(item)\n\t\t\t}\n\t\t}\n\n\t\tif (dropdownFirstItem) {\n\t\t\t// noop\n\t\t} else {\n\t\t\t// If we don't have a currently active dropdown item, use the most\n\t\t\t// recently active dropdown item as the current dropdown first item.\n\n\t\t\t// If haven't ever had a most recently active dropdown item, then\n\t\t\t// make the first item in the dropdown menu the most recently\n\t\t\t// active dropdown item.\n\t\t\tif (!rMostRecentlyActiveDropdownItem.current) {\n\t\t\t\trMostRecentlyActiveDropdownItem.current = itemsInDropdown[0]\n\t\t\t}\n\n\t\t\tdropdownFirstItem = rMostRecentlyActiveDropdownItem.current\n\n\t\t\t// If the most recently active dropdown item is no longer in the\n\t\t\t// dropdown (because the breakpoint has changed) then make the\n\t\t\t// first item in the dropdown menu the most recently active\n\t\t\t// dropdown item.\n\t\t\tif (!itemsInDropdown.includes(dropdownFirstItem)) {\n\t\t\t\tdropdownFirstItem = itemsInDropdown[0]\n\t\t\t}\n\t\t}\n\n\t\t// We want this ref set to remember which item from the current\n\t\t// set of dropdown items was most recently active\n\t\trMostRecentlyActiveDropdownItem.current = dropdownFirstItem\n\n\t\tif (itemsInDropdown.length <= 2) {\n\t\t\titemsInPanel.push(...itemsInDropdown)\n\t\t\titemsInDropdown.length = 0\n\t\t}\n\n\t\treturn { itemsInPanel, itemsInDropdown, dropdownFirstItem }\n\t}, [toolbarItems, activeTLUiToolbarItem, breakpoint])\n\n\treturn (\n\t\t<div className=\"tlui-toolbar\">\n\t\t\t<div className=\"tlui-toolbar__inner\">\n\t\t\t\t<div className=\"tlui-toolbar__left\">\n\t\t\t\t\t{!isReadOnly && (\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName={classNames('tlui-toolbar__extras', {\n\t\t\t\t\t\t\t\t'tlui-toolbar__extras__hidden': !showExtraActions,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{breakpoint < 6 && (\n\t\t\t\t\t\t\t\t<div className=\"tlui-toolbar__extras__controls\">\n\t\t\t\t\t\t\t\t\t<UndoButton />\n\t\t\t\t\t\t\t\t\t<RedoButton />\n\t\t\t\t\t\t\t\t\t<TrashButton />\n\t\t\t\t\t\t\t\t\t<DuplicateButton />\n\t\t\t\t\t\t\t\t\t<ActionsMenu />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<ToggleToolLockedButton activeToolId={activeToolId} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={classNames('tlui-toolbar__tools', {\n\t\t\t\t\t\t\t'tlui-toolbar__tools__mobile': breakpoint < 5,\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* Select / Hand */}\n\t\t\t\t\t\t{toolbarItems.slice(0, 2).map(({ toolItem }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\t\tkey={toolItem.id}\n\t\t\t\t\t\t\t\t\titem={toolItem}\n\t\t\t\t\t\t\t\t\ttitle={getTitle(toolItem)}\n\t\t\t\t\t\t\t\t\tisSelected={isActiveTLUiToolItem(toolItem, activeToolId, geoState)}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t{isReadOnly && laserTool && (\n\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\tkey={laserTool.toolItem.id}\n\t\t\t\t\t\t\t\titem={laserTool.toolItem}\n\t\t\t\t\t\t\t\ttitle={getTitle(laserTool.toolItem)}\n\t\t\t\t\t\t\t\tisSelected={isActiveTLUiToolItem(laserTool.toolItem, activeToolId, geoState)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{showEditingTools && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{/* Draw / Eraser */}\n\t\t\t\t\t\t\t\t<div className=\"tlui-toolbar__divider\" />\n\t\t\t\t\t\t\t\t{toolbarItems.slice(2, 4).map(({ toolItem }) => (\n\t\t\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\t\t\tkey={toolItem.id}\n\t\t\t\t\t\t\t\t\t\titem={toolItem}\n\t\t\t\t\t\t\t\t\t\ttitle={getTitle(toolItem)}\n\t\t\t\t\t\t\t\t\t\tisSelected={isActiveTLUiToolItem(toolItem, activeToolId, geoState)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{/* Everything Else */}\n\t\t\t\t\t\t\t\t<div className=\"tlui-toolbar__divider\" />\n\t\t\t\t\t\t\t\t{itemsInPanel.map(({ toolItem }) => (\n\t\t\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\t\t\tkey={toolItem.id}\n\t\t\t\t\t\t\t\t\t\titem={toolItem}\n\t\t\t\t\t\t\t\t\t\ttitle={getTitle(toolItem)}\n\t\t\t\t\t\t\t\t\t\tisSelected={isActiveTLUiToolItem(toolItem, activeToolId, geoState)}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t{/* Overflowing Shapes */}\n\t\t\t\t\t\t\t\t{itemsInDropdown.length ? (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t{/* Last selected (or first) item from the overflow */}\n\t\t\t\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\t\t\t\tkey={dropdownFirstItem.toolItem.id}\n\t\t\t\t\t\t\t\t\t\t\titem={dropdownFirstItem.toolItem}\n\t\t\t\t\t\t\t\t\t\t\ttitle={getTitle(dropdownFirstItem.toolItem)}\n\t\t\t\t\t\t\t\t\t\t\tisSelected={isActiveTLUiToolItem(\n\t\t\t\t\t\t\t\t\t\t\t\tdropdownFirstItem.toolItem,\n\t\t\t\t\t\t\t\t\t\t\t\tactiveToolId,\n\t\t\t\t\t\t\t\t\t\t\t\tgeoState\n\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{/* The dropdown to select everything else */}\n\t\t\t\t\t\t\t\t\t\t<M.Root id=\"toolbar overflow\" modal={false}>\n\t\t\t\t\t\t\t\t\t\t\t<M.Trigger>\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"tlui-toolbar__tools__button tlui-toolbar__overflow\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ticon=\"chevron-up\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tdata-testid=\"tools.more\"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={msg('tool-panel.more')}\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</M.Trigger>\n\t\t\t\t\t\t\t\t\t\t\t<M.Content side=\"top\" align=\"center\">\n\t\t\t\t\t\t\t\t\t\t\t\t<OverflowToolsContent toolbarItems={itemsInDropdown} />\n\t\t\t\t\t\t\t\t\t\t\t</M.Content>\n\t\t\t\t\t\t\t\t\t\t</M.Root>\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t) : null}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{breakpoint < 5 && !isReadOnly && (\n\t\t\t\t\t<div className=\"tlui-toolbar__tools\">\n\t\t\t\t\t\t<MobileStylePanel />\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst OverflowToolsContent = track(function OverflowToolsContent({\n\ttoolbarItems,\n}: {\n\ttoolbarItems: TLUiToolbarItem[]\n}) {\n\tconst msg = useTranslation()\n\n\treturn (\n\t\t<div className=\"tlui-button-grid__four tlui-button-grid__reverse\">\n\t\t\t{toolbarItems.map(({ toolItem: { id, meta, kbd, label, onSelect, icon } }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<M.Item\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tclassName=\"tlui-button-grid__button\"\n\t\t\t\t\t\tdata-testid={`tools.${id}`}\n\t\t\t\t\t\tdata-tool={id}\n\t\t\t\t\t\tdata-geo={meta?.geo ?? ''}\n\t\t\t\t\t\taria-label={label}\n\t\t\t\t\t\tonClick={() => onSelect('toolbar')}\n\t\t\t\t\t\ttitle={label ? `${msg(label)} ${kbd ? kbdStr(kbd) : ''}` : ''}\n\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t})}\n\t\t</div>\n\t)\n})\n\nfunction ToolbarButton({\n\titem,\n\ttitle,\n\tisSelected,\n}: {\n\titem: TLUiToolItem\n\ttitle: string\n\tisSelected: boolean\n}) {\n\treturn (\n\t\t<Button\n\t\t\tclassName=\"tlui-toolbar__tools__button\"\n\t\t\tdata-testid={`tools.${item.id}`}\n\t\t\tdata-tool={item.id}\n\t\t\tdata-geo={item.meta?.geo ?? ''}\n\t\t\taria-label={item.label}\n\t\t\ttitle={title}\n\t\t\ticon={item.icon}\n\t\t\tdata-state={isSelected ? 'selected' : undefined}\n\t\t\tonClick={() => item.onSelect('toolbar')}\n\t\t\tonTouchStart={(e) => {\n\t\t\t\tpreventDefault(e)\n\t\t\t\titem.onSelect('toolbar')\n\t\t\t}}\n\t\t/>\n\t)\n}\n\nconst isActiveTLUiToolItem = (\n\titem: TLUiToolItem,\n\tactiveToolId: string | undefined,\n\tgeoState: string | null | undefined\n) => {\n\treturn item.meta?.geo\n\t\t? activeToolId === 'geo' && geoState === item.meta?.geo\n\t\t: activeToolId === item.id\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}