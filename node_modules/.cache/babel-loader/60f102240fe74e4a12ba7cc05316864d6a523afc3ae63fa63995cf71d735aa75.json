{"ast":null,"code":"import { Vec2d } from \"@tldraw/primitives\";\nfunction resizeScaled(shape, _ref) {\n  var initialBounds = _ref.initialBounds,\n    scaleX = _ref.scaleX,\n    scaleY = _ref.scaleY,\n    newPoint = _ref.newPoint;\n  var scaleDelta = Math.max(0.01, Math.min(Math.abs(scaleX), Math.abs(scaleY)));\n  var offset = new Vec2d(0, 0);\n  if (scaleX < 0) {\n    offset.x = -(initialBounds.width * scaleDelta);\n  }\n  if (scaleY < 0) {\n    offset.y = -(initialBounds.height * scaleDelta);\n  }\n  var _Vec2d$Add = Vec2d.Add(newPoint, offset.rot(shape.rotation)),\n    x = _Vec2d$Add.x,\n    y = _Vec2d$Add.y;\n  return {\n    x: x,\n    y: y,\n    props: {\n      scale: scaleDelta * shape.props.scale\n    }\n  };\n}\nexport { resizeScaled };","map":{"version":3,"names":["Vec2d","resizeScaled","shape","_ref","initialBounds","scaleX","scaleY","newPoint","scaleDelta","Math","max","min","abs","offset","x","width","y","height","_Vec2d$Add","Add","rot","rotation","props","scale"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/shared/resizeScaled.ts"],"sourcesContent":["import { Box2d, Vec2d } from '@tldraw/primitives'\nimport { TLShape, Vec2dModel } from '@tldraw/tlschema'\n\nexport function resizeScaled(\n\tshape: Extract<TLShape, { props: { scale: number } }>,\n\t{\n\t\tinitialBounds,\n\t\tscaleX,\n\t\tscaleY,\n\t\tnewPoint,\n\t}: {\n\t\tnewPoint: Vec2dModel\n\t\tinitialBounds: Box2d\n\t\tscaleX: number\n\t\tscaleY: number\n\t}\n) {\n\t// Compute the new scale (to apply to the scale prop)\n\tconst scaleDelta = Math.max(0.01, Math.min(Math.abs(scaleX), Math.abs(scaleY)))\n\n\t// Compute the offset (if flipped X or flipped Y)\n\tconst offset = new Vec2d(0, 0)\n\n\tif (scaleX < 0) {\n\t\toffset.x = -(initialBounds.width * scaleDelta)\n\t}\n\tif (scaleY < 0) {\n\t\toffset.y = -(initialBounds.height * scaleDelta)\n\t}\n\n\t// Apply the offset to the new point\n\tconst { x, y } = Vec2d.Add(newPoint, offset.rot(shape.rotation))\n\n\treturn {\n\t\tx,\n\t\ty,\n\t\tprops: {\n\t\t\tscale: scaleDelta * shape.props.scale,\n\t\t},\n\t}\n}\n"],"mappings":"AAAA,SAAgBA,KAAA,QAAa;AAGtB,SAASC,aACfC,KAAA,EAAAC,IAAA,EAYC;EAAA,IAVAC,aAAA,GAAAD,IAAA,CAAAC,aAAA;IACAC,MAAA,GAAAF,IAAA,CAAAE,MAAA;IACAC,MAAA,GAAAH,IAAA,CAAAG,MAAA;IACAC,QAAA,GAAAJ,IAAA,CAAAI,QAAA;EASD,IAAMC,UAAA,GAAaC,IAAA,CAAKC,GAAA,CAAI,MAAMD,IAAA,CAAKE,GAAA,CAAIF,IAAA,CAAKG,GAAA,CAAIP,MAAM,GAAGI,IAAA,CAAKG,GAAA,CAAIN,MAAM,CAAC,CAAC;EAG9E,IAAMO,MAAA,GAAS,IAAIb,KAAA,CAAM,GAAG,CAAC;EAE7B,IAAIK,MAAA,GAAS,GAAG;IACfQ,MAAA,CAAOC,CAAA,GAAI,EAAEV,aAAA,CAAcW,KAAA,GAAQP,UAAA;EACpC;EACA,IAAIF,MAAA,GAAS,GAAG;IACfO,MAAA,CAAOG,CAAA,GAAI,EAAEZ,aAAA,CAAca,MAAA,GAAST,UAAA;EACrC;EAGA,IAAAU,UAAA,GAAiBlB,KAAA,CAAMmB,GAAA,CAAIZ,QAAA,EAAUM,MAAA,CAAOO,GAAA,CAAIlB,KAAA,CAAMmB,QAAQ,CAAC;IAAvDP,CAAA,GAAAI,UAAA,CAAAJ,CAAA;IAAGE,CAAA,GAAAE,UAAA,CAAAF,CAAA;EAEX,OAAO;IACNF,CAAA,EAAAA,CAAA;IACAE,CAAA,EAAAA,CAAA;IACAM,KAAA,EAAO;MACNC,KAAA,EAAOf,UAAA,GAAaN,KAAA,CAAMoB,KAAA,CAAMC;IACjC;EACD;AACD"},"metadata":{},"sourceType":"module","externalDependencies":[]}