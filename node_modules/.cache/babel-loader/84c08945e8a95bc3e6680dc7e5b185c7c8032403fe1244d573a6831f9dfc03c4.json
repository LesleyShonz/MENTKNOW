{"ast":null,"code":"import _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { Content, Portal, Root, Trigger } from \"@radix-ui/react-dropdown-menu\";\nimport { useContainer } from \"@tldraw/editor\";\nimport * as React from \"react\";\nimport { useHelpMenuSchema } from \"../hooks/useHelpMenuSchema.mjs\";\nimport { useMenuIsOpen } from \"../hooks/useMenuIsOpen.mjs\";\nimport { useReadonly } from \"../hooks/useReadonly.mjs\";\nimport { useTranslation } from \"../hooks/useTranslation/useTranslation.mjs\";\nimport { LanguageMenu } from \"./LanguageMenu.mjs\";\nimport * as M from \"./primitives/DropdownMenu.mjs\";\nimport { Icon } from \"./primitives/Icon.mjs\";\nvar HelpMenu = React.memo(function HelpMenu2() {\n  var container = useContainer();\n  var msg = useTranslation();\n  var _useMenuIsOpen = useMenuIsOpen(\"help menu\"),\n    _useMenuIsOpen2 = _slicedToArray(_useMenuIsOpen, 2),\n    isOpen = _useMenuIsOpen2[0],\n    onOpenChange = _useMenuIsOpen2[1];\n  return /* @__PURE__ */jsx(\"div\", {\n    className: \"tlui-help-menu\",\n    children: /* @__PURE__ */jsxs(Root, {\n      dir: \"ltr\",\n      open: isOpen,\n      onOpenChange: onOpenChange,\n      modal: false,\n      children: [/* @__PURE__ */jsx(Trigger, {\n        className: \"tlui-button tlui-help-menu__button\",\n        dir: \"ltr\",\n        title: msg(\"help-menu.title\"),\n        children: /* @__PURE__ */jsx(Icon, {\n          icon: \"question-mark\"\n        })\n      }), /* @__PURE__ */jsx(Portal, {\n        container: container,\n        dir: \"ltr\",\n        children: /* @__PURE__ */jsx(Content, {\n          className: \"tlui-menu\",\n          side: \"top\",\n          sideOffset: 8,\n          align: \"end\",\n          alignOffset: 0,\n          collisionPadding: 4,\n          children: /* @__PURE__ */jsx(HelpMenuContent, {})\n        })\n      })]\n    })\n  });\n});\nfunction HelpMenuContent() {\n  var menuSchema = useHelpMenuSchema();\n  var isReadonly = useReadonly();\n  function getHelpMenuItem(item) {\n    if (isReadonly && !item.readonlyOk) return null;\n    switch (item.type) {\n      case \"custom\":\n        {\n          if (item.id === \"LANGUAGE_MENU\") {\n            return /* @__PURE__ */jsx(LanguageMenu, {}, \"item\");\n          }\n          break;\n        }\n      case \"group\":\n        {\n          return /* @__PURE__ */jsx(M.Group, {\n            size: \"small\",\n            children: item.children.map(getHelpMenuItem)\n          }, item.id);\n        }\n      case \"submenu\":\n        {\n          return /* @__PURE__ */jsxs(M.Sub, {\n            id: \"help menu \".concat(item.id),\n            children: [/* @__PURE__ */jsx(M.SubTrigger, {\n              label: item.label\n            }), /* @__PURE__ */jsx(M.SubContent, {\n              children: item.children.map(getHelpMenuItem)\n            })]\n          }, item.id);\n        }\n      case \"item\":\n        {\n          var _item$actionItem = item.actionItem,\n            id = _item$actionItem.id,\n            kbd = _item$actionItem.kbd,\n            label = _item$actionItem.label,\n            onSelect = _item$actionItem.onSelect,\n            icon = _item$actionItem.icon;\n          return /* @__PURE__ */jsx(M.Item, {\n            kbd: kbd,\n            label: label,\n            onClick: function onClick() {\n              return onSelect(\"help-menu\");\n            },\n            iconLeft: icon\n          }, id);\n        }\n    }\n  }\n  return /* @__PURE__ */jsx(Fragment, {\n    children: menuSchema.map(getHelpMenuItem)\n  });\n}\nexport { HelpMenu };","map":{"version":3,"names":["Fragment","jsx","jsxs","Content","Portal","Root","Trigger","useContainer","React","useHelpMenuSchema","useMenuIsOpen","useReadonly","useTranslation","LanguageMenu","M","Icon","HelpMenu","memo","HelpMenu2","container","msg","_useMenuIsOpen","_useMenuIsOpen2","_slicedToArray","isOpen","onOpenChange","className","children","dir","open","modal","title","icon","side","sideOffset","align","alignOffset","collisionPadding","HelpMenuContent","menuSchema","isReadonly","getHelpMenuItem","item","readonlyOk","type","id","Group","size","map","Sub","concat","SubTrigger","label","SubContent","_item$actionItem","actionItem","kbd","onSelect","Item","onClick","iconLeft"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/HelpMenu.tsx"],"sourcesContent":["import { Content, Portal, Root, Trigger } from '@radix-ui/react-dropdown-menu'\nimport { useContainer } from '@tldraw/editor'\nimport * as React from 'react'\nimport { TLUiMenuChild } from '../hooks/menuHelpers'\nimport { useHelpMenuSchema } from '../hooks/useHelpMenuSchema'\nimport { useMenuIsOpen } from '../hooks/useMenuIsOpen'\nimport { useReadonly } from '../hooks/useReadonly'\nimport { TLUiTranslationKey } from '../hooks/useTranslation/TLUiTranslationKey'\nimport { useTranslation } from '../hooks/useTranslation/useTranslation'\nimport { TLUiIconType } from '../icon-types'\nimport { LanguageMenu } from './LanguageMenu'\nimport * as M from './primitives/DropdownMenu'\nimport { Icon } from './primitives/Icon'\n\ninterface HelpMenuLink {\n\tlabel: TLUiTranslationKey\n\ticon: TLUiIconType\n\turl: string\n}\n\n/** @internal */\nexport interface HelpMenuProps {\n\tlinks?: HelpMenuLink[]\n}\n\n/** @internal */\nexport const HelpMenu = React.memo(function HelpMenu() {\n\tconst container = useContainer()\n\tconst msg = useTranslation()\n\tconst [isOpen, onOpenChange] = useMenuIsOpen('help menu')\n\n\treturn (\n\t\t<div className=\"tlui-help-menu\">\n\t\t\t<Root dir=\"ltr\" open={isOpen} onOpenChange={onOpenChange} modal={false}>\n\t\t\t\t<Trigger\n\t\t\t\t\tclassName=\"tlui-button tlui-help-menu__button\"\n\t\t\t\t\tdir=\"ltr\"\n\t\t\t\t\ttitle={msg('help-menu.title')}\n\t\t\t\t>\n\t\t\t\t\t<Icon icon=\"question-mark\" />\n\t\t\t\t</Trigger>\n\t\t\t\t<Portal container={container} dir=\"ltr\">\n\t\t\t\t\t<Content\n\t\t\t\t\t\tclassName=\"tlui-menu\"\n\t\t\t\t\t\tside=\"top\"\n\t\t\t\t\t\tsideOffset={8}\n\t\t\t\t\t\talign=\"end\"\n\t\t\t\t\t\talignOffset={0}\n\t\t\t\t\t\tcollisionPadding={4}\n\t\t\t\t\t>\n\t\t\t\t\t\t<HelpMenuContent />\n\t\t\t\t\t</Content>\n\t\t\t\t</Portal>\n\t\t\t</Root>\n\t\t</div>\n\t)\n})\n\nfunction HelpMenuContent() {\n\tconst menuSchema = useHelpMenuSchema()\n\n\tconst isReadonly = useReadonly()\n\n\tfunction getHelpMenuItem(item: TLUiMenuChild) {\n\t\tif (isReadonly && !item.readonlyOk) return null\n\n\t\tswitch (item.type) {\n\t\t\tcase 'custom': {\n\t\t\t\tif (item.id === 'LANGUAGE_MENU') {\n\t\t\t\t\treturn <LanguageMenu key=\"item\" />\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'group': {\n\t\t\t\treturn (\n\t\t\t\t\t<M.Group size=\"small\" key={item.id}>\n\t\t\t\t\t\t{item.children.map(getHelpMenuItem)}\n\t\t\t\t\t</M.Group>\n\t\t\t\t)\n\t\t\t}\n\t\t\tcase 'submenu': {\n\t\t\t\treturn (\n\t\t\t\t\t<M.Sub id={`help menu ${item.id}`} key={item.id}>\n\t\t\t\t\t\t<M.SubTrigger label={item.label} />\n\t\t\t\t\t\t<M.SubContent>{item.children.map(getHelpMenuItem)}</M.SubContent>\n\t\t\t\t\t</M.Sub>\n\t\t\t\t)\n\t\t\t}\n\t\t\tcase 'item': {\n\t\t\t\tconst { id, kbd, label, onSelect, icon } = item.actionItem\n\t\t\t\treturn (\n\t\t\t\t\t<M.Item\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tkbd={kbd}\n\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\tonClick={() => onSelect('help-menu')}\n\t\t\t\t\t\ticonLeft={icon}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\n\treturn <>{menuSchema.map(getHelpMenuItem)}</>\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}