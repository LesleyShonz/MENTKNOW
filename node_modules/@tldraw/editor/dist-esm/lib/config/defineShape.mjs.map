{
  "version": 3,
  "sources": ["../../../src/lib/config/defineShape.ts"],
  "sourcesContent": ["import { Migrations } from '@tldraw/store'\nimport { ShapeProps, TLBaseShape, TLUnknownShape } from '@tldraw/tlschema'\nimport { assert } from '@tldraw/utils'\nimport { TLShapeUtilConstructor } from '../editor/shapes/ShapeUtil'\nimport { TLStateNodeConstructor } from '../editor/tools/StateNode'\n\n/** @public */\nexport type TLShapeInfo<T extends TLUnknownShape = TLUnknownShape> = {\n\ttype: T['type']\n\tutil: TLShapeUtilConstructor<T>\n\tprops?: ShapeProps<T>\n\tmigrations?: Migrations\n\ttool?: TLStateNodeConstructor\n}\n\nexport type AnyTLShapeInfo = TLShapeInfo<TLBaseShape<any, any>>\n\n/** @public */\nexport function defineShape<T extends TLUnknownShape>(\n\ttype: T['type'],\n\topts: Omit<TLShapeInfo<T>, 'type'>\n): TLShapeInfo<T> {\n\tassert(\n\t\ttype === opts.util.type,\n\t\t`Shape type \"${type}\" does not match util type \"${opts.util.type}\"`\n\t)\n\treturn { type, ...opts }\n}\n"],
  "mappings": "AAEA,SAAS,cAAc;AAgBhB,SAAS,YACf,MACA,MACiB;AACjB;AAAA,IACC,SAAS,KAAK,KAAK;AAAA,IACnB,eAAe,mCAAmC,KAAK,KAAK;AAAA,EAC7D;AACA,SAAO,EAAE,MAAM,GAAG,KAAK;AACxB;",
  "names": []
}
