{"ast":null,"code":"import _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _migrators;\nvar _excluded = [\"tmpOldUrl\"],\n  _excluded2 = [\"doesResize\"],\n  _excluded3 = [\"tmpOldUrl\"],\n  _excluded4 = [\"overridePermissions\"];\nimport { defineMigrations } from \"@tldraw/store\";\nimport { T } from \"@tldraw/validate\";\nvar TLDRAW_APP_RE = /(^\\/r\\/[^/]+\\/?$)/;\nvar safeParseUrl = function safeParseUrl(url) {\n  try {\n    return new URL(url);\n  } catch (err) {\n    return;\n  }\n};\nvar EMBED_DEFINITIONS = [{\n  type: \"tldraw\",\n  title: \"tldraw\",\n  hostnames: [\"beta.tldraw.com\", \"lite.tldraw.com\", \"www.tldraw.com\"],\n  minWidth: 300,\n  minHeight: 300,\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: true,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(TLDRAW_APP_RE)) {\n      return url;\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(TLDRAW_APP_RE)) {\n      return url;\n    }\n    return;\n  }\n}, {\n  type: \"codesandbox\",\n  title: \"CodeSandbox\",\n  hostnames: [\"codesandbox.io\"],\n  minWidth: 300,\n  minHeight: 300,\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: false,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    var matches = urlObj && urlObj.pathname.match(/\\/s\\/([^/]+)\\/?/);\n    if (matches) {\n      return \"https://codesandbox.io/embed/\".concat(matches[1]);\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    var matches = urlObj && urlObj.pathname.match(/\\/embed\\/([^/]+)\\/?/);\n    if (matches) {\n      return \"https://codesandbox.io/s/\".concat(matches[1]);\n    }\n    return;\n  }\n}, {\n  type: \"codepen\",\n  title: \"Codepen\",\n  hostnames: [\"codepen.io\"],\n  minWidth: 300,\n  minHeight: 300,\n  width: 520,\n  height: 400,\n  doesResize: true,\n  canUnmount: false,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var CODEPEN_URL_REGEXP = /https:\\/\\/codepen.io\\/([^/]+)\\/pen\\/([^/]+)/;\n    var matches = url.match(CODEPEN_URL_REGEXP);\n    if (matches) {\n      var _matches = _slicedToArray(matches, 3),\n        _ = _matches[0],\n        user = _matches[1],\n        id = _matches[2];\n      return \"https://codepen.io/\".concat(user, \"/embed/\").concat(id);\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var CODEPEN_EMBED_REGEXP = /https:\\/\\/codepen.io\\/([^/]+)\\/embed\\/([^/]+)/;\n    var matches = url.match(CODEPEN_EMBED_REGEXP);\n    if (matches) {\n      var _matches2 = _slicedToArray(matches, 3),\n        _ = _matches2[0],\n        user = _matches2[1],\n        id = _matches2[2];\n      return \"https://codepen.io/\".concat(user, \"/pen/\").concat(id);\n    }\n    return;\n  }\n}, {\n  type: \"scratch\",\n  title: \"Scratch\",\n  hostnames: [\"scratch.mit.edu\"],\n  width: 520,\n  height: 400,\n  doesResize: false,\n  canUnmount: false,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var SCRATCH_URL_REGEXP = /https?:\\/\\/scratch.mit.edu\\/projects\\/([^/]+)/;\n    var matches = url.match(SCRATCH_URL_REGEXP);\n    if (matches) {\n      var _matches3 = _slicedToArray(matches, 2),\n        _ = _matches3[0],\n        id = _matches3[1];\n      return \"https://scratch.mit.edu/projects/embed/\".concat(id);\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var SCRATCH_EMBED_REGEXP = /https:\\/\\/scratch.mit.edu\\/projects\\/embed\\/([^/]+)/;\n    var matches = url.match(SCRATCH_EMBED_REGEXP);\n    if (matches) {\n      var _matches4 = _slicedToArray(matches, 2),\n        _ = _matches4[0],\n        id = _matches4[1];\n      return \"https://scratch.mit.edu/projects/\".concat(id);\n    }\n    return;\n  }\n}, {\n  type: \"youtube\",\n  title: \"YouTube\",\n  hostnames: [\"*.youtube.com\", \"youtube.com\", \"youtu.be\"],\n  width: 800,\n  height: 450,\n  doesResize: true,\n  canUnmount: false,\n  overridePermissions: {\n    \"allow-presentation\": true\n  },\n  isAspectRatioLocked: true,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (!urlObj) return;\n    var hostname = urlObj.hostname.replace(/^www./, \"\");\n    if (hostname === \"youtu.be\") {\n      var videoId = urlObj.pathname.split(\"/\").filter(Boolean)[0];\n      return \"https://www.youtube.com/embed/\".concat(videoId);\n    } else if ((hostname === \"youtube.com\" || hostname === \"m.youtube.com\") && urlObj.pathname.match(/^\\/watch/)) {\n      var _videoId = urlObj.searchParams.get(\"v\");\n      return \"https://www.youtube.com/embed/\".concat(_videoId);\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (!urlObj) return;\n    var hostname = urlObj.hostname.replace(/^www./, \"\");\n    if (hostname === \"youtube.com\") {\n      var matches = urlObj.pathname.match(/^\\/embed\\/([^/]+)\\/?/);\n      if (matches) {\n        return \"https://www.youtube.com/watch?v=\".concat(matches[1]);\n      }\n    }\n    return;\n  }\n}, {\n  type: \"figma\",\n  title: \"Figma\",\n  hostnames: [\"figma.com\"],\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: true,\n  toEmbedUrl: function toEmbedUrl(url) {\n    if (!!url.match(\n    // eslint-disable-next-line no-useless-escape\n    /https:\\/\\/([\\w\\.-]+\\.)?figma.com\\/(file|proto)\\/([0-9a-zA-Z]{22,128})(?:\\/.*)?$/) && !url.includes(\"figma.com/embed\")) {\n      return \"https://www.figma.com/embed?embed_host=share&url=\".concat(url);\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/^\\/embed\\/?$/)) {\n      var outUrl = urlObj.searchParams.get(\"url\");\n      if (outUrl) {\n        return outUrl;\n      }\n    }\n    return;\n  }\n}, {\n  type: \"google_maps\",\n  title: \"Google Maps\",\n  hostnames: [\"google.*\"],\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: false,\n  toEmbedUrl: function toEmbedUrl(url) {\n    if (url.includes(\"/maps/\")) {\n      var match = url.match(/@(.*),(.*),(.*)z/);\n      var result;\n      if (match) {\n        var _match = _slicedToArray(match, 4),\n          lat = _match[1],\n          lng = _match[2],\n          z = _match[3];\n        var host = new URL(url).host.replace(\"www.\", \"\");\n        result = \"https://\".concat(host, \"/maps/embed/v1/view?key=\").concat(process.env.NEXT_PUBLIC_GC_API_KEY, \"&center=\").concat(lat, \",\").concat(lng, \"&zoom=\").concat(z);\n      } else {\n        result = \"\";\n      }\n      return result;\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (!urlObj) return;\n    var matches = urlObj.pathname.match(/^\\/maps\\/embed\\/v1\\/view\\/?$/);\n    if (matches && urlObj.searchParams.has(\"center\") && urlObj.searchParams.get(\"zoom\")) {\n      var zoom = urlObj.searchParams.get(\"zoom\");\n      var _urlObj$searchParams$ = urlObj.searchParams.get(\"center\").split(\",\"),\n        _urlObj$searchParams$2 = _slicedToArray(_urlObj$searchParams$, 2),\n        lat = _urlObj$searchParams$2[0],\n        lon = _urlObj$searchParams$2[1];\n      return \"https://www.google.com/maps/@\".concat(lat, \",\").concat(lon, \",\").concat(zoom, \"z\");\n    }\n    return;\n  }\n}, {\n  type: \"google_calendar\",\n  title: \"Google Calendar\",\n  hostnames: [\"calendar.google.*\"],\n  width: 720,\n  height: 500,\n  minWidth: 460,\n  minHeight: 360,\n  doesResize: true,\n  canUnmount: false,\n  instructionLink: \"https://support.google.com/calendar/answer/41207?hl=en\",\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    var cidQs = urlObj === null || urlObj === void 0 ? void 0 : urlObj.searchParams.get(\"cid\");\n    if (urlObj !== null && urlObj !== void 0 && urlObj.pathname.match(/\\/calendar\\/u\\/0/) && cidQs) {\n      urlObj.pathname = \"/calendar/embed\";\n      var keys = Array.from(urlObj.searchParams.keys());\n      for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n        var key = _keys[_i];\n        urlObj.searchParams.delete(key);\n      }\n      urlObj.searchParams.set(\"src\", cidQs);\n      return urlObj.href;\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    var srcQs = urlObj === null || urlObj === void 0 ? void 0 : urlObj.searchParams.get(\"src\");\n    if (urlObj !== null && urlObj !== void 0 && urlObj.pathname.match(/\\/calendar\\/embed/) && srcQs) {\n      urlObj.pathname = \"/calendar/u/0\";\n      var keys = Array.from(urlObj.searchParams.keys());\n      for (var _i2 = 0, _keys2 = keys; _i2 < _keys2.length; _i2++) {\n        var key = _keys2[_i2];\n        urlObj.searchParams.delete(key);\n      }\n      urlObj.searchParams.set(\"cid\", srcQs);\n      return urlObj.href;\n    }\n    return;\n  }\n}, {\n  type: \"google_slides\",\n  title: \"Google Slides\",\n  hostnames: [\"docs.google.*\"],\n  width: 720,\n  height: 500,\n  minWidth: 460,\n  minHeight: 360,\n  doesResize: true,\n  canUnmount: false,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj !== null && urlObj !== void 0 && urlObj.pathname.match(/^\\/presentation/) && urlObj !== null && urlObj !== void 0 && urlObj.pathname.match(/\\/pub\\/?$/)) {\n      urlObj.pathname = urlObj.pathname.replace(/\\/pub$/, \"/embed\");\n      var keys = Array.from(urlObj.searchParams.keys());\n      for (var _i3 = 0, _keys3 = keys; _i3 < _keys3.length; _i3++) {\n        var key = _keys3[_i3];\n        urlObj.searchParams.delete(key);\n      }\n      return urlObj.href;\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj !== null && urlObj !== void 0 && urlObj.pathname.match(/^\\/presentation/) && urlObj !== null && urlObj !== void 0 && urlObj.pathname.match(/\\/embed\\/?$/)) {\n      urlObj.pathname = urlObj.pathname.replace(/\\/embed$/, \"/pub\");\n      var keys = Array.from(urlObj.searchParams.keys());\n      for (var _i4 = 0, _keys4 = keys; _i4 < _keys4.length; _i4++) {\n        var key = _keys4[_i4];\n        urlObj.searchParams.delete(key);\n      }\n      return urlObj.href;\n    }\n    return;\n  }\n}, {\n  type: \"github_gist\",\n  title: \"GitHub Gist\",\n  hostnames: [\"gist.github.com\"],\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: true,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/\\/([^/]+)\\/([^/]+)/)) {\n      if (!url.split(\"/\").pop()) return;\n      return url;\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/\\/([^/]+)\\/([^/]+)/)) {\n      if (!url.split(\"/\").pop()) return;\n      return url;\n    }\n    return;\n  }\n}, {\n  type: \"replit\",\n  title: \"Replit\",\n  hostnames: [\"replit.com\"],\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: false,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/\\/@([^/]+)\\/([^/]+)/)) {\n      return \"\".concat(url, \"?embed=true\");\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/\\/@([^/]+)\\/([^/]+)/) && urlObj.searchParams.has(\"embed\")) {\n      urlObj.searchParams.delete(\"embed\");\n      return urlObj.href;\n    }\n    return;\n  }\n}, {\n  type: \"felt\",\n  title: \"Felt\",\n  hostnames: [\"felt.com\"],\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: false,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/^\\/map\\//)) {\n      return urlObj.origin + \"/embed\" + urlObj.pathname;\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/^\\/embed\\/map\\//)) {\n      urlObj.pathname = urlObj.pathname.replace(/^\\/embed/, \"\");\n      return urlObj.href;\n    }\n    return;\n  }\n}, {\n  type: \"spotify\",\n  title: \"Spotify\",\n  hostnames: [\"open.spotify.com\"],\n  width: 720,\n  height: 500,\n  minHeight: 500,\n  overrideOutlineRadius: 12,\n  doesResize: true,\n  canUnmount: false,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/^\\/(artist|album)\\//)) {\n      return urlObj.origin + \"/embed\" + urlObj.pathname;\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/^\\/embed\\/(artist|album)\\//)) {\n      return urlObj.origin + urlObj.pathname.replace(/^\\/embed/, \"\");\n    }\n    return;\n  }\n}, {\n  type: \"vimeo\",\n  title: \"Vimeo\",\n  hostnames: [\"vimeo.com\", \"player.vimeo.com\"],\n  width: 640,\n  height: 360,\n  doesResize: true,\n  canUnmount: false,\n  isAspectRatioLocked: true,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.hostname === \"vimeo.com\") {\n      if (urlObj.pathname.match(/^\\/[0-9]+/)) {\n        return \"https://player.vimeo.com/video/\" + urlObj.pathname.split(\"/\")[1] + \"?title=0&byline=0\";\n      }\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.hostname === \"player.vimeo.com\") {\n      var matches = urlObj.pathname.match(/^\\/video\\/([^/]+)\\/?$/);\n      if (matches) {\n        return \"https://vimeo.com/\" + matches[1];\n      }\n    }\n    return;\n  }\n}, {\n  type: \"excalidraw\",\n  title: \"Excalidraw\",\n  hostnames: [\"excalidraw.com\"],\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: false,\n  isAspectRatioLocked: true,\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.hash.match(/#room=/)) {\n      return url;\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.hash.match(/#room=/)) {\n      return url;\n    }\n    return;\n  }\n}, {\n  type: \"observable\",\n  title: \"Observable\",\n  hostnames: [\"observablehq.com\"],\n  width: 720,\n  height: 500,\n  doesResize: true,\n  canUnmount: false,\n  isAspectRatioLocked: false,\n  backgroundColor: \"#fff\",\n  toEmbedUrl: function toEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/^\\/@([^/]+)\\/([^/]+)\\/?$/)) {\n      return \"\".concat(urlObj.origin, \"/embed\").concat(urlObj.pathname, \"?cell=*\");\n    }\n    if (urlObj && urlObj.pathname.match(/^\\/d\\/([^/]+)\\/?$/)) {\n      var pathName = urlObj.pathname.replace(/^\\/d/, \"\");\n      return \"\".concat(urlObj.origin, \"/embed\").concat(pathName, \"?cell=*\");\n    }\n    return;\n  },\n  fromEmbedUrl: function fromEmbedUrl(url) {\n    var urlObj = safeParseUrl(url);\n    if (urlObj && urlObj.pathname.match(/^\\/embed\\/@([^/]+)\\/([^/]+)\\/?$/)) {\n      return \"\".concat(urlObj.origin).concat(urlObj.pathname.replace(\"/embed\", \"\"), \"#cell-*\");\n    }\n    if (urlObj && urlObj.pathname.match(/^\\/embed\\/([^/]+)\\/?$/)) {\n      return \"\".concat(urlObj.origin).concat(urlObj.pathname.replace(\"/embed\", \"/d\"), \"#cell-*\");\n    }\n    return;\n  }\n}];\nvar embedShapePermissionDefaults = {\n  // ========================================================================================\n  // Disabled permissions\n  // ========================================================================================\n  // [MDN] Experimental: Allows for downloads to occur without a gesture from the user.\n  // [REASON] Disabled because otherwise the <iframe/> trick the user on behalf of us to performing an action\n  \"allow-downloads-without-user-activation\": false,\n  // [MDN] Allows for downloads to occur with a gesture from the user.\n  // [REASON] Disabled because otherwise the <iframe/> trick the user on behalf of us to performing an action\n  \"allow-downloads\": false,\n  // [MDN] Lets the resource open modal windows.\n  // [REASON] The <iframe/> could 'window.prompt(\"Enter your tldraw password\")'\n  \"allow-modals\": false,\n  // [MDN] Lets the resource lock the screen orientation.\n  // [REASON] Would interfer with tldraw interface\n  \"allow-orientation-lock\": false,\n  // [MDN] Lets the resource use the Pointer Lock API.\n  // [REASON] Maybe we should allow this for games embeds (scratch/codepen/codesandbox)\n  \"allow-pointer-lock\": false,\n  // [MDN] Allows popups (such as window.open(), target=\"_blank\", or showModalDialog()). If this keyword is not used, the popup will silently fail to open.\n  // [REASON] We shouldn't allow popups as a embed could pretend to be us by opening a mocked version of tldraw. This is very unobvious when it is performed as an action within out app\n  \"allow-popups\": true,\n  // [MDN] Lets the sandboxed document open new windows without those windows inheriting the sandboxing. For example, this can safely sandbox an advertisement without forcing the same restrictions upon the page the ad links to.\n  // [REASON] We're alread disabling popups.\n  \"allow-popups-to-escape-sandbox\": false,\n  // [MDN] Lets the resource start a presentation session.\n  // [REASON] Prevents embed from navigating away from tldraw and pretending to be us\n  \"allow-presentation\": false,\n  // [MDN] Experimental: Lets the resource request access to the parent's storage capabilities with the Storage Access API.\n  // [REASON] We don't want anyone else to access our storage\n  \"allow-storage-access-by-user-activation\": false,\n  // [MDN] Lets the resource navigate the top-level browsing context (the one named _top).\n  // [REASON] Prevents embed from navigating away from tldraw and pretending to be us\n  \"allow-top-navigation\": false,\n  // [MDN] Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.\n  // [REASON] Prevents embed from navigating away from tldraw and pretending to be us\n  \"allow-top-navigation-by-user-activation\": false,\n  // ========================================================================================\n  // Enabled permissions\n  // ========================================================================================\n  // [MDN] Lets the resource run scripts (but not create popup windows).\n  \"allow-scripts\": true,\n  // [MDN] If this token is not used, the resource is treated as being from a special origin that always fails the same-origin policy (potentially preventing access to data storage/cookies and some JavaScript APIs).\n  \"allow-same-origin\": true,\n  // [MDN] Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n  \"allow-forms\": true\n};\nvar embedShapeProps = {\n  w: T.nonZeroNumber,\n  h: T.nonZeroNumber,\n  url: T.string\n};\nvar Versions = {\n  GenOriginalUrlInEmbed: 1,\n  RemoveDoesResize: 2,\n  RemoveTmpOldUrl: 3,\n  RemovePermissionOverrides: 4\n};\nvar embedShapeMigrations = defineMigrations({\n  currentVersion: Versions.RemovePermissionOverrides,\n  migrators: (_migrators = {}, _defineProperty(_migrators, Versions.GenOriginalUrlInEmbed, {\n    // add tmpOldUrl property\n    up: function up(shape) {\n      var _originalUrl;\n      var url = shape.props.url;\n      var host = new URL(url).host.replace(\"www.\", \"\");\n      var originalUrl;\n      for (var _i5 = 0, _EMBED_DEFINITIONS = EMBED_DEFINITIONS; _i5 < _EMBED_DEFINITIONS.length; _i5++) {\n        var localEmbedDef = _EMBED_DEFINITIONS[_i5];\n        if (localEmbedDef.hostnames.includes(host)) {\n          try {\n            originalUrl = localEmbedDef.fromEmbedUrl(url);\n          } catch (err) {\n            console.warn(err);\n          }\n        }\n      }\n      return _objectSpread(_objectSpread({}, shape), {}, {\n        props: _objectSpread(_objectSpread({}, shape.props), {}, {\n          tmpOldUrl: shape.props.url,\n          url: (_originalUrl = originalUrl) !== null && _originalUrl !== void 0 ? _originalUrl : \"\"\n        })\n      });\n    },\n    // remove tmpOldUrl property\n    down: function down(shape) {\n      var _newUrl;\n      var newUrl = shape.props.tmpOldUrl;\n      if (!newUrl || newUrl === \"\") {\n        var url = shape.props.url;\n        var host = new URL(url).host.replace(\"www.\", \"\");\n        for (var _i6 = 0, _EMBED_DEFINITIONS2 = EMBED_DEFINITIONS; _i6 < _EMBED_DEFINITIONS2.length; _i6++) {\n          var localEmbedDef = _EMBED_DEFINITIONS2[_i6];\n          if (localEmbedDef.hostnames.includes(host)) {\n            try {\n              newUrl = localEmbedDef.toEmbedUrl(url);\n            } catch (err) {\n              console.warn(err);\n            }\n          }\n        }\n      }\n      var _shape$props = shape.props,\n        tmpOldUrl = _shape$props.tmpOldUrl,\n        props = _objectWithoutProperties(_shape$props, _excluded);\n      return _objectSpread(_objectSpread({}, shape), {}, {\n        props: _objectSpread(_objectSpread({}, props), {}, {\n          url: (_newUrl = newUrl) !== null && _newUrl !== void 0 ? _newUrl : \"\"\n        })\n      });\n    }\n  }), _defineProperty(_migrators, Versions.RemoveDoesResize, {\n    up: function up(shape) {\n      var _shape$props2 = shape.props,\n        _ = _shape$props2.doesResize,\n        props = _objectWithoutProperties(_shape$props2, _excluded2);\n      return _objectSpread(_objectSpread({}, shape), {}, {\n        props: _objectSpread({}, props)\n      });\n    },\n    down: function down(shape) {\n      return _objectSpread(_objectSpread({}, shape), {}, {\n        props: _objectSpread(_objectSpread({}, shape.props), {}, {\n          doesResize: true\n        })\n      });\n    }\n  }), _defineProperty(_migrators, Versions.RemoveTmpOldUrl, {\n    up: function up(shape) {\n      var _shape$props3 = shape.props,\n        _ = _shape$props3.tmpOldUrl,\n        props = _objectWithoutProperties(_shape$props3, _excluded3);\n      return _objectSpread(_objectSpread({}, shape), {}, {\n        props: _objectSpread({}, props)\n      });\n    },\n    down: function down(shape) {\n      return _objectSpread(_objectSpread({}, shape), {}, {\n        props: _objectSpread({}, shape.props)\n      });\n    }\n  }), _defineProperty(_migrators, Versions.RemovePermissionOverrides, {\n    up: function up(shape) {\n      var _shape$props4 = shape.props,\n        _ = _shape$props4.overridePermissions,\n        props = _objectWithoutProperties(_shape$props4, _excluded4);\n      return _objectSpread(_objectSpread({}, shape), {}, {\n        props: _objectSpread({}, props)\n      });\n    },\n    down: function down(shape) {\n      return _objectSpread(_objectSpread({}, shape), {}, {\n        props: _objectSpread({}, shape.props)\n      });\n    }\n  }), _migrators)\n});\nexport { EMBED_DEFINITIONS, embedShapeMigrations, embedShapePermissionDefaults, embedShapeProps };","map":{"version":3,"names":["defineMigrations","T","TLDRAW_APP_RE","safeParseUrl","url","URL","err","EMBED_DEFINITIONS","type","title","hostnames","minWidth","minHeight","width","height","doesResize","canUnmount","toEmbedUrl","urlObj","pathname","match","fromEmbedUrl","matches","concat","CODEPEN_URL_REGEXP","_matches","_slicedToArray","_","user","id","CODEPEN_EMBED_REGEXP","_matches2","SCRATCH_URL_REGEXP","_matches3","SCRATCH_EMBED_REGEXP","_matches4","overridePermissions","isAspectRatioLocked","hostname","replace","videoId","split","filter","Boolean","searchParams","get","includes","outUrl","result","_match","lat","lng","z","host","process","env","NEXT_PUBLIC_GC_API_KEY","has","zoom","_urlObj$searchParams$","_urlObj$searchParams$2","lon","instructionLink","cidQs","keys","Array","from","_i","_keys","length","key","delete","set","href","srcQs","_i2","_keys2","_i3","_keys3","_i4","_keys4","pop","origin","overrideOutlineRadius","hash","backgroundColor","pathName","embedShapePermissionDefaults","embedShapeProps","w","nonZeroNumber","h","string","Versions","GenOriginalUrlInEmbed","RemoveDoesResize","RemoveTmpOldUrl","RemovePermissionOverrides","embedShapeMigrations","currentVersion","migrators","_migrators","_defineProperty","up","shape","_originalUrl","props","originalUrl","_i5","_EMBED_DEFINITIONS","localEmbedDef","console","warn","_objectSpread","tmpOldUrl","down","_newUrl","newUrl","_i6","_EMBED_DEFINITIONS2","_shape$props","_objectWithoutProperties","_excluded","_shape$props2","_excluded2","_shape$props3","_excluded3","_shape$props4","_excluded4"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/tlschema/src/shapes/TLEmbedShape.ts"],"sourcesContent":["import { defineMigrations } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { ShapePropsType, TLBaseShape } from './TLBaseShape'\n\n// Only allow multiplayer embeds. If we add additional routes later for example '/help' this won't match\nconst TLDRAW_APP_RE = /(^\\/r\\/[^/]+\\/?$)/\n\nconst safeParseUrl = (url: string) => {\n\ttry {\n\t\treturn new URL(url)\n\t} catch (err) {\n\t\treturn\n\t}\n}\n\n/** @public */\nexport const EMBED_DEFINITIONS = [\n\t{\n\t\ttype: 'tldraw',\n\t\ttitle: 'tldraw',\n\t\thostnames: ['beta.tldraw.com', 'lite.tldraw.com', 'www.tldraw.com'],\n\t\tminWidth: 300,\n\t\tminHeight: 300,\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(TLDRAW_APP_RE)) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(TLDRAW_APP_RE)) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'codesandbox',\n\t\ttitle: 'CodeSandbox',\n\t\thostnames: ['codesandbox.io'],\n\t\tminWidth: 300,\n\t\tminHeight: 300,\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst matches = urlObj && urlObj.pathname.match(/\\/s\\/([^/]+)\\/?/)\n\t\t\tif (matches) {\n\t\t\t\treturn `https://codesandbox.io/embed/${matches[1]}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst matches = urlObj && urlObj.pathname.match(/\\/embed\\/([^/]+)\\/?/)\n\t\t\tif (matches) {\n\t\t\t\treturn `https://codesandbox.io/s/${matches[1]}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'codepen',\n\t\ttitle: 'Codepen',\n\t\thostnames: ['codepen.io'],\n\t\tminWidth: 300,\n\t\tminHeight: 300,\n\t\twidth: 520,\n\t\theight: 400,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst CODEPEN_URL_REGEXP = /https:\\/\\/codepen.io\\/([^/]+)\\/pen\\/([^/]+)/\n\t\t\tconst matches = url.match(CODEPEN_URL_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, user, id] = matches\n\t\t\t\treturn `https://codepen.io/${user}/embed/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst CODEPEN_EMBED_REGEXP = /https:\\/\\/codepen.io\\/([^/]+)\\/embed\\/([^/]+)/\n\t\t\tconst matches = url.match(CODEPEN_EMBED_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, user, id] = matches\n\t\t\t\treturn `https://codepen.io/${user}/pen/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'scratch',\n\t\ttitle: 'Scratch',\n\t\thostnames: ['scratch.mit.edu'],\n\t\twidth: 520,\n\t\theight: 400,\n\t\tdoesResize: false,\n\t\tcanUnmount: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst SCRATCH_URL_REGEXP = /https?:\\/\\/scratch.mit.edu\\/projects\\/([^/]+)/\n\t\t\tconst matches = url.match(SCRATCH_URL_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, id] = matches\n\t\t\t\treturn `https://scratch.mit.edu/projects/embed/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst SCRATCH_EMBED_REGEXP = /https:\\/\\/scratch.mit.edu\\/projects\\/embed\\/([^/]+)/\n\t\t\tconst matches = url.match(SCRATCH_EMBED_REGEXP)\n\t\t\tif (matches) {\n\t\t\t\tconst [_, id] = matches\n\t\t\t\treturn `https://scratch.mit.edu/projects/${id}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'youtube',\n\t\ttitle: 'YouTube',\n\t\thostnames: ['*.youtube.com', 'youtube.com', 'youtu.be'],\n\t\twidth: 800,\n\t\theight: 450,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\toverridePermissions: {\n\t\t\t'allow-presentation': true,\n\t\t},\n\t\tisAspectRatioLocked: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (!urlObj) return\n\n\t\t\tconst hostname = urlObj.hostname.replace(/^www./, '')\n\t\t\tif (hostname === 'youtu.be') {\n\t\t\t\tconst videoId = urlObj.pathname.split('/').filter(Boolean)[0]\n\t\t\t\treturn `https://www.youtube.com/embed/${videoId}`\n\t\t\t} else if (\n\t\t\t\t(hostname === 'youtube.com' || hostname === 'm.youtube.com') &&\n\t\t\t\turlObj.pathname.match(/^\\/watch/)\n\t\t\t) {\n\t\t\t\tconst videoId = urlObj.searchParams.get('v')\n\t\t\t\treturn `https://www.youtube.com/embed/${videoId}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (!urlObj) return\n\n\t\t\tconst hostname = urlObj.hostname.replace(/^www./, '')\n\t\t\tif (hostname === 'youtube.com') {\n\t\t\t\tconst matches = urlObj.pathname.match(/^\\/embed\\/([^/]+)\\/?/)\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn `https://www.youtube.com/watch?v=${matches[1]}`\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'figma',\n\t\ttitle: 'Figma',\n\t\thostnames: ['figma.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tif (\n\t\t\t\t!!url.match(\n\t\t\t\t\t// eslint-disable-next-line no-useless-escape\n\t\t\t\t\t/https:\\/\\/([\\w\\.-]+\\.)?figma.com\\/(file|proto)\\/([0-9a-zA-Z]{22,128})(?:\\/.*)?$/\n\t\t\t\t) &&\n\t\t\t\t!url.includes('figma.com/embed')\n\t\t\t) {\n\t\t\t\treturn `https://www.figma.com/embed?embed_host=share&url=${url}`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/?$/)) {\n\t\t\t\tconst outUrl = urlObj.searchParams.get('url')\n\t\t\t\tif (outUrl) {\n\t\t\t\t\treturn outUrl\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'google_maps',\n\t\ttitle: 'Google Maps',\n\t\thostnames: ['google.*'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tif (url.includes('/maps/')) {\n\t\t\t\tconst match = url.match(/@(.*),(.*),(.*)z/)\n\t\t\t\tlet result: string\n\t\t\t\tif (match) {\n\t\t\t\t\tconst [, lat, lng, z] = match\n\t\t\t\t\tconst host = new URL(url).host.replace('www.', '')\n\t\t\t\t\tresult = `https://${host}/maps/embed/v1/view?key=${process.env.NEXT_PUBLIC_GC_API_KEY}&center=${lat},${lng}&zoom=${z}`\n\t\t\t\t} else {\n\t\t\t\t\tresult = ''\n\t\t\t\t}\n\n\t\t\t\treturn result\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (!urlObj) return\n\n\t\t\tconst matches = urlObj.pathname.match(/^\\/maps\\/embed\\/v1\\/view\\/?$/)\n\t\t\tif (matches && urlObj.searchParams.has('center') && urlObj.searchParams.get('zoom')) {\n\t\t\t\tconst zoom = urlObj.searchParams.get('zoom')\n\t\t\t\tconst [lat, lon] = urlObj.searchParams.get('center')!.split(',')\n\t\t\t\treturn `https://www.google.com/maps/@${lat},${lon},${zoom}z`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'google_calendar',\n\t\ttitle: 'Google Calendar',\n\t\thostnames: ['calendar.google.*'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tminWidth: 460,\n\t\tminHeight: 360,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\tinstructionLink: 'https://support.google.com/calendar/answer/41207?hl=en',\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst cidQs = urlObj?.searchParams.get('cid')\n\n\t\t\tif (urlObj?.pathname.match(/\\/calendar\\/u\\/0/) && cidQs) {\n\t\t\t\turlObj.pathname = '/calendar/embed'\n\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\turlObj.searchParams.set('src', cidQs)\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tconst srcQs = urlObj?.searchParams.get('src')\n\n\t\t\tif (urlObj?.pathname.match(/\\/calendar\\/embed/) && srcQs) {\n\t\t\t\turlObj.pathname = '/calendar/u/0'\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\turlObj.searchParams.set('cid', srcQs)\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'google_slides',\n\t\ttitle: 'Google Slides',\n\t\thostnames: ['docs.google.*'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tminWidth: 460,\n\t\tminHeight: 360,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\n\t\t\tif (urlObj?.pathname.match(/^\\/presentation/) && urlObj?.pathname.match(/\\/pub\\/?$/)) {\n\t\t\t\turlObj.pathname = urlObj.pathname.replace(/\\/pub$/, '/embed')\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\n\t\t\tif (urlObj?.pathname.match(/^\\/presentation/) && urlObj?.pathname.match(/\\/embed\\/?$/)) {\n\t\t\t\turlObj.pathname = urlObj.pathname.replace(/\\/embed$/, '/pub')\n\t\t\t\tconst keys = Array.from(urlObj.searchParams.keys())\n\t\t\t\tfor (const key of keys) {\n\t\t\t\t\turlObj.searchParams.delete(key)\n\t\t\t\t}\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'github_gist',\n\t\ttitle: 'GitHub Gist',\n\t\thostnames: ['gist.github.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/\\/([^/]+)\\/([^/]+)/)) {\n\t\t\t\tif (!url.split('/').pop()) return\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/\\/([^/]+)\\/([^/]+)/)) {\n\t\t\t\tif (!url.split('/').pop()) return\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'replit',\n\t\ttitle: 'Replit',\n\t\thostnames: ['replit.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/\\/@([^/]+)\\/([^/]+)/)) {\n\t\t\t\treturn `${url}?embed=true`\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (\n\t\t\t\turlObj &&\n\t\t\t\turlObj.pathname.match(/\\/@([^/]+)\\/([^/]+)/) &&\n\t\t\t\turlObj.searchParams.has('embed')\n\t\t\t) {\n\t\t\t\turlObj.searchParams.delete('embed')\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'felt',\n\t\ttitle: 'Felt',\n\t\thostnames: ['felt.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/map\\//)) {\n\t\t\t\treturn urlObj.origin + '/embed' + urlObj.pathname\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/map\\//)) {\n\t\t\t\turlObj.pathname = urlObj.pathname.replace(/^\\/embed/, '')\n\t\t\t\treturn urlObj.href\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'spotify',\n\t\ttitle: 'Spotify',\n\t\thostnames: ['open.spotify.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tminHeight: 500,\n\t\toverrideOutlineRadius: 12,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/(artist|album)\\//)) {\n\t\t\t\treturn urlObj.origin + '/embed' + urlObj.pathname\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/(artist|album)\\//)) {\n\t\t\t\treturn urlObj.origin + urlObj.pathname.replace(/^\\/embed/, '')\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'vimeo',\n\t\ttitle: 'Vimeo',\n\t\thostnames: ['vimeo.com', 'player.vimeo.com'],\n\t\twidth: 640,\n\t\theight: 360,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\tisAspectRatioLocked: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hostname === 'vimeo.com') {\n\t\t\t\tif (urlObj.pathname.match(/^\\/[0-9]+/)) {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t'https://player.vimeo.com/video/' + urlObj.pathname.split('/')[1] + '?title=0&byline=0'\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hostname === 'player.vimeo.com') {\n\t\t\t\tconst matches = urlObj.pathname.match(/^\\/video\\/([^/]+)\\/?$/)\n\t\t\t\tif (matches) {\n\t\t\t\t\treturn 'https://vimeo.com/' + matches[1]\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'excalidraw',\n\t\ttitle: 'Excalidraw',\n\t\thostnames: ['excalidraw.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\tisAspectRatioLocked: true,\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hash.match(/#room=/)) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.hash.match(/#room=/)) {\n\t\t\t\treturn url\n\t\t\t}\n\t\t\treturn\n\t\t},\n\t},\n\t{\n\t\ttype: 'observable',\n\t\ttitle: 'Observable',\n\t\thostnames: ['observablehq.com'],\n\t\twidth: 720,\n\t\theight: 500,\n\t\tdoesResize: true,\n\t\tcanUnmount: false,\n\t\tisAspectRatioLocked: false,\n\t\tbackgroundColor: '#fff',\n\t\ttoEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/@([^/]+)\\/([^/]+)\\/?$/)) {\n\t\t\t\treturn `${urlObj.origin}/embed${urlObj.pathname}?cell=*`\n\t\t\t}\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/d\\/([^/]+)\\/?$/)) {\n\t\t\t\tconst pathName = urlObj.pathname.replace(/^\\/d/, '')\n\t\t\t\treturn `${urlObj.origin}/embed${pathName}?cell=*`\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\t\tfromEmbedUrl: (url) => {\n\t\t\tconst urlObj = safeParseUrl(url)\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/@([^/]+)\\/([^/]+)\\/?$/)) {\n\t\t\t\treturn `${urlObj.origin}${urlObj.pathname.replace('/embed', '')}#cell-*`\n\t\t\t}\n\t\t\tif (urlObj && urlObj.pathname.match(/^\\/embed\\/([^/]+)\\/?$/)) {\n\t\t\t\treturn `${urlObj.origin}${urlObj.pathname.replace('/embed', '/d')}#cell-*`\n\t\t\t}\n\n\t\t\treturn\n\t\t},\n\t},\n] as const satisfies readonly EmbedDefinition[]\n\n/**\n * Permissions with note inline from\n * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/iframe#attr-sandbox\n *\n * @public\n */\nexport const embedShapePermissionDefaults = {\n\t// ========================================================================================\n\t// Disabled permissions\n\t// ========================================================================================\n\t// [MDN] Experimental: Allows for downloads to occur without a gesture from the user.\n\t// [REASON] Disabled because otherwise the <iframe/> trick the user on behalf of us to performing an action\n\t'allow-downloads-without-user-activation': false,\n\t// [MDN] Allows for downloads to occur with a gesture from the user.\n\t// [REASON] Disabled because otherwise the <iframe/> trick the user on behalf of us to performing an action\n\t'allow-downloads': false,\n\t// [MDN] Lets the resource open modal windows.\n\t// [REASON] The <iframe/> could 'window.prompt(\"Enter your tldraw password\")'\n\t'allow-modals': false,\n\t// [MDN] Lets the resource lock the screen orientation.\n\t// [REASON] Would interfer with tldraw interface\n\t'allow-orientation-lock': false,\n\t// [MDN] Lets the resource use the Pointer Lock API.\n\t// [REASON] Maybe we should allow this for games embeds (scratch/codepen/codesandbox)\n\t'allow-pointer-lock': false,\n\t// [MDN] Allows popups (such as window.open(), target=\"_blank\", or showModalDialog()). If this keyword is not used, the popup will silently fail to open.\n\t// [REASON] We shouldn't allow popups as a embed could pretend to be us by opening a mocked version of tldraw. This is very unobvious when it is performed as an action within out app\n\t'allow-popups': true,\n\t// [MDN] Lets the sandboxed document open new windows without those windows inheriting the sandboxing. For example, this can safely sandbox an advertisement without forcing the same restrictions upon the page the ad links to.\n\t// [REASON] We're alread disabling popups.\n\t'allow-popups-to-escape-sandbox': false,\n\t// [MDN] Lets the resource start a presentation session.\n\t// [REASON] Prevents embed from navigating away from tldraw and pretending to be us\n\t'allow-presentation': false,\n\t// [MDN] Experimental: Lets the resource request access to the parent's storage capabilities with the Storage Access API.\n\t// [REASON] We don't want anyone else to access our storage\n\t'allow-storage-access-by-user-activation': false,\n\t// [MDN] Lets the resource navigate the top-level browsing context (the one named _top).\n\t// [REASON] Prevents embed from navigating away from tldraw and pretending to be us\n\t'allow-top-navigation': false,\n\t// [MDN] Lets the resource navigate the top-level browsing context, but only if initiated by a user gesture.\n\t// [REASON] Prevents embed from navigating away from tldraw and pretending to be us\n\t'allow-top-navigation-by-user-activation': false,\n\t// ========================================================================================\n\t// Enabled permissions\n\t// ========================================================================================\n\t// [MDN] Lets the resource run scripts (but not create popup windows).\n\t'allow-scripts': true,\n\t// [MDN] If this token is not used, the resource is treated as being from a special origin that always fails the same-origin policy (potentially preventing access to data storage/cookies and some JavaScript APIs).\n\t'allow-same-origin': true,\n\t// [MDN] Allows the resource to submit forms. If this keyword is not used, form submission is blocked.\n\t'allow-forms': true,\n} as const\n\n/** @public */\nexport type TLEmbedShapePermissions = { [K in keyof typeof embedShapePermissionDefaults]?: boolean }\n\n/** @public */\nexport const embedShapeProps = {\n\tw: T.nonZeroNumber,\n\th: T.nonZeroNumber,\n\turl: T.string,\n}\n\n/** @public */\nexport type TLEmbedShapeProps = ShapePropsType<typeof embedShapeProps>\n\n/** @public */\nexport type TLEmbedShape = TLBaseShape<'embed', TLEmbedShapeProps>\n\n/** @public */\nexport type EmbedDefinition = {\n\treadonly type: string\n\treadonly title: string\n\treadonly hostnames: readonly string[]\n\treadonly minWidth?: number\n\treadonly minHeight?: number\n\treadonly width: number\n\treadonly height: number\n\treadonly doesResize: boolean\n\treadonly canUnmount: boolean\n\treadonly isAspectRatioLocked?: boolean\n\treadonly overridePermissions?: TLEmbedShapePermissions\n\treadonly instructionLink?: string\n\treadonly backgroundColor?: string\n\t// TODO: FIXME this is ugly be required because some embeds have their own border radius for example spotify embeds\n\treadonly overrideOutlineRadius?: number\n\treadonly toEmbedUrl: (url: string) => string | undefined\n\treadonly fromEmbedUrl: (url: string) => string | undefined\n}\n\nconst Versions = {\n\tGenOriginalUrlInEmbed: 1,\n\tRemoveDoesResize: 2,\n\tRemoveTmpOldUrl: 3,\n\tRemovePermissionOverrides: 4,\n} as const\n\n/** @internal */\nexport const embedShapeMigrations = defineMigrations({\n\tcurrentVersion: Versions.RemovePermissionOverrides,\n\tmigrators: {\n\t\t[Versions.GenOriginalUrlInEmbed]: {\n\t\t\t// add tmpOldUrl property\n\t\t\tup: (shape) => {\n\t\t\t\tconst url = shape.props.url\n\t\t\t\tconst host = new URL(url).host.replace('www.', '')\n\t\t\t\tlet originalUrl\n\t\t\t\tfor (const localEmbedDef of EMBED_DEFINITIONS) {\n\t\t\t\t\tif ((localEmbedDef as EmbedDefinition).hostnames.includes(host)) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\toriginalUrl = localEmbedDef.fromEmbedUrl(url)\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconsole.warn(err)\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\t...shape,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...shape.props,\n\t\t\t\t\t\ttmpOldUrl: shape.props.url,\n\t\t\t\t\t\turl: originalUrl ?? '',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\t// remove tmpOldUrl property\n\t\t\tdown: (shape) => {\n\t\t\t\tlet newUrl = shape.props.tmpOldUrl\n\t\t\t\tif (!newUrl || newUrl === '') {\n\t\t\t\t\tconst url = shape.props.url\n\t\t\t\t\tconst host = new URL(url).host.replace('www.', '')\n\n\t\t\t\t\tfor (const localEmbedDef of EMBED_DEFINITIONS) {\n\t\t\t\t\t\tif ((localEmbedDef as EmbedDefinition).hostnames.includes(host)) {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tnewUrl = localEmbedDef.toEmbedUrl(url)\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\tconsole.warn(err)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\t\t\t\tconst { tmpOldUrl, ...props } = shape.props\n\t\t\t\treturn {\n\t\t\t\t\t...shape,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...props,\n\t\t\t\t\t\turl: newUrl ?? '',\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t[Versions.RemoveDoesResize]: {\n\t\t\tup: (shape) => {\n\t\t\t\tconst { doesResize: _, ...props } = shape.props\n\t\t\t\treturn {\n\t\t\t\t\t...shape,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...props,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (shape) => {\n\t\t\t\treturn {\n\t\t\t\t\t...shape,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...shape.props,\n\t\t\t\t\t\tdoesResize: true,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t[Versions.RemoveTmpOldUrl]: {\n\t\t\tup: (shape) => {\n\t\t\t\tconst { tmpOldUrl: _, ...props } = shape.props\n\t\t\t\treturn {\n\t\t\t\t\t...shape,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...props,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (shape) => {\n\t\t\t\treturn {\n\t\t\t\t\t...shape,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...shape.props,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t\t[Versions.RemovePermissionOverrides]: {\n\t\t\tup: (shape) => {\n\t\t\t\tconst { overridePermissions: _, ...props } = shape.props\n\t\t\t\treturn {\n\t\t\t\t\t...shape,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...props,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t\tdown: (shape) => {\n\t\t\t\treturn {\n\t\t\t\t\t...shape,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...shape.props,\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t},\n\t\t},\n\t},\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}