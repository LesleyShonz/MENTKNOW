{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/shapes/geo/toolStates/Idle.ts"],
  "sourcesContent": ["import { StateNode } from '../../../tools/StateNode'\nimport { TLEventHandlers } from '../../../types/event-types'\nimport { GeoShapeUtil } from '../GeoShapeUtil'\n\nexport class Idle extends StateNode {\n\tstatic override id = 'idle'\n\n\tonPointerDown: TLEventHandlers['onPointerDown'] = (info) => {\n\t\tthis.parent.transition('pointing', info)\n\t}\n\n\tonEnter = () => {\n\t\tthis.editor.setCursor({ type: 'cross' })\n\t}\n\n\tonKeyUp: TLEventHandlers['onKeyUp'] = (info) => {\n\t\tif (info.key === 'Enter') {\n\t\t\tconst shape = this.editor.onlySelectedShape\n\t\t\tif (shape && this.editor.isShapeOfType(shape, GeoShapeUtil)) {\n\t\t\t\t// todo: ensure that this only works with the most recently created shape, not just any geo shape that happens to be selected at the time\n\t\t\t\tthis.editor.mark('editing shape')\n\t\t\t\tthis.editor.setEditingId(shape.id)\n\t\t\t\tthis.editor.setSelectedTool('select.editing_shape', {\n\t\t\t\t\t...info,\n\t\t\t\t\ttarget: 'shape',\n\t\t\t\t\tshape,\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\t}\n\n\tonCancel = () => {\n\t\tthis.editor.setSelectedTool('select')\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0B;AAE1B,0BAA6B;AAEtB,MAAM,aAAa,2BAAU;AAAA,EACnC,OAAgB,KAAK;AAAA,EAErB,gBAAkD,CAAC,SAAS;AAC3D,SAAK,OAAO,WAAW,YAAY,IAAI;AAAA,EACxC;AAAA,EAEA,UAAU,MAAM;AACf,SAAK,OAAO,UAAU,EAAE,MAAM,QAAQ,CAAC;AAAA,EACxC;AAAA,EAEA,UAAsC,CAAC,SAAS;AAC/C,QAAI,KAAK,QAAQ,SAAS;AACzB,YAAM,QAAQ,KAAK,OAAO;AAC1B,UAAI,SAAS,KAAK,OAAO,cAAc,OAAO,gCAAY,GAAG;AAE5D,aAAK,OAAO,KAAK,eAAe;AAChC,aAAK,OAAO,aAAa,MAAM,EAAE;AACjC,aAAK,OAAO,gBAAgB,wBAAwB;AAAA,UACnD,GAAG;AAAA,UACH,QAAQ;AAAA,UACR;AAAA,QACD,CAAC;AAAA,MACF;AAAA,IACD;AAAA,EACD;AAAA,EAEA,WAAW,MAAM;AAChB,SAAK,OAAO,gBAAgB,QAAQ;AAAA,EACrC;AACD;",
  "names": []
}
