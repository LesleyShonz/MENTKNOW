// src/useValue.ts
import { useMemo, useSyncExternalStore } from "react";
import { computed, react } from "signia";
function useValue() {
  const args = arguments;
  const deps = args.length === 3 ? args[2] : [args[0]];
  const name = args.length === 3 ? args[0] : `useValue(${args[0].name})`;
  const $val = useMemo(() => {
    if (args.length === 1) {
      return args[0];
    }
    return computed(name, args[1]);
  }, deps);
  const { subscribe, getSnapshot } = useMemo(() => {
    return {
      subscribe: (listen) => {
        return react(`useValue(${name})`, () => {
          $val.value;
          listen();
        });
      },
      getSnapshot: () => $val.value
    };
  }, [$val]);
  return useSyncExternalStore(subscribe, getSnapshot, getSnapshot);
}
export {
  useValue
};
//# sourceMappingURL=useValue.mjs.map
