{"ast":null,"code":"import { computed } from \"signia\";\nimport { CameraRecordType } from \"./records/TLCamera.mjs\";\nimport { TLINSTANCE_ID } from \"./records/TLInstance.mjs\";\nimport { InstancePageStateRecordType } from \"./records/TLPageState.mjs\";\nimport { TLPOINTER_ID } from \"./records/TLPointer.mjs\";\nimport { InstancePresenceRecordType } from \"./records/TLPresence.mjs\";\nvar createPresenceStateDerivation = function createPresenceStateDerivation($user, instanceId) {\n  return function (store) {\n    return computed(\"instancePresence\", function () {\n      var instance = store.get(TLINSTANCE_ID);\n      var pageState = store.get(InstancePageStateRecordType.createId(instance === null || instance === void 0 ? void 0 : instance.currentPageId));\n      var camera = store.get(CameraRecordType.createId(instance === null || instance === void 0 ? void 0 : instance.currentPageId));\n      var pointer = store.get(TLPOINTER_ID);\n      var user = $user.value;\n      if (!pageState || !instance || !camera || !pointer || !user) {\n        return null;\n      }\n      return InstancePresenceRecordType.create({\n        id: instanceId !== null && instanceId !== void 0 ? instanceId : InstancePresenceRecordType.createId(store.id),\n        selectedIds: pageState.selectedIds,\n        brush: instance.brush,\n        scribble: instance.scribble,\n        userId: user.id,\n        userName: user.name,\n        followingUserId: instance.followingUserId,\n        camera: {\n          x: camera.x,\n          y: camera.y,\n          z: camera.z\n        },\n        color: user.color,\n        currentPageId: instance.currentPageId,\n        cursor: {\n          x: pointer.x,\n          y: pointer.y,\n          rotation: instance.cursor.rotation,\n          type: instance.cursor.type\n        },\n        lastActivityTimestamp: pointer.lastActivityTimestamp,\n        screenBounds: instance.screenBounds,\n        chatMessage: instance.chatMessage\n      });\n    });\n  };\n};\nexport { createPresenceStateDerivation };","map":{"version":3,"names":["computed","CameraRecordType","TLINSTANCE_ID","InstancePageStateRecordType","TLPOINTER_ID","InstancePresenceRecordType","createPresenceStateDerivation","$user","instanceId","store","instance","get","pageState","createId","currentPageId","camera","pointer","user","value","create","id","selectedIds","brush","scribble","userId","userName","name","followingUserId","x","y","z","color","cursor","rotation","type","lastActivityTimestamp","screenBounds","chatMessage"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/tlschema/src/createPresenceStateDerivation.ts"],"sourcesContent":["import { Signal, computed } from 'signia'\nimport { TLStore } from './TLStore'\nimport { CameraRecordType } from './records/TLCamera'\nimport { TLINSTANCE_ID } from './records/TLInstance'\nimport { InstancePageStateRecordType } from './records/TLPageState'\nimport { TLPOINTER_ID } from './records/TLPointer'\nimport { InstancePresenceRecordType, TLInstancePresence } from './records/TLPresence'\n\n/** @public */\nexport const createPresenceStateDerivation =\n\t(\n\t\t$user: Signal<{ id: string; color: string; name: string }>,\n\t\tinstanceId?: TLInstancePresence['id']\n\t) =>\n\t(store: TLStore): Signal<TLInstancePresence | null> => {\n\t\treturn computed('instancePresence', () => {\n\t\t\tconst instance = store.get(TLINSTANCE_ID)\n\t\t\tconst pageState = store.get(InstancePageStateRecordType.createId(instance?.currentPageId))\n\t\t\tconst camera = store.get(CameraRecordType.createId(instance?.currentPageId))\n\t\t\tconst pointer = store.get(TLPOINTER_ID)\n\t\t\tconst user = $user.value\n\t\t\tif (!pageState || !instance || !camera || !pointer || !user) {\n\t\t\t\treturn null\n\t\t\t}\n\n\t\t\treturn InstancePresenceRecordType.create({\n\t\t\t\tid: instanceId ?? InstancePresenceRecordType.createId(store.id),\n\t\t\t\tselectedIds: pageState.selectedIds,\n\t\t\t\tbrush: instance.brush,\n\t\t\t\tscribble: instance.scribble,\n\t\t\t\tuserId: user.id,\n\t\t\t\tuserName: user.name,\n\t\t\t\tfollowingUserId: instance.followingUserId,\n\t\t\t\tcamera: {\n\t\t\t\t\tx: camera.x,\n\t\t\t\t\ty: camera.y,\n\t\t\t\t\tz: camera.z,\n\t\t\t\t},\n\t\t\t\tcolor: user.color,\n\t\t\t\tcurrentPageId: instance.currentPageId,\n\t\t\t\tcursor: {\n\t\t\t\t\tx: pointer.x,\n\t\t\t\t\ty: pointer.y,\n\t\t\t\t\trotation: instance.cursor.rotation,\n\t\t\t\t\ttype: instance.cursor.type,\n\t\t\t\t},\n\t\t\t\tlastActivityTimestamp: pointer.lastActivityTimestamp,\n\t\t\t\tscreenBounds: instance.screenBounds,\n\t\t\t\tchatMessage: instance.chatMessage,\n\t\t\t})\n\t\t})\n\t}\n"],"mappings":"AAAA,SAAiBA,QAAA,QAAgB;AAEjC,SAASC,gBAAA,QAAwB;AACjC,SAASC,aAAA,QAAqB;AAC9B,SAASC,2BAAA,QAAmC;AAC5C,SAASC,YAAA,QAAoB;AAC7B,SAASC,0BAAA,QAAsD;AAGxD,IAAMC,6BAAA,GACZ,SADYA,8BAEXC,KAAA,EACAC,UAAA;EAAA,OAED,UAACC,KAAA,EAAsD;IACtD,OAAOT,QAAA,CAAS,oBAAoB,YAAM;MACzC,IAAMU,QAAA,GAAWD,KAAA,CAAME,GAAA,CAAIT,aAAa;MACxC,IAAMU,SAAA,GAAYH,KAAA,CAAME,GAAA,CAAIR,2BAAA,CAA4BU,QAAA,CAASH,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAUI,aAAa,CAAC;MACzF,IAAMC,MAAA,GAASN,KAAA,CAAME,GAAA,CAAIV,gBAAA,CAAiBY,QAAA,CAASH,QAAA,aAAAA,QAAA,uBAAAA,QAAA,CAAUI,aAAa,CAAC;MAC3E,IAAME,OAAA,GAAUP,KAAA,CAAME,GAAA,CAAIP,YAAY;MACtC,IAAMa,IAAA,GAAOV,KAAA,CAAMW,KAAA;MACnB,IAAI,CAACN,SAAA,IAAa,CAACF,QAAA,IAAY,CAACK,MAAA,IAAU,CAACC,OAAA,IAAW,CAACC,IAAA,EAAM;QAC5D,OAAO;MACR;MAEA,OAAOZ,0BAAA,CAA2Bc,MAAA,CAAO;QACxCC,EAAA,EAAIZ,UAAA,aAAAA,UAAA,cAAAA,UAAA,GAAcH,0BAAA,CAA2BQ,QAAA,CAASJ,KAAA,CAAMW,EAAE;QAC9DC,WAAA,EAAaT,SAAA,CAAUS,WAAA;QACvBC,KAAA,EAAOZ,QAAA,CAASY,KAAA;QAChBC,QAAA,EAAUb,QAAA,CAASa,QAAA;QACnBC,MAAA,EAAQP,IAAA,CAAKG,EAAA;QACbK,QAAA,EAAUR,IAAA,CAAKS,IAAA;QACfC,eAAA,EAAiBjB,QAAA,CAASiB,eAAA;QAC1BZ,MAAA,EAAQ;UACPa,CAAA,EAAGb,MAAA,CAAOa,CAAA;UACVC,CAAA,EAAGd,MAAA,CAAOc,CAAA;UACVC,CAAA,EAAGf,MAAA,CAAOe;QACX;QACAC,KAAA,EAAOd,IAAA,CAAKc,KAAA;QACZjB,aAAA,EAAeJ,QAAA,CAASI,aAAA;QACxBkB,MAAA,EAAQ;UACPJ,CAAA,EAAGZ,OAAA,CAAQY,CAAA;UACXC,CAAA,EAAGb,OAAA,CAAQa,CAAA;UACXI,QAAA,EAAUvB,QAAA,CAASsB,MAAA,CAAOC,QAAA;UAC1BC,IAAA,EAAMxB,QAAA,CAASsB,MAAA,CAAOE;QACvB;QACAC,qBAAA,EAAuBnB,OAAA,CAAQmB,qBAAA;QAC/BC,YAAA,EAAc1B,QAAA,CAAS0B,YAAA;QACvBC,WAAA,EAAa3B,QAAA,CAAS2B;MACvB,CAAC;IACF,CAAC;EACF;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}