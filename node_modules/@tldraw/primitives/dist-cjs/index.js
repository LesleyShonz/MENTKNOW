"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var src_exports = {};
__export(src_exports, {
  Box2d: () => import_Box2d.Box2d,
  CubicSegment2d: () => import_CubicSegment2d.CubicSegment2d,
  CubicSpline2d: () => import_CubicSpline2d.CubicSpline2d,
  EASINGS: () => import_easings.EASINGS,
  EPSILON: () => import_utils.EPSILON,
  LineSegment2d: () => import_LineSegment2d.LineSegment2d,
  Matrix2d: () => import_Matrix2d.Matrix2d,
  PI: () => import_utils.PI,
  PI2: () => import_utils.PI2,
  Polyline2d: () => import_Polyline2d.Polyline2d,
  ROTATE_CORNER_TO_SELECTION_CORNER: () => import_Box2d.ROTATE_CORNER_TO_SELECTION_CORNER,
  SIN: () => import_utils.SIN,
  TAU: () => import_utils.TAU,
  Vec2d: () => import_Vec2d.Vec2d,
  angleDelta: () => import_utils.angleDelta,
  approximately: () => import_utils.approximately,
  areAnglesCompatible: () => import_utils.areAnglesCompatible,
  canolicalizeRotation: () => import_utils.canolicalizeRotation,
  clamp: () => import_utils.clamp,
  clampRadians: () => import_utils.clampRadians,
  decomposeMatrix2d: () => import_Matrix2d.decomposeMatrix2d,
  degreesToRadians: () => import_utils.degreesToRadians,
  flipSelectionHandleX: () => import_Box2d.flipSelectionHandleX,
  flipSelectionHandleY: () => import_Box2d.flipSelectionHandleY,
  getArcLength: () => import_utils.getArcLength,
  getDrawLinePathData: () => import_polygon_helpers.getDrawLinePathData,
  getHeight: () => import_utils.getHeight,
  getMaxX: () => import_utils.getMaxX,
  getMaxY: () => import_utils.getMaxY,
  getMidX: () => import_utils.getMidX,
  getMidY: () => import_utils.getMidY,
  getMinX: () => import_utils.getMinX,
  getMinY: () => import_utils.getMinY,
  getPointOnCircle: () => import_utils.getPointOnCircle,
  getPolygonVertices: () => import_utils.getPolygonVertices,
  getRoundedInkyPolygonPath: () => import_polygon_helpers.getRoundedInkyPolygonPath,
  getRoundedPolygonPoints: () => import_polygon_helpers.getRoundedPolygonPoints,
  getStarBounds: () => import_utils.getStarBounds,
  getStroke: () => import_getStroke.getStroke,
  getStrokeOutlinePoints: () => import_getStrokeOutlinePoints.getStrokeOutlinePoints,
  getStrokePoints: () => import_getStrokePoints.getStrokePoints,
  getSweep: () => import_utils.getSweep,
  getWidth: () => import_utils.getWidth,
  intersectCircleCircle: () => import_intersect.intersectCircleCircle,
  intersectCirclePolygon: () => import_intersect.intersectCirclePolygon,
  intersectCirclePolyline: () => import_intersect.intersectCirclePolyline,
  intersectLineSegmentCircle: () => import_intersect.intersectLineSegmentCircle,
  intersectLineSegmentLineSegment: () => import_intersect.intersectLineSegmentLineSegment,
  intersectLineSegmentPolygon: () => import_intersect.intersectLineSegmentPolygon,
  intersectLineSegmentPolyline: () => import_intersect.intersectLineSegmentPolyline,
  intersectPolygonBounds: () => import_intersect.intersectPolygonBounds,
  intersectPolygonPolygon: () => import_intersect.intersectPolygonPolygon,
  isAngleBetween: () => import_utils.isAngleBetween,
  isSafeFloat: () => import_utils.isSafeFloat,
  isSelectionCorner: () => import_Box2d.isSelectionCorner,
  lerpAngles: () => import_utils.lerpAngles,
  linesIntersect: () => import_intersect.linesIntersect,
  longAngleDist: () => import_utils.longAngleDist,
  perimeterOfEllipse: () => import_utils.perimeterOfEllipse,
  pointInBounds: () => import_utils.pointInBounds,
  pointInCircle: () => import_utils.pointInCircle,
  pointInEllipse: () => import_utils.pointInEllipse,
  pointInPolygon: () => import_utils.pointInPolygon,
  pointInPolyline: () => import_utils.pointInPolyline,
  pointInRect: () => import_utils.pointInRect,
  pointNearToLineSegment: () => import_utils.pointNearToLineSegment,
  pointNearToPolyline: () => import_utils.pointNearToPolyline,
  polygonsIntersect: () => import_intersect.polygonsIntersect,
  radiansToDegrees: () => import_utils.radiansToDegrees,
  rangeIntersection: () => import_utils.rangeIntersection,
  rangesOverlap: () => import_utils.rangesOverlap,
  rotateSelectionHandle: () => import_Box2d.rotateSelectionHandle,
  setStrokePointRadii: () => import_setStrokePointRadii.setStrokePointRadii,
  shortAngleDist: () => import_utils.shortAngleDist,
  simplify: () => import_utils.simplify,
  simplify2: () => import_utils.simplify2,
  snapAngle: () => import_utils.snapAngle,
  toDomPrecision: () => import_utils.toDomPrecision,
  toFixed: () => import_utils.toFixed,
  toPrecision: () => import_utils.toPrecision
});
module.exports = __toCommonJS(src_exports);
var import_Box2d = require("./lib/Box2d");
var import_CubicSegment2d = require("./lib/CubicSegment2d");
var import_CubicSpline2d = require("./lib/CubicSpline2d");
var import_LineSegment2d = require("./lib/LineSegment2d");
var import_Matrix2d = require("./lib/Matrix2d");
var import_Polyline2d = require("./lib/Polyline2d");
var import_Vec2d = require("./lib/Vec2d");
var import_easings = require("./lib/easings");
var import_getStroke = require("./lib/freehand/getStroke");
var import_getStrokeOutlinePoints = require("./lib/freehand/getStrokeOutlinePoints");
var import_getStrokePoints = require("./lib/freehand/getStrokePoints");
var import_setStrokePointRadii = require("./lib/freehand/setStrokePointRadii");
var import_intersect = require("./lib/intersect");
var import_polygon_helpers = require("./lib/polygon-helpers");
var import_utils = require("./lib/utils");
//# sourceMappingURL=index.js.map
