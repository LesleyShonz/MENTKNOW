{
  "version": 3,
  "sources": ["../../../../src/lib/components/NavigationZone/Minimap.tsx"],
  "sourcesContent": ["import {\n\tANIMATION_MEDIUM_MS,\n\tTLPointerEventInfo,\n\tTLShapeId,\n\tnormalizeWheel,\n\tuseContainer,\n\tuseEditor,\n\tuseQuickReactor,\n} from '@tldraw/editor'\nimport { Box2d, Vec2d, intersectPolygonPolygon } from '@tldraw/primitives'\nimport * as React from 'react'\nimport { track } from 'signia-react'\nimport { MinimapManager } from './MinimapManager'\n\nexport interface MinimapProps {\n\tshapeFill: string\n\tselectFill: string\n\tviewportFill: string\n}\n\nexport const Minimap = track(function Minimap({\n\tshapeFill,\n\tselectFill,\n\tviewportFill,\n}: MinimapProps) {\n\tconst editor = useEditor()\n\n\tconst rCanvas = React.useRef<HTMLCanvasElement>(null!)\n\n\tconst container = useContainer()\n\n\tconst rPointing = React.useRef(false)\n\n\tconst minimap = React.useMemo(() => new MinimapManager(editor, editor.devicePixelRatio), [editor])\n\n\tconst isDarkMode = editor.isDarkMode\n\n\tReact.useEffect(() => {\n\t\t// Must check after render\n\t\tconst raf = requestAnimationFrame(() => {\n\t\t\tconst style = getComputedStyle(container)\n\n\t\t\tminimap.colors = {\n\t\t\t\tshapeFill: style.getPropertyValue(shapeFill).trim(),\n\t\t\t\tselectFill: style.getPropertyValue(selectFill).trim(),\n\t\t\t\tviewportFill: style.getPropertyValue(viewportFill).trim(),\n\t\t\t}\n\n\t\t\tminimap.render()\n\t\t})\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(raf)\n\t\t}\n\t}, [container, selectFill, shapeFill, viewportFill, minimap, isDarkMode])\n\n\tconst onDoubleClick = React.useCallback(\n\t\t(e: React.MouseEvent<HTMLCanvasElement>) => {\n\t\t\tif (!editor.currentPageShapeIds.size) return\n\n\t\t\tconst { x, y } = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, false)\n\n\t\t\tconst clampedPoint = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, true)\n\n\t\t\tminimap.originPagePoint.setTo(clampedPoint)\n\t\t\tminimap.originPageCenter.setTo(editor.viewportPageBounds.center)\n\n\t\t\teditor.centerOnPoint(x, y, { duration: ANIMATION_MEDIUM_MS })\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onPointerDown = React.useCallback(\n\t\t(e: React.PointerEvent<HTMLCanvasElement>) => {\n\t\t\te.currentTarget.setPointerCapture(e.pointerId)\n\t\t\tif (!editor.currentPageShapeIds.size) return\n\n\t\t\trPointing.current = true\n\n\t\t\tminimap.isInViewport = false\n\n\t\t\tconst { x, y } = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, false)\n\n\t\t\tconst clampedPoint = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, true)\n\n\t\t\tconst _vpPageBounds = editor.viewportPageBounds\n\n\t\t\tminimap.originPagePoint.setTo(clampedPoint)\n\t\t\tminimap.originPageCenter.setTo(_vpPageBounds.center)\n\n\t\t\tminimap.isInViewport = _vpPageBounds.containsPoint(clampedPoint)\n\n\t\t\tif (!minimap.isInViewport) {\n\t\t\t\teditor.centerOnPoint(x, y, { duration: ANIMATION_MEDIUM_MS })\n\t\t\t}\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onPointerMove = React.useCallback(\n\t\t(e: React.PointerEvent<HTMLCanvasElement>) => {\n\t\t\tif (rPointing.current) {\n\t\t\t\tconst { x, y } = minimap.minimapScreenPointToPagePoint(\n\t\t\t\t\te.clientX,\n\t\t\t\t\te.clientY,\n\t\t\t\t\te.shiftKey,\n\t\t\t\t\ttrue\n\t\t\t\t)\n\n\t\t\t\tif (minimap.isInViewport) {\n\t\t\t\t\tconst delta = Vec2d.Sub({ x, y }, minimap.originPagePoint)\n\t\t\t\t\tconst center = Vec2d.Add(minimap.originPageCenter, delta)\n\t\t\t\t\teditor.centerOnPoint(center.x, center.y)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\teditor.centerOnPoint(x, y)\n\t\t\t}\n\n\t\t\tconst pagePoint = minimap.getPagePoint(e.clientX, e.clientY)\n\n\t\t\tconst screenPoint = editor.pageToScreen(pagePoint.x, pagePoint.y)\n\n\t\t\tconst info: TLPointerEventInfo = {\n\t\t\t\ttype: 'pointer',\n\t\t\t\ttarget: 'canvas',\n\t\t\t\tname: 'pointer_move',\n\t\t\t\t...getPointerInfo(e),\n\t\t\t\tpoint: screenPoint,\n\t\t\t\tisPen: editor.isPenMode,\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onPointerUp = React.useCallback((_e: React.PointerEvent<HTMLCanvasElement>) => {\n\t\trPointing.current = false\n\t}, [])\n\n\tconst onWheel = React.useCallback(\n\t\t(e: React.WheelEvent<HTMLCanvasElement>) => {\n\t\t\tconst offset = normalizeWheel(e)\n\n\t\t\teditor.dispatch({\n\t\t\t\ttype: 'wheel',\n\t\t\t\tname: 'wheel',\n\t\t\t\tdelta: offset,\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t})\n\t\t},\n\t\t[editor]\n\t)\n\n\t// Update the minimap's dpr when the dpr changes\n\tuseQuickReactor(\n\t\t'update dpr',\n\t\t() => {\n\t\t\tconst { devicePixelRatio } = editor\n\t\t\tminimap.setDpr(devicePixelRatio)\n\n\t\t\tconst canvas = rCanvas.current as HTMLCanvasElement\n\t\t\tconst rect = canvas.getBoundingClientRect()\n\t\t\tconst width = rect.width * devicePixelRatio\n\t\t\tconst height = rect.height * devicePixelRatio\n\n\t\t\t// These must happen in order\n\t\t\tcanvas.width = width\n\t\t\tcanvas.height = height\n\t\t\tminimap.canvasScreenBounds.set(rect.x, rect.y, width, height)\n\n\t\t\tminimap.cvs = rCanvas.current\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst presences = React.useMemo(() => {\n\t\treturn editor.store.query.records('instance_presence')\n\t}, [editor])\n\n\tuseQuickReactor(\n\t\t'minimap render when pagebounds or collaborators changes',\n\t\t() => {\n\t\t\tconst { devicePixelRatio, viewportPageBounds, allShapesCommonBounds } = editor\n\n\t\t\tdevicePixelRatio // dereference dpr so that it renders then, too\n\n\t\t\tminimap.contentPageBounds = allShapesCommonBounds\n\t\t\t\t? Box2d.Expand(allShapesCommonBounds, viewportPageBounds)\n\t\t\t\t: viewportPageBounds\n\n\t\t\tminimap.updateContentScreenBounds()\n\n\t\t\t// All shape bounds\n\n\t\t\tconst allShapeBounds = [] as (Box2d & { id: TLShapeId })[]\n\n\t\t\teditor.currentPageShapeIds.forEach((id) => {\n\t\t\t\tlet pageBounds = editor.getPageBoundsById(id)! as Box2d & { id: TLShapeId }\n\n\t\t\t\tconst pageMask = editor.getPageMaskById(id)\n\n\t\t\t\tif (pageMask) {\n\t\t\t\t\tconst intersection = intersectPolygonPolygon(pageMask, pageBounds.corners)\n\t\t\t\t\tif (!intersection) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tpageBounds = Box2d.FromPoints(intersection) as Box2d & { id: TLShapeId }\n\t\t\t\t}\n\n\t\t\t\tif (pageBounds) {\n\t\t\t\t\tpageBounds.id = id // kinda dirty but we want to include the id here\n\t\t\t\t\tallShapeBounds.push(pageBounds)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tminimap.pageBounds = allShapeBounds\n\n\t\t\t// Collaborators\n\n\t\t\tminimap.collaborators = presences.value\n\n\t\t\tminimap.render()\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\treturn (\n\t\t<div className=\"tlui-minimap\">\n\t\t\t<canvas\n\t\t\t\tref={rCanvas}\n\t\t\t\tclassName=\"tlui-minimap__canvas\"\n\t\t\t\tonDoubleClick={onDoubleClick}\n\t\t\t\tonPointerMove={onPointerMove}\n\t\t\t\tonPointerDown={onPointerDown}\n\t\t\t\tonPointerUp={onPointerUp}\n\t\t\t\tonWheel={onWheel}\n\t\t\t/>\n\t\t</div>\n\t)\n})\n\nfunction getPointerInfo(e: React.PointerEvent | PointerEvent) {\n\t;(e as any).isKilled = true\n\n\treturn {\n\t\tpoint: {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t\tz: e.pressure,\n\t\t},\n\t\tshiftKey: e.shiftKey,\n\t\taltKey: e.altKey,\n\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\tpointerId: e.pointerId,\n\t\tbutton: e.button,\n\t\tisPen: e.pointerType === 'pen',\n\t}\n}\n"],
  "mappings": "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",
  "names": ["Minimap"]
}
