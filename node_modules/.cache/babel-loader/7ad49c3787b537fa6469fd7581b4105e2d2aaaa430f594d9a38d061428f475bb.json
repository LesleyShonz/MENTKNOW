{"ast":null,"code":"var EASINGS = {\n  linear: function linear(t) {\n    return t;\n  },\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  easeOutQuad: function easeOutQuad(t) {\n    return t * (2 - t);\n  },\n  easeInOutQuad: function easeInOutQuad(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  },\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  easeOutCubic: function easeOutCubic(t) {\n    return --t * t * t + 1;\n  },\n  easeInOutCubic: function easeInOutCubic(t) {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n  },\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  easeOutQuart: function easeOutQuart(t) {\n    return 1 - --t * t * t * t;\n  },\n  easeInOutQuart: function easeInOutQuart(t) {\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n  },\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  easeOutQuint: function easeOutQuint(t) {\n    return 1 + --t * t * t * t * t;\n  },\n  easeInOutQuint: function easeInOutQuint(t) {\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n  },\n  easeInSine: function easeInSine(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  },\n  easeOutSine: function easeOutSine(t) {\n    return Math.sin(t * Math.PI / 2);\n  },\n  easeInOutSine: function easeInOutSine(t) {\n    return -(Math.cos(Math.PI * t) - 1) / 2;\n  },\n  easeInExpo: function easeInExpo(t) {\n    return t <= 0 ? 0 : Math.pow(2, 10 * t - 10);\n  },\n  easeOutExpo: function easeOutExpo(t) {\n    return t >= 1 ? 1 : 1 - Math.pow(2, -10 * t);\n  },\n  easeInOutExpo: function easeInOutExpo(t) {\n    return t <= 0 ? 0 : t >= 1 ? 1 : t < 0.5 ? Math.pow(2, 20 * t - 10) / 2 : (2 - Math.pow(2, -20 * t + 10)) / 2;\n  }\n};\nexport { EASINGS };","map":{"version":3,"names":["EASINGS","linear","t","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","Math","cos","PI","easeOutSine","sin","easeInOutSine","easeInExpo","pow","easeOutExpo","easeInOutExpo"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/primitives/src/lib/easings.ts"],"sourcesContent":["/** @public */\nexport const EASINGS = {\n\tlinear: (t: number) => t,\n\teaseInQuad: (t: number) => t * t,\n\teaseOutQuad: (t: number) => t * (2 - t),\n\teaseInOutQuad: (t: number) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),\n\teaseInCubic: (t: number) => t * t * t,\n\teaseOutCubic: (t: number) => --t * t * t + 1,\n\teaseInOutCubic: (t: number) =>\n\t\tt < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1,\n\teaseInQuart: (t: number) => t * t * t * t,\n\teaseOutQuart: (t: number) => 1 - --t * t * t * t,\n\teaseInOutQuart: (t: number) => (t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t),\n\teaseInQuint: (t: number) => t * t * t * t * t,\n\teaseOutQuint: (t: number) => 1 + --t * t * t * t * t,\n\teaseInOutQuint: (t: number) => (t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t),\n\teaseInSine: (t: number) => 1 - Math.cos((t * Math.PI) / 2),\n\teaseOutSine: (t: number) => Math.sin((t * Math.PI) / 2),\n\teaseInOutSine: (t: number) => -(Math.cos(Math.PI * t) - 1) / 2,\n\teaseInExpo: (t: number) => (t <= 0 ? 0 : Math.pow(2, 10 * t - 10)),\n\teaseOutExpo: (t: number) => (t >= 1 ? 1 : 1 - Math.pow(2, -10 * t)),\n\teaseInOutExpo: (t: number) =>\n\t\tt <= 0\n\t\t\t? 0\n\t\t\t: t >= 1\n\t\t\t? 1\n\t\t\t: t < 0.5\n\t\t\t? Math.pow(2, 20 * t - 10) / 2\n\t\t\t: (2 - Math.pow(2, -20 * t + 10)) / 2,\n} as const\n\n/** @public */\nexport type EasingType = keyof typeof EASINGS\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}