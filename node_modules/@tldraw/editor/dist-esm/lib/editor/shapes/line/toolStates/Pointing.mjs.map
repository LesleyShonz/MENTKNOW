{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/shapes/line/toolStates/Pointing.ts"],
  "sourcesContent": ["import { getIndexAbove, sortByIndex } from '@tldraw/indices'\nimport { Matrix2d, Vec2d } from '@tldraw/primitives'\nimport { TLHandle, TLLineShape, TLShapeId, createShapeId } from '@tldraw/tlschema'\nimport { last, structuredClone } from '@tldraw/utils'\nimport { StateNode } from '../../../tools/StateNode'\nimport { TLEventHandlers, TLInterruptEvent } from '../../../types/event-types'\n\nexport class Pointing extends StateNode {\n\tstatic override id = 'pointing'\n\n\tshape = {} as TLLineShape\n\n\tmarkPointId = ''\n\n\tonEnter = (info: { shapeId?: TLShapeId }) => {\n\t\tconst { inputs } = this.editor\n\t\tconst { currentPagePoint } = inputs\n\n\t\tthis.markPointId = this.editor.mark('creating')\n\n\t\tlet shapeExists = false\n\t\tif (info.shapeId) {\n\t\t\tconst shape = this.editor.getShapeById<TLLineShape>(info.shapeId)\n\t\t\tif (shape) {\n\t\t\t\tshapeExists = true\n\t\t\t\tthis.shape = shape\n\t\t\t}\n\t\t}\n\n\t\t// if user is holding shift then we are adding points to an existing line\n\t\tif (inputs.shiftKey && shapeExists) {\n\t\t\tconst handles = this.editor.getShapeUtil(this.shape).handles(this.shape)\n\n\t\t\tconst vertexHandles = handles.filter((h) => h.type === 'vertex').sort(sortByIndex)\n\t\t\tconst endHandle = vertexHandles[vertexHandles.length - 1]\n\n\t\t\tconst shapePagePoint = Matrix2d.applyToPoint(\n\t\t\t\tthis.editor.getParentTransform(this.shape)!,\n\t\t\t\tnew Vec2d(this.shape.x, this.shape.y)\n\t\t\t)\n\n\t\t\tlet nextEndHandleIndex: string, nextEndHandleId: string, nextEndHandle: TLHandle\n\n\t\t\tif (vertexHandles.length === 2 && vertexHandles[1].x === 1 && vertexHandles[1].y === 1) {\n\t\t\t\tnextEndHandleIndex = vertexHandles[1].index\n\t\t\t\tnextEndHandleId = vertexHandles[1].id\n\t\t\t\tnextEndHandle = {\n\t\t\t\t\t...vertexHandles[1],\n\t\t\t\t\tx: currentPagePoint.x - shapePagePoint.x,\n\t\t\t\t\ty: currentPagePoint.y - shapePagePoint.y,\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnextEndHandleIndex = getIndexAbove(endHandle.index)\n\t\t\t\tnextEndHandleId = 'handle:' + nextEndHandleIndex\n\t\t\t\tnextEndHandle = {\n\t\t\t\t\tx: currentPagePoint.x - shapePagePoint.x,\n\t\t\t\t\ty: currentPagePoint.y - shapePagePoint.y,\n\t\t\t\t\tindex: nextEndHandleIndex,\n\t\t\t\t\tcanBind: false,\n\t\t\t\t\ttype: 'vertex',\n\t\t\t\t\tid: nextEndHandleId,\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst nextHandles = structuredClone(this.shape.props.handles)\n\n\t\t\tnextHandles[nextEndHandle.id] = nextEndHandle\n\n\t\t\tthis.editor.updateShapes([\n\t\t\t\t{\n\t\t\t\t\tid: this.shape.id,\n\t\t\t\t\ttype: this.shape.type,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\thandles: nextHandles,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t])\n\t\t} else {\n\t\t\tconst id = createShapeId()\n\n\t\t\tthis.editor.createShapes<TLLineShape>([\n\t\t\t\t{\n\t\t\t\t\tid,\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tx: currentPagePoint.x,\n\t\t\t\t\ty: currentPagePoint.y,\n\t\t\t\t},\n\t\t\t])\n\n\t\t\tthis.editor.select(id)\n\t\t\tthis.shape = this.editor.getShapeById(id)!\n\t\t}\n\t}\n\n\tonPointerMove: TLEventHandlers['onPointerMove'] = () => {\n\t\tif (!this.shape) return\n\n\t\tif (this.editor.inputs.isDragging) {\n\t\t\tconst util = this.editor.getShapeUtil(this.shape)\n\t\t\tconst handles = util.handles?.(this.shape)\n\t\t\tif (!handles) {\n\t\t\t\tthis.editor.bailToMark('creating')\n\t\t\t\tthrow Error('No handles found')\n\t\t\t}\n\n\t\t\tthis.editor.setSelectedTool('select.dragging_handle', {\n\t\t\t\tshape: this.shape,\n\t\t\t\tisCreating: true,\n\t\t\t\thandle: last(handles)!,\n\t\t\t\tonInteractionEnd: 'line',\n\t\t\t})\n\t\t}\n\t}\n\n\toverride onPointerUp: TLEventHandlers['onPointerUp'] = () => {\n\t\tthis.complete()\n\t}\n\n\toverride onCancel: TLEventHandlers['onCancel'] = () => {\n\t\tthis.cancel()\n\t}\n\n\toverride onComplete: TLEventHandlers['onComplete'] = () => {\n\t\tthis.complete()\n\t}\n\n\toverride onInterrupt: TLInterruptEvent = () => {\n\t\tthis.parent.transition('idle', {})\n\t\tthis.editor.bailToMark('creating')\n\t\tthis.editor.snaps.clear()\n\t}\n\n\tcomplete() {\n\t\tthis.parent.transition('idle', { shapeId: this.shape.id })\n\t\tthis.editor.snaps.clear()\n\t}\n\n\tcancel() {\n\t\tthis.editor.bailToMark(this.markPointId)\n\t\tthis.parent.transition('idle', { shapeId: this.shape.id })\n\t\tthis.editor.snaps.clear()\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
