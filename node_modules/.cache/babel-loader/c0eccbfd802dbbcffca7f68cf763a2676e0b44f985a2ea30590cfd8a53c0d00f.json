{"ast":null,"code":"import _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { atom } from \"signia\";\nvar DprManager = /*#__PURE__*/function () {\n  function DprManager(editor) {\n    var _this = this;\n    _classCallCheck(this, DprManager);\n    _defineProperty(this, \"_currentMM\", void 0);\n    _defineProperty(this, \"dpr\", atom(\"devicePixelRatio\", typeof window === \"undefined\" ? 1 : window.devicePixelRatio));\n    // Update the device pixel ratio atom\n    _defineProperty(this, \"updateDevicePixelRatio\", function () {\n      _this.dpr.set(window.devicePixelRatio);\n      _this.rebind();\n    });\n    // Clear the listener\n    _defineProperty(this, \"dispose\", function () {\n      var _this$_currentMM;\n      (_this$_currentMM = _this._currentMM) === null || _this$_currentMM === void 0 || _this$_currentMM.removeEventListener(\"change\", _this.updateDevicePixelRatio);\n    });\n    this.editor = editor;\n    this.rebind();\n    this.editor.disposables.add(this.dispose);\n  }\n  _createClass(DprManager, [{\n    key: \"rebind\",\n    value:\n    // Set a listener to update the dpr when the device pixel ratio changes\n    function rebind() {\n      var _this$_currentMM2;\n      this.dispose();\n      this._currentMM = this.getMedia();\n      (_this$_currentMM2 = this._currentMM) === null || _this$_currentMM2 === void 0 || _this$_currentMM2.addEventListener(\"change\", this.updateDevicePixelRatio);\n    }\n  }, {\n    key: \"getMedia\",\n    value:\n    // Get the media query list for the device pixel ratio\n    function getMedia() {\n      if (window.matchMedia) {\n        return matchMedia(\"(resolution: \".concat(window.devicePixelRatio, \"dppx)\"));\n      }\n    }\n  }]);\n  return DprManager;\n}();\nexport { DprManager };","map":{"version":3,"names":["atom","DprManager","editor","_this","_classCallCheck","_defineProperty","window","devicePixelRatio","dpr","set","rebind","_this$_currentMM","_currentMM","removeEventListener","updateDevicePixelRatio","disposables","add","dispose","_createClass","key","value","_this$_currentMM2","getMedia","addEventListener","matchMedia","concat"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/managers/DprManager.ts"],"sourcesContent":["import { atom } from 'signia'\nimport { Editor } from '../Editor'\n\nexport class DprManager {\n\tprivate _currentMM: MediaQueryList | undefined\n\n\tconstructor(public editor: Editor) {\n\t\tthis.rebind()\n\t\t// Add this class's dispose method (cancel the listener) to the app's disposables\n\t\tthis.editor.disposables.add(this.dispose)\n\t}\n\n\t// Set a listener to update the dpr when the device pixel ratio changes\n\trebind() {\n\t\tthis.dispose()\n\t\tthis._currentMM = this.getMedia()\n\t\tthis._currentMM?.addEventListener('change', this.updateDevicePixelRatio)\n\t}\n\n\tdpr = atom<number>(\n\t\t'devicePixelRatio',\n\t\ttypeof window === 'undefined' ? 1 : window.devicePixelRatio\n\t)\n\n\t// Get the media query list for the device pixel ratio\n\tgetMedia() {\n\t\t// NOTE: This ignore is only for the test environment.\n\t\t/* @ts-ignore */\n\t\tif (window.matchMedia) {\n\t\t\treturn matchMedia(`(resolution: ${window.devicePixelRatio}dppx)`)\n\t\t}\n\t}\n\n\t// Update the device pixel ratio atom\n\tupdateDevicePixelRatio = () => {\n\t\tthis.dpr.set(window.devicePixelRatio)\n\n\t\tthis.rebind()\n\t}\n\n\t// Clear the listener\n\tdispose = () => {\n\t\tthis._currentMM?.removeEventListener('change', this.updateDevicePixelRatio)\n\t}\n}\n"],"mappings":";;;AAAA,SAASA,IAAA,QAAY;AAAA,IAGRC,UAAA;EAGZ,SAAAA,WAAmBC,MAAA,EAAgB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAH,UAAA;IAAAI,eAAA;IAAAA,eAAA,cAa7BL,IAAA,CACL,oBACA,OAAOM,MAAA,KAAW,cAAc,IAAIA,MAAA,CAAOC,gBAC5C;IASA;IAAAF,eAAA,iCAGyB,YAAM;MAC9BF,KAAA,CAAKK,GAAA,CAAIC,GAAA,CAAIH,MAAA,CAAOC,gBAAgB;MAEpCJ,KAAA,CAAKO,MAAA,CAAO;IACb;IAAA;IAAAL,eAAA,kBAGU,YAAM;MAAA,IAAAM,gBAAA;MACf,CAAAA,gBAAA,GAAAR,KAAA,CAAKS,UAAA,cAAAD,gBAAA,eAALA,gBAAA,CAAiBE,mBAAA,CAAoB,UAAUV,KAAA,CAAKW,sBAAsB;IAC3E;IArCmB,KAAAZ,MAAA,GAAAA,MAAA;IAClB,KAAKQ,MAAA,CAAO;IAEZ,KAAKR,MAAA,CAAOa,WAAA,CAAYC,GAAA,CAAI,KAAKC,OAAO;EACzC;EAAAC,YAAA,CAAAjB,UAAA;IAAAkB,GAAA;IAAAC,KAAA;IANQ;IASR,SAAAV,OAAA,EAAS;MAAA,IAAAW,iBAAA;MACR,KAAKJ,OAAA,CAAQ;MACb,KAAKL,UAAA,GAAa,KAAKU,QAAA,CAAS;MAChC,CAAAD,iBAAA,QAAKT,UAAA,cAAAS,iBAAA,eAALA,iBAAA,CAAiBE,gBAAA,CAAiB,UAAU,KAAKT,sBAAsB;IACxE;EAAA;IAAAK,GAAA;IAAAC,KAAA;IAKA;IAGA,SAAAE,SAAA,EAAW;MAGV,IAAIhB,MAAA,CAAOkB,UAAA,EAAY;QACtB,OAAOA,UAAA,iBAAAC,MAAA,CAA2BnB,MAAA,CAAOC,gBAAA,UAAuB;MACjE;IACD;EAAA;EAAA,OAAAN,UAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}