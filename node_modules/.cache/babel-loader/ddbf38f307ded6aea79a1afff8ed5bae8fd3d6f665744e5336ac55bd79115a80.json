{"ast":null,"code":"import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { toDomPrecision } from \"@tldraw/primitives\";\nimport * as React from \"react\";\nimport { ShapeFill, getShapeFillSvg, getSvgWithShapeFill } from \"../../shared/ShapeFill.mjs\";\nimport { getPerfectDashProps } from \"../../shared/getPerfectDashProps.mjs\";\nimport { getOvalPerimeter, getOvalSolidPath } from \"../helpers.mjs\";\nvar DashStyleOval = React.memo(function DashStyleOval2(_ref) {\n  var w = _ref.w,\n    h = _ref.h,\n    sw = _ref.strokeWidth,\n    dash = _ref.dash,\n    color = _ref.color,\n    fill = _ref.fill;\n  var d = getOvalSolidPath(w, h);\n  var perimeter = getOvalPerimeter(w, h);\n  var _getPerfectDashProps = getPerfectDashProps(perimeter < 64 ? perimeter * 2 : perimeter, sw, {\n      style: dash,\n      snap: 4,\n      start: \"outset\",\n      end: \"outset\",\n      closed: true\n    }),\n    strokeDasharray = _getPerfectDashProps.strokeDasharray,\n    strokeDashoffset = _getPerfectDashProps.strokeDashoffset;\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsx(ShapeFill, {\n      d: d,\n      color: color,\n      fill: fill\n    }), /* @__PURE__ */jsx(\"path\", {\n      d: d,\n      strokeWidth: sw,\n      width: toDomPrecision(w),\n      height: toDomPrecision(h),\n      fill: \"none\",\n      stroke: \"var(--palette-\".concat(color, \")\"),\n      strokeDasharray: strokeDasharray,\n      strokeDashoffset: strokeDashoffset,\n      pointerEvents: \"all\"\n    })]\n  });\n});\nfunction DashStyleOvalSvg(_ref2) {\n  var w = _ref2.w,\n    h = _ref2.h,\n    sw = _ref2.strokeWidth,\n    dash = _ref2.dash,\n    color = _ref2.color,\n    colors = _ref2.colors,\n    fill = _ref2.fill;\n  var d = getOvalSolidPath(w, h);\n  var perimeter = getOvalPerimeter(w, h);\n  var _getPerfectDashProps2 = getPerfectDashProps(perimeter < 64 ? perimeter * 2 : perimeter, sw, {\n      style: dash,\n      snap: 4,\n      closed: true\n    }),\n    strokeDasharray = _getPerfectDashProps2.strokeDasharray,\n    strokeDashoffset = _getPerfectDashProps2.strokeDashoffset;\n  var strokeElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n  strokeElement.setAttribute(\"d\", d);\n  strokeElement.setAttribute(\"stroke-width\", sw.toString());\n  strokeElement.setAttribute(\"width\", w.toString());\n  strokeElement.setAttribute(\"height\", h.toString());\n  strokeElement.setAttribute(\"fill\", \"none\");\n  strokeElement.setAttribute(\"stroke\", colors.fill[color]);\n  strokeElement.setAttribute(\"stroke-dasharray\", strokeDasharray);\n  strokeElement.setAttribute(\"stroke-dashoffset\", strokeDashoffset);\n  var fillElement = getShapeFillSvg({\n    d: d,\n    fill: fill,\n    color: color,\n    colors: colors\n  });\n  return getSvgWithShapeFill(strokeElement, fillElement);\n}\nexport { DashStyleOval, DashStyleOvalSvg };","map":{"version":3,"names":["Fragment","jsx","jsxs","toDomPrecision","React","ShapeFill","getShapeFillSvg","getSvgWithShapeFill","getPerfectDashProps","getOvalPerimeter","getOvalSolidPath","DashStyleOval","memo","DashStyleOval2","_ref","w","h","sw","strokeWidth","dash","color","fill","d","perimeter","_getPerfectDashProps","style","snap","start","end","closed","strokeDasharray","strokeDashoffset","children","width","height","stroke","concat","pointerEvents","DashStyleOvalSvg","_ref2","colors","_getPerfectDashProps2","strokeElement","document","createElementNS","setAttribute","toString","fillElement"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/geo/components/DashStyleOval.tsx"],"sourcesContent":["import { toDomPrecision } from '@tldraw/primitives'\nimport { TLGeoShape, TLShapeId } from '@tldraw/tlschema'\nimport * as React from 'react'\nimport { ShapeFill, getShapeFillSvg, getSvgWithShapeFill } from '../../shared/ShapeFill'\nimport { TLExportColors } from '../../shared/TLExportColors'\nimport { getPerfectDashProps } from '../../shared/getPerfectDashProps'\nimport { getOvalPerimeter, getOvalSolidPath } from '../helpers'\n\nexport const DashStyleOval = React.memo(function DashStyleOval({\n\tw,\n\th,\n\tstrokeWidth: sw,\n\tdash,\n\tcolor,\n\tfill,\n}: Pick<TLGeoShape['props'], 'w' | 'h' | 'dash' | 'color' | 'fill'> & {\n\tstrokeWidth: number\n\tid: TLShapeId\n}) {\n\tconst d = getOvalSolidPath(w, h)\n\tconst perimeter = getOvalPerimeter(w, h)\n\n\tconst { strokeDasharray, strokeDashoffset } = getPerfectDashProps(\n\t\tperimeter < 64 ? perimeter * 2 : perimeter,\n\t\tsw,\n\t\t{\n\t\t\tstyle: dash,\n\t\t\tsnap: 4,\n\t\t\tstart: 'outset',\n\t\t\tend: 'outset',\n\t\t\tclosed: true,\n\t\t}\n\t)\n\n\treturn (\n\t\t<>\n\t\t\t<ShapeFill d={d} color={color} fill={fill} />\n\t\t\t<path\n\t\t\t\td={d}\n\t\t\t\tstrokeWidth={sw}\n\t\t\t\twidth={toDomPrecision(w)}\n\t\t\t\theight={toDomPrecision(h)}\n\t\t\t\tfill=\"none\"\n\t\t\t\tstroke={`var(--palette-${color})`}\n\t\t\t\tstrokeDasharray={strokeDasharray}\n\t\t\t\tstrokeDashoffset={strokeDashoffset}\n\t\t\t\tpointerEvents=\"all\"\n\t\t\t/>\n\t\t</>\n\t)\n})\n\nexport function DashStyleOvalSvg({\n\tw,\n\th,\n\tstrokeWidth: sw,\n\tdash,\n\tcolor,\n\tcolors,\n\tfill,\n}: Pick<TLGeoShape['props'], 'w' | 'h' | 'dash' | 'color' | 'fill'> & {\n\tstrokeWidth: number\n\tid: TLShapeId\n\tcolors: TLExportColors\n}) {\n\tconst d = getOvalSolidPath(w, h)\n\tconst perimeter = getOvalPerimeter(w, h)\n\n\tconst { strokeDasharray, strokeDashoffset } = getPerfectDashProps(\n\t\tperimeter < 64 ? perimeter * 2 : perimeter,\n\t\tsw,\n\t\t{\n\t\t\tstyle: dash,\n\t\t\tsnap: 4,\n\t\t\tclosed: true,\n\t\t}\n\t)\n\n\tconst strokeElement = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\tstrokeElement.setAttribute('d', d)\n\tstrokeElement.setAttribute('stroke-width', sw.toString())\n\tstrokeElement.setAttribute('width', w.toString())\n\tstrokeElement.setAttribute('height', h.toString())\n\tstrokeElement.setAttribute('fill', 'none')\n\tstrokeElement.setAttribute('stroke', colors.fill[color])\n\tstrokeElement.setAttribute('stroke-dasharray', strokeDasharray)\n\tstrokeElement.setAttribute('stroke-dashoffset', strokeDashoffset)\n\n\t// Get the fill element, if any\n\tconst fillElement = getShapeFillSvg({\n\t\td,\n\t\tfill,\n\t\tcolor,\n\t\tcolors,\n\t})\n\n\treturn getSvgWithShapeFill(strokeElement, fillElement)\n}\n"],"mappings":"AAmCE,SAAAA,QAAA,EACCC,GAAA,EADDC,IAAA;AAnCF,SAASC,cAAA,QAAsB;AAE/B,YAAYC,KAAA,MAAW;AACvB,SAASC,SAAA,EAAWC,eAAA,EAAiBC,mBAAA,QAA2B;AAEhE,SAASC,mBAAA,QAA2B;AACpC,SAASC,gBAAA,EAAkBC,gBAAA,QAAwB;AAE5C,IAAMC,aAAA,GAAgBP,KAAA,CAAMQ,IAAA,CAAK,SAASC,eAAAC,IAAA,EAU9C;EAAA,IATFC,CAAA,GAAAD,IAAA,CAAAC,CAAA;IACAC,CAAA,GAAAF,IAAA,CAAAE,CAAA;IACaC,EAAA,GAAAH,IAAA,CAAbI,WAAA;IACAC,IAAA,GAAAL,IAAA,CAAAK,IAAA;IACAC,KAAA,GAAAN,IAAA,CAAAM,KAAA;IACAC,IAAA,GAAAP,IAAA,CAAAO,IAAA;EAKA,IAAMC,CAAA,GAAIZ,gBAAA,CAAiBK,CAAA,EAAGC,CAAC;EAC/B,IAAMO,SAAA,GAAYd,gBAAA,CAAiBM,CAAA,EAAGC,CAAC;EAEvC,IAAAQ,oBAAA,GAA8ChB,mBAAA,CAC7Ce,SAAA,GAAY,KAAKA,SAAA,GAAY,IAAIA,SAAA,EACjCN,EAAA,EACA;MACCQ,KAAA,EAAON,IAAA;MACPO,IAAA,EAAM;MACNC,KAAA,EAAO;MACPC,GAAA,EAAK;MACLC,MAAA,EAAQ;IACT,CACD;IAVQC,eAAA,GAAAN,oBAAA,CAAAM,eAAA;IAAiBC,gBAAA,GAAAP,oBAAA,CAAAO,gBAAA;EAYzB,OACC,eAAA7B,IAAA,CAAAF,QAAA;IACCgC,QAAA,kBAAA/B,GAAA,CAACI,SAAA;MAAUiB,CAAA,EAAAA,CAAA;MAAMF,KAAA,EAAAA,KAAA;MAAcC,IAAA,EAAAA;IAAA,CAAY,GAC3C,eAAApB,GAAA,CAAC;MACAqB,CAAA,EAAAA,CAAA;MACAJ,WAAA,EAAaD,EAAA;MACbgB,KAAA,EAAO9B,cAAA,CAAeY,CAAC;MACvBmB,MAAA,EAAQ/B,cAAA,CAAea,CAAC;MACxBK,IAAA,EAAK;MACLc,MAAA,mBAAAC,MAAA,CAAyBhB,KAAA;MACzBU,eAAA,EAAAA,eAAA;MACAC,gBAAA,EAAAA,gBAAA;MACAM,aAAA,EAAc;IAAA,CACf;EAAA,CACD;AAEF,CAAC;AAEM,SAASC,iBAAAC,KAAA,EAYb;EAAA,IAXFxB,CAAA,GAAAwB,KAAA,CAAAxB,CAAA;IACAC,CAAA,GAAAuB,KAAA,CAAAvB,CAAA;IACaC,EAAA,GAAAsB,KAAA,CAAbrB,WAAA;IACAC,IAAA,GAAAoB,KAAA,CAAApB,IAAA;IACAC,KAAA,GAAAmB,KAAA,CAAAnB,KAAA;IACAoB,MAAA,GAAAD,KAAA,CAAAC,MAAA;IACAnB,IAAA,GAAAkB,KAAA,CAAAlB,IAAA;EAMA,IAAMC,CAAA,GAAIZ,gBAAA,CAAiBK,CAAA,EAAGC,CAAC;EAC/B,IAAMO,SAAA,GAAYd,gBAAA,CAAiBM,CAAA,EAAGC,CAAC;EAEvC,IAAAyB,qBAAA,GAA8CjC,mBAAA,CAC7Ce,SAAA,GAAY,KAAKA,SAAA,GAAY,IAAIA,SAAA,EACjCN,EAAA,EACA;MACCQ,KAAA,EAAON,IAAA;MACPO,IAAA,EAAM;MACNG,MAAA,EAAQ;IACT,CACD;IARQC,eAAA,GAAAW,qBAAA,CAAAX,eAAA;IAAiBC,gBAAA,GAAAU,qBAAA,CAAAV,gBAAA;EAUzB,IAAMW,aAAA,GAAgBC,QAAA,CAASC,eAAA,CAAgB,8BAA8B,MAAM;EACnFF,aAAA,CAAcG,YAAA,CAAa,KAAKvB,CAAC;EACjCoB,aAAA,CAAcG,YAAA,CAAa,gBAAgB5B,EAAA,CAAG6B,QAAA,CAAS,CAAC;EACxDJ,aAAA,CAAcG,YAAA,CAAa,SAAS9B,CAAA,CAAE+B,QAAA,CAAS,CAAC;EAChDJ,aAAA,CAAcG,YAAA,CAAa,UAAU7B,CAAA,CAAE8B,QAAA,CAAS,CAAC;EACjDJ,aAAA,CAAcG,YAAA,CAAa,QAAQ,MAAM;EACzCH,aAAA,CAAcG,YAAA,CAAa,UAAUL,MAAA,CAAOnB,IAAA,CAAKD,KAAK,CAAC;EACvDsB,aAAA,CAAcG,YAAA,CAAa,oBAAoBf,eAAe;EAC9DY,aAAA,CAAcG,YAAA,CAAa,qBAAqBd,gBAAgB;EAGhE,IAAMgB,WAAA,GAAczC,eAAA,CAAgB;IACnCgB,CAAA,EAAAA,CAAA;IACAD,IAAA,EAAAA,IAAA;IACAD,KAAA,EAAAA,KAAA;IACAoB,MAAA,EAAAA;EACD,CAAC;EAED,OAAOjC,mBAAA,CAAoBmC,aAAA,EAAeK,WAAW;AACtD"},"metadata":{},"sourceType":"module","externalDependencies":[]}