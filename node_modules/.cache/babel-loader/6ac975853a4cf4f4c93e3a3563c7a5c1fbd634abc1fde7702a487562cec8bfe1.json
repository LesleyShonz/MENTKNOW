{"ast":null,"code":"function isDefined(value) {\n  return value !== void 0;\n}\nfunction isNonNull(value) {\n  return value !== null;\n}\nfunction isNonNullish(value) {\n  return value !== null && value !== void 0;\n}\nvar structuredClone = typeof window !== \"undefined\" && window.structuredClone ? window.structuredClone : function (i) {\n  return i ? JSON.parse(JSON.stringify(i)) : i;\n};\nexport { isDefined, isNonNull, isNonNullish, structuredClone };","map":{"version":3,"names":["isDefined","value","isNonNull","isNonNullish","structuredClone","window","i","JSON","parse","stringify"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/utils/src/lib/value.ts"],"sourcesContent":["/**\n * Get whether a value is not undefined.\n *\n * @param value - The value to check.\n * @public\n */\nexport function isDefined<T>(value: T): value is typeof value extends undefined ? never : T {\n\treturn value !== undefined\n}\n\n/**\n * Get whether a value is null\n *\n * @param value - The value to check.\n * @public\n */\nexport function isNonNull<T>(value: T): value is typeof value extends null ? never : T {\n\treturn value !== null\n}\n\n/**\n * Get whether a value is nullish (null, undefined).\n *\n * @param value - The value to check.\n * @public\n */\nexport function isNonNullish<T>(\n\tvalue: T\n): value is typeof value extends undefined ? never : typeof value extends null ? never : T {\n\treturn value !== null && value !== undefined\n}\n\n/** @public */\nexport const structuredClone =\n\ttypeof window !== 'undefined' && (window as any).structuredClone\n\t\t? (window.structuredClone as <T>(i: T) => T)\n\t\t: <T>(i: T): T => (i ? JSON.parse(JSON.stringify(i)) : i)\n"],"mappings":"AAMO,SAASA,UAAaC,KAAA,EAA+D;EAC3F,OAAOA,KAAA,KAAU;AAClB;AAQO,SAASC,UAAaD,KAAA,EAA0D;EACtF,OAAOA,KAAA,KAAU;AAClB;AAQO,SAASE,aACfF,KAAA,EAC0F;EAC1F,OAAOA,KAAA,KAAU,QAAQA,KAAA,KAAU;AACpC;AAGO,IAAMG,eAAA,GACZ,OAAOC,MAAA,KAAW,eAAgBA,MAAA,CAAeD,eAAA,GAC7CC,MAAA,CAAOD,eAAA,GACR,UAAIE,CAAA;EAAA,OAAaA,CAAA,GAAIC,IAAA,CAAKC,KAAA,CAAMD,IAAA,CAAKE,SAAA,CAAUH,CAAC,CAAC,IAAIA,CAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}