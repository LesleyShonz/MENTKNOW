{
  "version": 3,
  "sources": ["../../../../../src/lib/editor/shapes/bookmark/BookmarkShapeUtil.tsx"],
  "sourcesContent": ["import { toDomPrecision } from '@tldraw/primitives'\nimport { AssetRecordType, TLAssetId, TLBookmarkAsset, TLBookmarkShape } from '@tldraw/tlschema'\nimport { debounce, getHashForString } from '@tldraw/utils'\nimport { HTMLContainer } from '../../../components/HTMLContainer'\n\nimport { isValidUrl } from '../../../utils/data'\nimport {\n\tgetRotatedBoxShadow,\n\tstopEventPropagation,\n\ttruncateStringWithEllipsis,\n} from '../../../utils/dom'\nimport { Editor } from '../../Editor'\nimport { BaseBoxShapeUtil } from '../BaseBoxShapeUtil'\nimport { TLOnBeforeCreateHandler, TLOnBeforeUpdateHandler } from '../ShapeUtil'\nimport { HyperlinkButton } from '../shared/HyperlinkButton'\n\n/** @public */\nexport class BookmarkShapeUtil extends BaseBoxShapeUtil<TLBookmarkShape> {\n\tstatic override type = 'bookmark' as const\n\n\toverride canResize = () => false\n\n\toverride hideSelectionBoundsBg = () => true\n\toverride hideSelectionBoundsFg = () => true\n\n\toverride defaultProps(): TLBookmarkShape['props'] {\n\t\treturn {\n\t\t\turl: '',\n\t\t\tw: 300,\n\t\t\th: 320,\n\t\t\tassetId: null,\n\t\t}\n\t}\n\n\toverride component(shape: TLBookmarkShape) {\n\t\tconst asset = (\n\t\t\tshape.props.assetId ? this.editor.getAssetById(shape.props.assetId) : null\n\t\t) as TLBookmarkAsset\n\n\t\tconst pageRotation = this.editor.getPageRotation(shape)\n\n\t\tconst address = getHumanReadableAddress(shape)\n\n\t\treturn (\n\t\t\t<HTMLContainer>\n\t\t\t\t<div\n\t\t\t\t\tclassName=\"tl-bookmark__container tl-hitarea-stroke\"\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tboxShadow: getRotatedBoxShadow(pageRotation),\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<div className=\"tl-bookmark__image_container\">\n\t\t\t\t\t\t{asset?.props.image ? (\n\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\tclassName=\"tl-bookmark__image\"\n\t\t\t\t\t\t\t\tdraggable={false}\n\t\t\t\t\t\t\t\tsrc={asset?.props.image}\n\t\t\t\t\t\t\t\talt={asset?.props.title || ''}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"tl-bookmark__placeholder\" />\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<HyperlinkButton url={shape.props.url} zoomLevel={this.editor.zoomLevel} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"tl-bookmark__copy_container\">\n\t\t\t\t\t\t{asset?.props.title && (\n\t\t\t\t\t\t\t<h2 className=\"tl-bookmark__heading\">\n\t\t\t\t\t\t\t\t{truncateStringWithEllipsis(asset?.props.title || '', 54)}\n\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{asset?.props.description && (\n\t\t\t\t\t\t\t<p className=\"tl-bookmark__description\">\n\t\t\t\t\t\t\t\t{truncateStringWithEllipsis(asset?.props.description || '', 128)}\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"tl-bookmark__link\"\n\t\t\t\t\t\t\thref={shape.props.url || ''}\n\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\tonPointerDown={stopEventPropagation}\n\t\t\t\t\t\t\tonPointerUp={stopEventPropagation}\n\t\t\t\t\t\t\tonClick={stopEventPropagation}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{truncateStringWithEllipsis(address, 45)}\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</HTMLContainer>\n\t\t)\n\t}\n\n\toverride indicator(shape: TLBookmarkShape) {\n\t\treturn (\n\t\t\t<rect\n\t\t\t\twidth={toDomPrecision(shape.props.w)}\n\t\t\t\theight={toDomPrecision(shape.props.h)}\n\t\t\t\trx=\"8\"\n\t\t\t\try=\"8\"\n\t\t\t/>\n\t\t)\n\t}\n\n\toverride onBeforeCreate?: TLOnBeforeCreateHandler<TLBookmarkShape> = (shape) => {\n\t\tupdateBookmarkAssetOnUrlChange(this.editor, shape)\n\t}\n\n\toverride onBeforeUpdate?: TLOnBeforeUpdateHandler<TLBookmarkShape> = (prev, shape) => {\n\t\tif (prev.props.url !== shape.props.url) {\n\t\t\tif (!isValidUrl(shape.props.url)) {\n\t\t\t\treturn { ...shape, props: { ...shape.props, url: prev.props.url } }\n\t\t\t} else {\n\t\t\t\tupdateBookmarkAssetOnUrlChange(this.editor, shape)\n\t\t\t}\n\t\t}\n\t}\n}\n\n/** @internal */\nexport const getHumanReadableAddress = (shape: TLBookmarkShape) => {\n\ttry {\n\t\tconst url = new URL(shape.props.url)\n\t\tconst path = url.pathname.replace(/\\/*$/, '')\n\t\treturn `${url.hostname}${path}`\n\t} catch (e) {\n\t\treturn shape.props.url\n\t}\n}\n\nfunction updateBookmarkAssetOnUrlChange(editor: Editor, shape: TLBookmarkShape) {\n\tconst { url } = shape.props\n\n\t// Derive the asset id from the URL\n\tconst assetId: TLAssetId = AssetRecordType.createId(getHashForString(url))\n\n\tif (editor.getAssetById(assetId)) {\n\t\t// Existing asset for this URL?\n\t\tif (shape.props.assetId !== assetId) {\n\t\t\teditor.updateShapes<TLBookmarkShape>([\n\t\t\t\t{\n\t\t\t\t\tid: shape.id,\n\t\t\t\t\ttype: shape.type,\n\t\t\t\t\tprops: { assetId },\n\t\t\t\t},\n\t\t\t])\n\t\t}\n\t} else {\n\t\t// No asset for this URL?\n\n\t\t// First, clear out the existing asset reference\n\t\teditor.updateShapes<TLBookmarkShape>([\n\t\t\t{\n\t\t\t\tid: shape.id,\n\t\t\t\ttype: shape.type,\n\t\t\t\tprops: { assetId: null },\n\t\t\t},\n\t\t])\n\n\t\t// Then try to asyncronously create a new one\n\t\tcreateBookmarkAssetOnUrlChange(editor, shape)\n\t}\n}\n\nconst createBookmarkAssetOnUrlChange = debounce(async (editor: Editor, shape: TLBookmarkShape) => {\n\tconst { url } = shape.props\n\n\t// Create the asset using the external content manager's createAssetFromUrl method.\n\t// This may be overwritten by the user (for example, we overwrite it on tldraw.com)\n\tconst asset = await editor.externalContentManager.createAssetFromUrl(editor, url)\n\n\tif (!asset) {\n\t\t// No asset? Just leave the bookmark as a null assetId.\n\t\treturn\n\t}\n\n\teditor.batch(() => {\n\t\t// Create the new asset\n\t\teditor.createAssets([asset])\n\n\t\t// And update the shape\n\t\teditor.updateShapes<TLBookmarkShape>([\n\t\t\t{\n\t\t\t\tid: shape.id,\n\t\t\t\ttype: shape.type,\n\t\t\t\tprops: { assetId: asset.id },\n\t\t\t},\n\t\t])\n\t})\n}, 500)\n"],
  "mappings": "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",
  "names": []
}
