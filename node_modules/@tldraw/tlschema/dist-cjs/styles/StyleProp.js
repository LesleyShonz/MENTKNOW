"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var StyleProp_exports = {};
__export(StyleProp_exports, {
  EnumStyleProp: () => EnumStyleProp,
  StyleProp: () => StyleProp
});
module.exports = __toCommonJS(StyleProp_exports);
var import_validate = require("@tldraw/validate");
class StyleProp {
  constructor(id, defaultValue, type) {
    this.id = id;
    this.defaultValue = defaultValue;
    this.type = type;
  }
  static define(uniqueId, { defaultValue, type = import_validate.T.any }) {
    return new StyleProp(uniqueId, defaultValue, type);
  }
  static defineEnum(uniqueId, { defaultValue, values }) {
    return new EnumStyleProp(uniqueId, defaultValue, values);
  }
  validate(value) {
    return this.type.validate(value);
  }
}
class EnumStyleProp extends StyleProp {
  /** @internal */
  constructor(id, defaultValue, values) {
    super(id, defaultValue, import_validate.T.literalEnum(...values));
    this.values = values;
  }
}
//# sourceMappingURL=StyleProp.js.map
