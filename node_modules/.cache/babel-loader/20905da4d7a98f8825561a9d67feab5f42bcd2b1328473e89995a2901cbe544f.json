{"ast":null,"code":"import _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js';\nimport * as set from './set.js';\nimport * as array from './array.js';\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport var Observable = /*#__PURE__*/function () {\n  function Observable() {\n    _classCallCheck(this, Observable);\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create();\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  _createClass(Observable, [{\n    key: \"on\",\n    value: function on(name, f) {\n      map.setIfUndefined(this._observers, name, set.create).add(f);\n    }\n\n    /**\n     * @param {N} name\n     * @param {function} f\n     */\n  }, {\n    key: \"once\",\n    value: function once(name, f) {\n      var _this = this;\n      /**\n       * @param  {...any} args\n       */\n      var _f = function _f() {\n        _this.off(name, _f);\n        f.apply(void 0, arguments);\n      };\n      this.on(name, _f);\n    }\n\n    /**\n     * @param {N} name\n     * @param {function} f\n     */\n  }, {\n    key: \"off\",\n    value: function off(name, f) {\n      var observers = this._observers.get(name);\n      if (observers !== undefined) {\n        observers.delete(f);\n        if (observers.size === 0) {\n          this._observers.delete(name);\n        }\n      }\n    }\n\n    /**\n     * Emit a named event. All registered event listeners that listen to the\n     * specified name will receive the event.\n     *\n     * @todo This should catch exceptions\n     *\n     * @param {N} name The event name.\n     * @param {Array<any>} args The arguments that are applied to the event listener.\n     */\n  }, {\n    key: \"emit\",\n    value: function emit(name, args) {\n      // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n      return array.from((this._observers.get(name) || map.create()).values()).forEach(function (f) {\n        return f.apply(void 0, _toConsumableArray(args));\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._observers = map.create();\n    }\n  }]);\n  return Observable;\n}();","map":{"version":3,"names":["map","set","array","Observable","_classCallCheck","_observers","create","_createClass","key","value","on","name","f","setIfUndefined","add","once","_this","_f","off","apply","arguments","observers","get","undefined","delete","size","emit","args","from","values","forEach","_toConsumableArray","destroy"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/lib0/observable.js"],"sourcesContent":["/**\n * Observable class prototype.\n *\n * @module observable\n */\n\nimport * as map from './map.js'\nimport * as set from './set.js'\nimport * as array from './array.js'\n\n/**\n * Handles named events.\n *\n * @template N\n */\nexport class Observable {\n  constructor () {\n    /**\n     * Some desc.\n     * @type {Map<N, any>}\n     */\n    this._observers = map.create()\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  on (name, f) {\n    map.setIfUndefined(this._observers, name, set.create).add(f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  once (name, f) {\n    /**\n     * @param  {...any} args\n     */\n    const _f = (...args) => {\n      this.off(name, _f)\n      f(...args)\n    }\n    this.on(name, _f)\n  }\n\n  /**\n   * @param {N} name\n   * @param {function} f\n   */\n  off (name, f) {\n    const observers = this._observers.get(name)\n    if (observers !== undefined) {\n      observers.delete(f)\n      if (observers.size === 0) {\n        this._observers.delete(name)\n      }\n    }\n  }\n\n  /**\n   * Emit a named event. All registered event listeners that listen to the\n   * specified name will receive the event.\n   *\n   * @todo This should catch exceptions\n   *\n   * @param {N} name The event name.\n   * @param {Array<any>} args The arguments that are applied to the event listener.\n   */\n  emit (name, args) {\n    // copy all listeners to an array first to make sure that no event is emitted to listeners that are subscribed while the event handler is called.\n    return array.from((this._observers.get(name) || map.create()).values()).forEach(f => f(...args))\n  }\n\n  destroy () {\n    this._observers = map.create()\n  }\n}\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,GAAG,MAAM,UAAU;AAC/B,OAAO,KAAKC,GAAG,MAAM,UAAU;AAC/B,OAAO,KAAKC,KAAK,MAAM,YAAY;;AAEnC;AACA;AACA;AACA;AACA;AACA,WAAaC,UAAU;EACrB,SAAAA,WAAA,EAAe;IAAAC,eAAA,OAAAD,UAAA;IACb;AACJ;AACA;AACA;IACI,IAAI,CAACE,UAAU,GAAGL,GAAG,CAACM,MAAM,CAAC,CAAC;EAChC;;EAEA;AACF;AACA;AACA;EAHEC,YAAA,CAAAJ,UAAA;IAAAK,GAAA;IAAAC,KAAA,EAIA,SAAAC,GAAIC,IAAI,EAAEC,CAAC,EAAE;MACXZ,GAAG,CAACa,cAAc,CAAC,IAAI,CAACR,UAAU,EAAEM,IAAI,EAAEV,GAAG,CAACK,MAAM,CAAC,CAACQ,GAAG,CAACF,CAAC,CAAC;IAC9D;;IAEA;AACF;AACA;AACA;EAHE;IAAAJ,GAAA;IAAAC,KAAA,EAIA,SAAAM,KAAMJ,IAAI,EAAEC,CAAC,EAAE;MAAA,IAAAI,KAAA;MACb;AACJ;AACA;MACI,IAAMC,EAAE,GAAG,SAALA,EAAEA,CAAA,EAAgB;QACtBD,KAAI,CAACE,GAAG,CAACP,IAAI,EAAEM,EAAE,CAAC;QAClBL,CAAC,CAAAO,KAAA,SAAAC,SAAQ,CAAC;MACZ,CAAC;MACD,IAAI,CAACV,EAAE,CAACC,IAAI,EAAEM,EAAE,CAAC;IACnB;;IAEA;AACF;AACA;AACA;EAHE;IAAAT,GAAA;IAAAC,KAAA,EAIA,SAAAS,IAAKP,IAAI,EAAEC,CAAC,EAAE;MACZ,IAAMS,SAAS,GAAG,IAAI,CAAChB,UAAU,CAACiB,GAAG,CAACX,IAAI,CAAC;MAC3C,IAAIU,SAAS,KAAKE,SAAS,EAAE;QAC3BF,SAAS,CAACG,MAAM,CAACZ,CAAC,CAAC;QACnB,IAAIS,SAAS,CAACI,IAAI,KAAK,CAAC,EAAE;UACxB,IAAI,CAACpB,UAAU,CAACmB,MAAM,CAACb,IAAI,CAAC;QAC9B;MACF;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAH,GAAA;IAAAC,KAAA,EASA,SAAAiB,KAAMf,IAAI,EAAEgB,IAAI,EAAE;MAChB;MACA,OAAOzB,KAAK,CAAC0B,IAAI,CAAC,CAAC,IAAI,CAACvB,UAAU,CAACiB,GAAG,CAACX,IAAI,CAAC,IAAIX,GAAG,CAACM,MAAM,CAAC,CAAC,EAAEuB,MAAM,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,UAAAlB,CAAC;QAAA,OAAIA,CAAC,CAAAO,KAAA,SAAAY,kBAAA,CAAIJ,IAAI,EAAC;MAAA,EAAC;IAClG;EAAC;IAAAnB,GAAA;IAAAC,KAAA,EAED,SAAAuB,QAAA,EAAW;MACT,IAAI,CAAC3B,UAAU,GAAGL,GAAG,CAACM,MAAM,CAAC,CAAC;IAChC;EAAC;EAAA,OAAAH,UAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}