{"ast":null,"code":"import { jsx, jsxs } from \"react/jsx-runtime\";\nimport React from \"react\";\nimport { stopEventPropagation } from \"../../../utils/dom.mjs\";\nimport { isLegacyAlign } from \"../../../utils/legacy.mjs\";\nimport { TextHelpers } from \"../text/TextHelpers.mjs\";\nimport { LABEL_FONT_SIZES, TEXT_PROPS } from \"./default-shape-constants.mjs\";\nimport { useEditableText } from \"./useEditableText.mjs\";\nvar TextLabel = React.memo(function TextLabel2(_ref) {\n  var id = _ref.id,\n    type = _ref.type,\n    text = _ref.text,\n    size = _ref.size,\n    labelColor = _ref.labelColor,\n    font = _ref.font,\n    align = _ref.align,\n    verticalAlign = _ref.verticalAlign,\n    wrap = _ref.wrap;\n  var _useEditableText = useEditableText(id, type, text),\n    rInput = _useEditableText.rInput,\n    isEmpty = _useEditableText.isEmpty,\n    isEditing = _useEditableText.isEditing,\n    isEditableFromHover = _useEditableText.isEditableFromHover,\n    handleFocus = _useEditableText.handleFocus,\n    handleChange = _useEditableText.handleChange,\n    handleKeyDown = _useEditableText.handleKeyDown,\n    handleBlur = _useEditableText.handleBlur;\n  var isInteractive = isEditing || isEditableFromHover;\n  var finalText = TextHelpers.normalizeTextForDom(text);\n  var hasText = finalText.trim().length > 0;\n  var legacyAlign = isLegacyAlign(align);\n  return /* @__PURE__ */jsx(\"div\", {\n    className: \"tl-text-label\",\n    \"data-font\": font,\n    \"data-align\": align,\n    \"data-hastext\": !isEmpty,\n    \"data-isediting\": isEditing,\n    \"data-textwrap\": !!wrap,\n    style: hasText || isInteractive ? {\n      justifyContent: align === \"middle\" || legacyAlign ? \"center\" : align,\n      alignItems: verticalAlign === \"middle\" ? \"center\" : verticalAlign\n    } : void 0,\n    children: /* @__PURE__ */jsxs(\"div\", {\n      className: \"tl-text-label__inner\",\n      style: {\n        fontSize: LABEL_FONT_SIZES[size],\n        lineHeight: LABEL_FONT_SIZES[size] * TEXT_PROPS.lineHeight + \"px\",\n        minHeight: isEmpty ? LABEL_FONT_SIZES[size] * TEXT_PROPS.lineHeight + 32 : 0,\n        minWidth: isEmpty ? 33 : 0,\n        color: \"var(--palette-\".concat(labelColor, \")\")\n      },\n      children: [/* @__PURE__ */jsx(\"div\", {\n        className: \"tl-text tl-text-content\",\n        dir: \"ltr\",\n        children: finalText\n      }), isInteractive ?\n      // Consider replacing with content-editable\n      /* @__PURE__ */\n      jsx(\"textarea\", {\n        ref: rInput,\n        className: \"tl-text tl-text-input\",\n        name: \"text\",\n        tabIndex: -1,\n        autoComplete: \"false\",\n        autoCapitalize: \"false\",\n        autoCorrect: \"false\",\n        autoSave: \"false\",\n        autoFocus: isEditing,\n        placeholder: \"\",\n        spellCheck: \"true\",\n        wrap: \"off\",\n        dir: \"auto\",\n        datatype: \"wysiwyg\",\n        defaultValue: text,\n        onFocus: handleFocus,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        onBlur: handleBlur,\n        onContextMenu: stopEventPropagation\n      }) : null]\n    })\n  });\n});\nexport { TextLabel };","map":{"version":3,"names":["jsx","jsxs","React","stopEventPropagation","isLegacyAlign","TextHelpers","LABEL_FONT_SIZES","TEXT_PROPS","useEditableText","TextLabel","memo","TextLabel2","_ref","id","type","text","size","labelColor","font","align","verticalAlign","wrap","_useEditableText","rInput","isEmpty","isEditing","isEditableFromHover","handleFocus","handleChange","handleKeyDown","handleBlur","isInteractive","finalText","normalizeTextForDom","hasText","trim","length","legacyAlign","className","style","justifyContent","alignItems","children","fontSize","lineHeight","minHeight","minWidth","color","concat","dir","ref","name","tabIndex","autoComplete","autoCapitalize","autoCorrect","autoSave","autoFocus","placeholder","spellCheck","datatype","defaultValue","onFocus","onChange","onKeyDown","onBlur","onContextMenu"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/shared/TextLabel.tsx"],"sourcesContent":["import {\n\tTLDefaultColorStyle,\n\tTLDefaultFillStyle,\n\tTLDefaultFontStyle,\n\tTLDefaultHorizontalAlignStyle,\n\tTLDefaultSizeStyle,\n\tTLDefaultVerticalAlignStyle,\n\tTLShape,\n} from '@tldraw/tlschema'\nimport React from 'react'\nimport { stopEventPropagation } from '../../../utils/dom'\nimport { isLegacyAlign } from '../../../utils/legacy'\nimport { TextHelpers } from '../text/TextHelpers'\nimport { LABEL_FONT_SIZES, TEXT_PROPS } from './default-shape-constants'\nimport { useEditableText } from './useEditableText'\n\nexport const TextLabel = React.memo(function TextLabel<\n\tT extends Extract<TLShape, { props: { text: string } }>\n>({\n\tid,\n\ttype,\n\ttext,\n\tsize,\n\tlabelColor,\n\tfont,\n\talign,\n\tverticalAlign,\n\twrap,\n}: {\n\tid: T['id']\n\ttype: T['type']\n\tsize: TLDefaultSizeStyle\n\tfont: TLDefaultFontStyle\n\tfill?: TLDefaultFillStyle\n\talign: TLDefaultHorizontalAlignStyle\n\tverticalAlign: TLDefaultVerticalAlignStyle\n\twrap?: boolean\n\ttext: string\n\tlabelColor: TLDefaultColorStyle\n}) {\n\tconst {\n\t\trInput,\n\t\tisEmpty,\n\t\tisEditing,\n\t\tisEditableFromHover,\n\t\thandleFocus,\n\t\thandleChange,\n\t\thandleKeyDown,\n\t\thandleBlur,\n\t} = useEditableText(id, type, text)\n\n\tconst isInteractive = isEditing || isEditableFromHover\n\tconst finalText = TextHelpers.normalizeTextForDom(text)\n\tconst hasText = finalText.trim().length > 0\n\tconst legacyAlign = isLegacyAlign(align)\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"tl-text-label\"\n\t\t\tdata-font={font}\n\t\t\tdata-align={align}\n\t\t\tdata-hastext={!isEmpty}\n\t\t\tdata-isediting={isEditing}\n\t\t\tdata-textwrap={!!wrap}\n\t\t\tstyle={\n\t\t\t\thasText || isInteractive\n\t\t\t\t\t? {\n\t\t\t\t\t\t\tjustifyContent: align === 'middle' || legacyAlign ? 'center' : align,\n\t\t\t\t\t\t\talignItems: verticalAlign === 'middle' ? 'center' : verticalAlign,\n\t\t\t\t\t  }\n\t\t\t\t\t: undefined\n\t\t\t}\n\t\t>\n\t\t\t<div\n\t\t\t\tclassName=\"tl-text-label__inner\"\n\t\t\t\tstyle={{\n\t\t\t\t\tfontSize: LABEL_FONT_SIZES[size],\n\t\t\t\t\tlineHeight: LABEL_FONT_SIZES[size] * TEXT_PROPS.lineHeight + 'px',\n\t\t\t\t\tminHeight: isEmpty ? LABEL_FONT_SIZES[size] * TEXT_PROPS.lineHeight + 32 : 0,\n\t\t\t\t\tminWidth: isEmpty ? 33 : 0,\n\t\t\t\t\tcolor: `var(--palette-${labelColor})`,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<div className=\"tl-text tl-text-content\" dir=\"ltr\">\n\t\t\t\t\t{finalText}\n\t\t\t\t</div>\n\t\t\t\t{isInteractive ? (\n\t\t\t\t\t// Consider replacing with content-editable\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tref={rInput}\n\t\t\t\t\t\tclassName=\"tl-text tl-text-input\"\n\t\t\t\t\t\tname=\"text\"\n\t\t\t\t\t\ttabIndex={-1}\n\t\t\t\t\t\tautoComplete=\"false\"\n\t\t\t\t\t\tautoCapitalize=\"false\"\n\t\t\t\t\t\tautoCorrect=\"false\"\n\t\t\t\t\t\tautoSave=\"false\"\n\t\t\t\t\t\tautoFocus={isEditing}\n\t\t\t\t\t\tplaceholder=\"\"\n\t\t\t\t\t\tspellCheck=\"true\"\n\t\t\t\t\t\twrap=\"off\"\n\t\t\t\t\t\tdir=\"auto\"\n\t\t\t\t\t\tdatatype=\"wysiwyg\"\n\t\t\t\t\t\tdefaultValue={text}\n\t\t\t\t\t\tonFocus={handleFocus}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t\t\t\tonBlur={handleBlur}\n\t\t\t\t\t\tonContextMenu={stopEventPropagation}\n\t\t\t\t\t/>\n\t\t\t\t) : null}\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}