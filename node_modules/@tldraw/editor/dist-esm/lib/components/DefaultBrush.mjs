import { jsx, jsxs } from "react/jsx-runtime";
import { toDomPrecision } from "@tldraw/primitives";
import { useRef } from "react";
import { useTransform } from "../hooks/useTransform.mjs";
const DefaultBrush = ({ brush, color, opacity }) => {
  const rSvg = useRef(null);
  useTransform(rSvg, brush.x, brush.y);
  return /* @__PURE__ */ jsx("svg", { className: "tl-overlays__item", ref: rSvg, children: color ? /* @__PURE__ */ jsxs("g", { className: "tl-brush", opacity, children: [
    /* @__PURE__ */ jsx(
      "rect",
      {
        width: toDomPrecision(Math.max(1, brush.w)),
        height: toDomPrecision(Math.max(1, brush.h)),
        fill: color,
        opacity: 0.75
      }
    ),
    /* @__PURE__ */ jsx(
      "rect",
      {
        width: toDomPrecision(Math.max(1, brush.w)),
        height: toDomPrecision(Math.max(1, brush.h)),
        fill: "none",
        stroke: color,
        opacity: 0.1
      }
    )
  ] }) : /* @__PURE__ */ jsx(
    "rect",
    {
      className: "tl-brush tl-brush__default",
      width: toDomPrecision(Math.max(1, brush.w)),
      height: toDomPrecision(Math.max(1, brush.h))
    }
  ) });
};
export {
  DefaultBrush
};
//# sourceMappingURL=DefaultBrush.mjs.map
