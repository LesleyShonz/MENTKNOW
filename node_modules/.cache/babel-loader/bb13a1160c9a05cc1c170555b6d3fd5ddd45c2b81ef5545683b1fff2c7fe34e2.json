{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { assert } from \"@tldraw/utils\";\nfunction defineShape(type, opts) {\n  assert(type === opts.util.type, \"Shape type \\\"\".concat(type, \"\\\" does not match util type \\\"\").concat(opts.util.type, \"\\\"\"));\n  return _objectSpread({\n    type: type\n  }, opts);\n}\nexport { defineShape };","map":{"version":3,"names":["assert","defineShape","type","opts","util","concat","_objectSpread"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/config/defineShape.ts"],"sourcesContent":["import { Migrations } from '@tldraw/store'\nimport { ShapeProps, TLBaseShape, TLUnknownShape } from '@tldraw/tlschema'\nimport { assert } from '@tldraw/utils'\nimport { TLShapeUtilConstructor } from '../editor/shapes/ShapeUtil'\nimport { TLStateNodeConstructor } from '../editor/tools/StateNode'\n\n/** @public */\nexport type TLShapeInfo<T extends TLUnknownShape = TLUnknownShape> = {\n\ttype: T['type']\n\tutil: TLShapeUtilConstructor<T>\n\tprops?: ShapeProps<T>\n\tmigrations?: Migrations\n\ttool?: TLStateNodeConstructor\n}\n\nexport type AnyTLShapeInfo = TLShapeInfo<TLBaseShape<any, any>>\n\n/** @public */\nexport function defineShape<T extends TLUnknownShape>(\n\ttype: T['type'],\n\topts: Omit<TLShapeInfo<T>, 'type'>\n): TLShapeInfo<T> {\n\tassert(\n\t\ttype === opts.util.type,\n\t\t`Shape type \"${type}\" does not match util type \"${opts.util.type}\"`\n\t)\n\treturn { type, ...opts }\n}\n"],"mappings":";AAEA,SAASA,MAAA,QAAc;AAgBhB,SAASC,YACfC,IAAA,EACAC,IAAA,EACiB;EACjBH,MAAA,CACCE,IAAA,KAASC,IAAA,CAAKC,IAAA,CAAKF,IAAA,kBAAAG,MAAA,CACJH,IAAA,oCAAAG,MAAA,CAAmCF,IAAA,CAAKC,IAAA,CAAKF,IAAA,OAC7D;EACA,OAAAI,aAAA;IAASJ,IAAA,EAAAA;EAAA,GAASC,IAAA;AACnB"},"metadata":{},"sourceType":"module","externalDependencies":[]}