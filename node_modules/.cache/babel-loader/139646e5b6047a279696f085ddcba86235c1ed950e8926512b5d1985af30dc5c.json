{"ast":null,"code":"import { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { ArrowShapeArrowheadEndStyle, ArrowShapeArrowheadStartStyle, DefaultColorStyle, DefaultDashStyle, DefaultFillStyle, DefaultFontStyle, DefaultHorizontalAlignStyle, DefaultSizeStyle, DefaultVerticalAlignStyle, GeoShapeGeoStyle, LineShapeSplineStyle, SharedStyleMap, useEditor } from \"@tldraw/editor\";\nimport { minBy } from \"@tldraw/utils\";\nimport React, { useCallback } from \"react\";\nimport { useValue } from \"signia-react\";\nimport { useTranslation } from \"../../hooks/useTranslation/useTranslation.mjs\";\nimport { Button } from \"../primitives/Button.mjs\";\nimport { ButtonPicker } from \"../primitives/ButtonPicker.mjs\";\nimport { Slider } from \"../primitives/Slider.mjs\";\nimport { DoubleDropdownPicker } from \"./DoubleDropdownPicker.mjs\";\nimport { DropdownPicker } from \"./DropdownPicker.mjs\";\nimport { STYLES } from \"./styles.mjs\";\nvar selectToolStyles = [DefaultColorStyle, DefaultDashStyle, DefaultFillStyle, DefaultSizeStyle];\nfunction getRelevantStyles(editor) {\n  var _editor$root$current$;\n  var styles = new SharedStyleMap(editor.sharedStyles);\n  var hasShape = editor.selectedIds.length > 0 || !!((_editor$root$current$ = editor.root.current.value) !== null && _editor$root$current$ !== void 0 && _editor$root$current$.shapeType);\n  if (styles.size === 0 && editor.isIn(\"select\") && editor.selectedIds.length === 0) {\n    for (var _i = 0, _selectToolStyles = selectToolStyles; _i < _selectToolStyles.length; _i++) {\n      var style = _selectToolStyles[_i];\n      styles.applyValue(style, editor.getStyleForNextShape(style));\n    }\n  }\n  if (styles.size === 0 && !hasShape) return null;\n  return {\n    styles: styles,\n    opacity: editor.sharedOpacity\n  };\n}\nvar StylePanel = function StylePanel2(_ref) {\n  var isMobile = _ref.isMobile;\n  var editor = useEditor();\n  var relevantStyles = useValue(\"getRelevantStyles\", function () {\n    return getRelevantStyles(editor);\n  }, [editor]);\n  var handlePointerOut = useCallback(function () {\n    if (!isMobile) {\n      editor.isChangingStyle = false;\n    }\n  }, [editor, isMobile]);\n  if (!relevantStyles) return null;\n  var styles = relevantStyles.styles,\n    opacity = relevantStyles.opacity;\n  var geo = styles.get(GeoShapeGeoStyle);\n  var arrowheadEnd = styles.get(ArrowShapeArrowheadEndStyle);\n  var arrowheadStart = styles.get(ArrowShapeArrowheadStartStyle);\n  var spline = styles.get(LineShapeSplineStyle);\n  var font = styles.get(DefaultFontStyle);\n  var hideGeo = geo === void 0;\n  var hideArrowHeads = arrowheadEnd === void 0 && arrowheadStart === void 0;\n  var hideSpline = spline === void 0;\n  var hideText = font === void 0;\n  return /* @__PURE__ */jsxs(\"div\", {\n    className: \"tlui-style-panel\",\n    \"data-ismobile\": isMobile,\n    onPointerLeave: handlePointerOut,\n    children: [/* @__PURE__ */jsx(CommonStylePickerSet, {\n      styles: styles,\n      opacity: opacity\n    }), !hideText && /* @__PURE__ */jsx(TextStylePickerSet, {\n      styles: styles\n    }), !(hideGeo && hideArrowHeads && hideSpline) && /* @__PURE__ */jsxs(\"div\", {\n      className: \"tlui-style-panel__section\",\n      \"aria-label\": \"style panel styles\",\n      children: [/* @__PURE__ */jsx(GeoStylePickerSet, {\n        styles: styles\n      }), /* @__PURE__ */jsx(ArrowheadStylePickerSet, {\n        styles: styles\n      }), /* @__PURE__ */jsx(SplineStylePickerSet, {\n        styles: styles\n      })]\n    })]\n  });\n};\nfunction useStyleChangeCallback() {\n  var editor = useEditor();\n  return React.useMemo(function () {\n    return function (style, value, squashing) {\n      editor.setStyle(style, value, squashing);\n      editor.isChangingStyle = true;\n    };\n  }, [editor]);\n}\nvar tldrawSupportedOpacities = [0.1, 0.25, 0.5, 0.75, 1];\nfunction CommonStylePickerSet(_ref2) {\n  var styles = _ref2.styles,\n    opacity = _ref2.opacity;\n  var editor = useEditor();\n  var msg = useTranslation();\n  var handleValueChange = useStyleChangeCallback();\n  var handleOpacityValueChange = React.useCallback(function (value, ephemeral) {\n    var item = tldrawSupportedOpacities[value];\n    editor.setOpacity(item, ephemeral);\n    editor.isChangingStyle = true;\n  }, [editor]);\n  var color = styles.get(DefaultColorStyle);\n  var fill = styles.get(DefaultFillStyle);\n  var dash = styles.get(DefaultDashStyle);\n  var size = styles.get(DefaultSizeStyle);\n  var showPickers = fill !== void 0 || dash !== void 0 || size !== void 0;\n  var opacityIndex = opacity.type === \"mixed\" ? -1 : tldrawSupportedOpacities.indexOf(minBy(tldrawSupportedOpacities, function (supportedOpacity) {\n    return Math.abs(supportedOpacity - opacity.value);\n  }));\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsxs(\"div\", {\n      className: \"tlui-style-panel__section__common\",\n      \"aria-label\": \"style panel styles\",\n      children: [color === void 0 ? null : /* @__PURE__ */jsx(ButtonPicker, {\n        title: msg(\"style-panel.color\"),\n        uiType: \"color\",\n        style: DefaultColorStyle,\n        items: STYLES.color,\n        value: color,\n        onValueChange: handleValueChange\n      }), opacity === void 0 ? null : /* @__PURE__ */jsx(Slider, {\n        \"data-testid\": \"style.opacity\",\n        value: opacityIndex >= 0 ? opacityIndex : tldrawSupportedOpacities.length - 1,\n        label: opacity.type === \"mixed\" ? \"style-panel.mixed\" : \"opacity-style.\".concat(opacity),\n        onValueChange: handleOpacityValueChange,\n        steps: tldrawSupportedOpacities.length - 1,\n        title: msg(\"style-panel.opacity\")\n      })]\n    }), showPickers && /* @__PURE__ */jsxs(\"div\", {\n      className: \"tlui-style-panel__section\",\n      \"aria-label\": \"style panel styles\",\n      children: [fill === void 0 ? null : /* @__PURE__ */jsx(ButtonPicker, {\n        title: msg(\"style-panel.fill\"),\n        uiType: \"fill\",\n        style: DefaultFillStyle,\n        items: STYLES.fill,\n        value: fill,\n        onValueChange: handleValueChange\n      }), dash === void 0 ? null : /* @__PURE__ */jsx(ButtonPicker, {\n        title: msg(\"style-panel.dash\"),\n        uiType: \"dash\",\n        style: DefaultDashStyle,\n        items: STYLES.dash,\n        value: dash,\n        onValueChange: handleValueChange\n      }), size === void 0 ? null : /* @__PURE__ */jsx(ButtonPicker, {\n        title: msg(\"style-panel.size\"),\n        uiType: \"size\",\n        style: DefaultSizeStyle,\n        items: STYLES.size,\n        value: size,\n        onValueChange: handleValueChange\n      })]\n    })]\n  });\n}\nfunction TextStylePickerSet(_ref3) {\n  var styles = _ref3.styles;\n  var msg = useTranslation();\n  var handleValueChange = useStyleChangeCallback();\n  var font = styles.get(DefaultFontStyle);\n  var align = styles.get(DefaultHorizontalAlignStyle);\n  var verticalAlign = styles.get(DefaultVerticalAlignStyle);\n  if (font === void 0 && align === void 0) {\n    return null;\n  }\n  return /* @__PURE__ */jsxs(\"div\", {\n    className: \"tlui-style-panel__section\",\n    \"aria-label\": \"style panel text\",\n    children: [font === void 0 ? null : /* @__PURE__ */jsx(ButtonPicker, {\n      title: msg(\"style-panel.font\"),\n      uiType: \"font\",\n      style: DefaultFontStyle,\n      items: STYLES.font,\n      value: font,\n      onValueChange: handleValueChange\n    }), align === void 0 ? null : /* @__PURE__ */jsxs(\"div\", {\n      className: \"tlui-style-panel__row\",\n      children: [/* @__PURE__ */jsx(ButtonPicker, {\n        title: msg(\"style-panel.align\"),\n        uiType: \"align\",\n        style: DefaultHorizontalAlignStyle,\n        items: STYLES.horizontalAlign,\n        value: align,\n        onValueChange: handleValueChange\n      }), verticalAlign === void 0 ? /* @__PURE__ */jsx(Button, {\n        title: msg(\"style-panel.vertical-align\"),\n        \"data-testid\": \"vertical-align\",\n        icon: \"vertical-align-center\",\n        disabled: true\n      }) : /* @__PURE__ */jsx(DropdownPicker, {\n        id: \"geo-vertical-alignment\",\n        uiType: \"verticalAlign\",\n        style: DefaultVerticalAlignStyle,\n        items: STYLES.verticalAlign,\n        value: verticalAlign,\n        onValueChange: handleValueChange\n      })]\n    })]\n  });\n}\nfunction GeoStylePickerSet(_ref4) {\n  var styles = _ref4.styles;\n  var handleValueChange = useStyleChangeCallback();\n  var geo = styles.get(GeoShapeGeoStyle);\n  if (geo === void 0) {\n    return null;\n  }\n  return /* @__PURE__ */jsx(DropdownPicker, {\n    id: \"geo\",\n    label: \"style-panel.geo\",\n    uiType: \"geo\",\n    style: GeoShapeGeoStyle,\n    items: STYLES.geo,\n    value: geo,\n    onValueChange: handleValueChange\n  });\n}\nfunction SplineStylePickerSet(_ref5) {\n  var styles = _ref5.styles;\n  var handleValueChange = useStyleChangeCallback();\n  var spline = styles.get(LineShapeSplineStyle);\n  if (spline === void 0) {\n    return null;\n  }\n  return /* @__PURE__ */jsx(DropdownPicker, {\n    id: \"spline\",\n    label: \"style-panel.spline\",\n    uiType: \"spline\",\n    style: LineShapeSplineStyle,\n    items: STYLES.spline,\n    value: spline,\n    onValueChange: handleValueChange\n  });\n}\nfunction ArrowheadStylePickerSet(_ref6) {\n  var styles = _ref6.styles;\n  var handleValueChange = useStyleChangeCallback();\n  var arrowheadEnd = styles.get(ArrowShapeArrowheadEndStyle);\n  var arrowheadStart = styles.get(ArrowShapeArrowheadStartStyle);\n  if (!arrowheadEnd || !arrowheadStart) {\n    return null;\n  }\n  return /* @__PURE__ */jsx(DoubleDropdownPicker, {\n    label: \"style-panel.arrowheads\",\n    uiTypeA: \"arrowheadStart\",\n    styleA: ArrowShapeArrowheadStartStyle,\n    itemsA: STYLES.arrowheadStart,\n    valueA: arrowheadStart,\n    uiTypeB: \"arrowheadEnd\",\n    styleB: ArrowShapeArrowheadEndStyle,\n    itemsB: STYLES.arrowheadEnd,\n    valueB: arrowheadEnd,\n    onValueChange: handleValueChange,\n    labelA: \"style-panel.arrowhead-start\",\n    labelB: \"style-panel.arrowhead-end\"\n  });\n}\nexport { StylePanel };","map":{"version":3,"names":["Fragment","jsx","jsxs","ArrowShapeArrowheadEndStyle","ArrowShapeArrowheadStartStyle","DefaultColorStyle","DefaultDashStyle","DefaultFillStyle","DefaultFontStyle","DefaultHorizontalAlignStyle","DefaultSizeStyle","DefaultVerticalAlignStyle","GeoShapeGeoStyle","LineShapeSplineStyle","SharedStyleMap","useEditor","minBy","React","useCallback","useValue","useTranslation","Button","ButtonPicker","Slider","DoubleDropdownPicker","DropdownPicker","STYLES","selectToolStyles","getRelevantStyles","editor","_editor$root$current$","styles","sharedStyles","hasShape","selectedIds","length","root","current","value","shapeType","size","isIn","_i","_selectToolStyles","style","applyValue","getStyleForNextShape","opacity","sharedOpacity","StylePanel","StylePanel2","_ref","isMobile","relevantStyles","handlePointerOut","isChangingStyle","geo","get","arrowheadEnd","arrowheadStart","spline","font","hideGeo","hideArrowHeads","hideSpline","hideText","className","onPointerLeave","children","CommonStylePickerSet","TextStylePickerSet","GeoStylePickerSet","ArrowheadStylePickerSet","SplineStylePickerSet","useStyleChangeCallback","useMemo","squashing","setStyle","tldrawSupportedOpacities","_ref2","msg","handleValueChange","handleOpacityValueChange","ephemeral","item","setOpacity","color","fill","dash","showPickers","opacityIndex","type","indexOf","supportedOpacity","Math","abs","title","uiType","items","onValueChange","label","concat","steps","_ref3","align","verticalAlign","horizontalAlign","icon","disabled","id","_ref4","_ref5","_ref6","uiTypeA","styleA","itemsA","valueA","uiTypeB","styleB","itemsB","valueB","labelA","labelB"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/StylePanel/StylePanel.tsx"],"sourcesContent":["import {\n\tArrowShapeArrowheadEndStyle,\n\tArrowShapeArrowheadStartStyle,\n\tDefaultColorStyle,\n\tDefaultDashStyle,\n\tDefaultFillStyle,\n\tDefaultFontStyle,\n\tDefaultHorizontalAlignStyle,\n\tDefaultSizeStyle,\n\tDefaultVerticalAlignStyle,\n\tEditor,\n\tGeoShapeGeoStyle,\n\tLineShapeSplineStyle,\n\tReadonlySharedStyleMap,\n\tSharedStyle,\n\tSharedStyleMap,\n\tStyleProp,\n\tuseEditor,\n} from '@tldraw/editor'\nimport { minBy } from '@tldraw/utils'\nimport React, { useCallback } from 'react'\nimport { useValue } from 'signia-react'\nimport { useTranslation } from '../../hooks/useTranslation/useTranslation'\nimport { Button } from '../primitives/Button'\nimport { ButtonPicker } from '../primitives/ButtonPicker'\nimport { Slider } from '../primitives/Slider'\nimport { DoubleDropdownPicker } from './DoubleDropdownPicker'\nimport { DropdownPicker } from './DropdownPicker'\nimport { STYLES } from './styles'\n\ninterface StylePanelProps {\n\tisMobile?: boolean\n}\n\nconst selectToolStyles = [DefaultColorStyle, DefaultDashStyle, DefaultFillStyle, DefaultSizeStyle]\nfunction getRelevantStyles(\n\teditor: Editor\n): { styles: ReadonlySharedStyleMap; opacity: SharedStyle<number> } | null {\n\tconst styles = new SharedStyleMap(editor.sharedStyles)\n\tconst hasShape = editor.selectedIds.length > 0 || !!editor.root.current.value?.shapeType\n\n\tif (styles.size === 0 && editor.isIn('select') && editor.selectedIds.length === 0) {\n\t\tfor (const style of selectToolStyles) {\n\t\t\tstyles.applyValue(style, editor.getStyleForNextShape(style))\n\t\t}\n\t}\n\n\tif (styles.size === 0 && !hasShape) return null\n\treturn { styles, opacity: editor.sharedOpacity }\n}\n\n/** @internal */\nexport const StylePanel = function StylePanel({ isMobile }: StylePanelProps) {\n\tconst editor = useEditor()\n\n\tconst relevantStyles = useValue('getRelevantStyles', () => getRelevantStyles(editor), [editor])\n\n\tconst handlePointerOut = useCallback(() => {\n\t\tif (!isMobile) {\n\t\t\teditor.isChangingStyle = false\n\t\t}\n\t}, [editor, isMobile])\n\n\tif (!relevantStyles) return null\n\n\tconst { styles, opacity } = relevantStyles\n\tconst geo = styles.get(GeoShapeGeoStyle)\n\tconst arrowheadEnd = styles.get(ArrowShapeArrowheadEndStyle)\n\tconst arrowheadStart = styles.get(ArrowShapeArrowheadStartStyle)\n\tconst spline = styles.get(LineShapeSplineStyle)\n\tconst font = styles.get(DefaultFontStyle)\n\n\tconst hideGeo = geo === undefined\n\tconst hideArrowHeads = arrowheadEnd === undefined && arrowheadStart === undefined\n\tconst hideSpline = spline === undefined\n\tconst hideText = font === undefined\n\n\treturn (\n\t\t<div className=\"tlui-style-panel\" data-ismobile={isMobile} onPointerLeave={handlePointerOut}>\n\t\t\t<CommonStylePickerSet styles={styles} opacity={opacity} />\n\t\t\t{!hideText && <TextStylePickerSet styles={styles} />}\n\t\t\t{!(hideGeo && hideArrowHeads && hideSpline) && (\n\t\t\t\t<div className=\"tlui-style-panel__section\" aria-label=\"style panel styles\">\n\t\t\t\t\t<GeoStylePickerSet styles={styles} />\n\t\t\t\t\t<ArrowheadStylePickerSet styles={styles} />\n\t\t\t\t\t<SplineStylePickerSet styles={styles} />\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nfunction useStyleChangeCallback() {\n\tconst editor = useEditor()\n\n\treturn React.useMemo(() => {\n\t\treturn function <T>(style: StyleProp<T>, value: T, squashing: boolean) {\n\t\t\teditor.setStyle(style, value, squashing)\n\t\t\teditor.isChangingStyle = true\n\t\t}\n\t}, [editor])\n}\n\nconst tldrawSupportedOpacities = [0.1, 0.25, 0.5, 0.75, 1] as const\n\nfunction CommonStylePickerSet({\n\tstyles,\n\topacity,\n}: {\n\tstyles: ReadonlySharedStyleMap\n\topacity: SharedStyle<number>\n}) {\n\tconst editor = useEditor()\n\tconst msg = useTranslation()\n\n\tconst handleValueChange = useStyleChangeCallback()\n\n\tconst handleOpacityValueChange = React.useCallback(\n\t\t(value: number, ephemeral: boolean) => {\n\t\t\tconst item = tldrawSupportedOpacities[value]\n\t\t\teditor.setOpacity(item, ephemeral)\n\t\t\teditor.isChangingStyle = true\n\t\t},\n\t\t[editor]\n\t)\n\n\tconst color = styles.get(DefaultColorStyle)\n\tconst fill = styles.get(DefaultFillStyle)\n\tconst dash = styles.get(DefaultDashStyle)\n\tconst size = styles.get(DefaultSizeStyle)\n\n\tconst showPickers = fill !== undefined || dash !== undefined || size !== undefined\n\n\tconst opacityIndex =\n\t\topacity.type === 'mixed'\n\t\t\t? -1\n\t\t\t: tldrawSupportedOpacities.indexOf(\n\t\t\t\t\tminBy(tldrawSupportedOpacities, (supportedOpacity) =>\n\t\t\t\t\t\tMath.abs(supportedOpacity - opacity.value)\n\t\t\t\t\t)!\n\t\t\t  )\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"tlui-style-panel__section__common\" aria-label=\"style panel styles\">\n\t\t\t\t{color === undefined ? null : (\n\t\t\t\t\t<ButtonPicker\n\t\t\t\t\t\ttitle={msg('style-panel.color')}\n\t\t\t\t\t\tuiType=\"color\"\n\t\t\t\t\t\tstyle={DefaultColorStyle}\n\t\t\t\t\t\titems={STYLES.color}\n\t\t\t\t\t\tvalue={color}\n\t\t\t\t\t\tonValueChange={handleValueChange}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{opacity === undefined ? null : (\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tdata-testid=\"style.opacity\"\n\t\t\t\t\t\tvalue={opacityIndex >= 0 ? opacityIndex : tldrawSupportedOpacities.length - 1}\n\t\t\t\t\t\tlabel={opacity.type === 'mixed' ? 'style-panel.mixed' : `opacity-style.${opacity}`}\n\t\t\t\t\t\tonValueChange={handleOpacityValueChange}\n\t\t\t\t\t\tsteps={tldrawSupportedOpacities.length - 1}\n\t\t\t\t\t\ttitle={msg('style-panel.opacity')}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t{showPickers && (\n\t\t\t\t<div className=\"tlui-style-panel__section\" aria-label=\"style panel styles\">\n\t\t\t\t\t{fill === undefined ? null : (\n\t\t\t\t\t\t<ButtonPicker\n\t\t\t\t\t\t\ttitle={msg('style-panel.fill')}\n\t\t\t\t\t\t\tuiType=\"fill\"\n\t\t\t\t\t\t\tstyle={DefaultFillStyle}\n\t\t\t\t\t\t\titems={STYLES.fill}\n\t\t\t\t\t\t\tvalue={fill}\n\t\t\t\t\t\t\tonValueChange={handleValueChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{dash === undefined ? null : (\n\t\t\t\t\t\t<ButtonPicker\n\t\t\t\t\t\t\ttitle={msg('style-panel.dash')}\n\t\t\t\t\t\t\tuiType=\"dash\"\n\t\t\t\t\t\t\tstyle={DefaultDashStyle}\n\t\t\t\t\t\t\titems={STYLES.dash}\n\t\t\t\t\t\t\tvalue={dash}\n\t\t\t\t\t\t\tonValueChange={handleValueChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\t{size === undefined ? null : (\n\t\t\t\t\t\t<ButtonPicker\n\t\t\t\t\t\t\ttitle={msg('style-panel.size')}\n\t\t\t\t\t\t\tuiType=\"size\"\n\t\t\t\t\t\t\tstyle={DefaultSizeStyle}\n\t\t\t\t\t\t\titems={STYLES.size}\n\t\t\t\t\t\t\tvalue={size}\n\t\t\t\t\t\t\tonValueChange={handleValueChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</>\n\t)\n}\n\nfunction TextStylePickerSet({ styles }: { styles: ReadonlySharedStyleMap }) {\n\tconst msg = useTranslation()\n\tconst handleValueChange = useStyleChangeCallback()\n\n\tconst font = styles.get(DefaultFontStyle)\n\tconst align = styles.get(DefaultHorizontalAlignStyle)\n\tconst verticalAlign = styles.get(DefaultVerticalAlignStyle)\n\tif (font === undefined && align === undefined) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<div className=\"tlui-style-panel__section\" aria-label=\"style panel text\">\n\t\t\t{font === undefined ? null : (\n\t\t\t\t<ButtonPicker\n\t\t\t\t\ttitle={msg('style-panel.font')}\n\t\t\t\t\tuiType=\"font\"\n\t\t\t\t\tstyle={DefaultFontStyle}\n\t\t\t\t\titems={STYLES.font}\n\t\t\t\t\tvalue={font}\n\t\t\t\t\tonValueChange={handleValueChange}\n\t\t\t\t/>\n\t\t\t)}\n\n\t\t\t{align === undefined ? null : (\n\t\t\t\t<div className=\"tlui-style-panel__row\">\n\t\t\t\t\t<ButtonPicker\n\t\t\t\t\t\ttitle={msg('style-panel.align')}\n\t\t\t\t\t\tuiType=\"align\"\n\t\t\t\t\t\tstyle={DefaultHorizontalAlignStyle}\n\t\t\t\t\t\titems={STYLES.horizontalAlign}\n\t\t\t\t\t\tvalue={align}\n\t\t\t\t\t\tonValueChange={handleValueChange}\n\t\t\t\t\t/>\n\t\t\t\t\t{verticalAlign === undefined ? (\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttitle={msg('style-panel.vertical-align')}\n\t\t\t\t\t\t\tdata-testid=\"vertical-align\"\n\t\t\t\t\t\t\ticon=\"vertical-align-center\"\n\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<DropdownPicker\n\t\t\t\t\t\t\tid=\"geo-vertical-alignment\"\n\t\t\t\t\t\t\tuiType=\"verticalAlign\"\n\t\t\t\t\t\t\tstyle={DefaultVerticalAlignStyle}\n\t\t\t\t\t\t\titems={STYLES.verticalAlign}\n\t\t\t\t\t\t\tvalue={verticalAlign}\n\t\t\t\t\t\t\tonValueChange={handleValueChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nfunction GeoStylePickerSet({ styles }: { styles: ReadonlySharedStyleMap }) {\n\tconst handleValueChange = useStyleChangeCallback()\n\n\tconst geo = styles.get(GeoShapeGeoStyle)\n\tif (geo === undefined) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<DropdownPicker\n\t\t\tid=\"geo\"\n\t\t\tlabel={'style-panel.geo'}\n\t\t\tuiType=\"geo\"\n\t\t\tstyle={GeoShapeGeoStyle}\n\t\t\titems={STYLES.geo}\n\t\t\tvalue={geo}\n\t\t\tonValueChange={handleValueChange}\n\t\t/>\n\t)\n}\n\nfunction SplineStylePickerSet({ styles }: { styles: ReadonlySharedStyleMap }) {\n\tconst handleValueChange = useStyleChangeCallback()\n\n\tconst spline = styles.get(LineShapeSplineStyle)\n\tif (spline === undefined) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<DropdownPicker\n\t\t\tid=\"spline\"\n\t\t\tlabel={'style-panel.spline'}\n\t\t\tuiType=\"spline\"\n\t\t\tstyle={LineShapeSplineStyle}\n\t\t\titems={STYLES.spline}\n\t\t\tvalue={spline}\n\t\t\tonValueChange={handleValueChange}\n\t\t/>\n\t)\n}\n\nfunction ArrowheadStylePickerSet({ styles }: { styles: ReadonlySharedStyleMap }) {\n\tconst handleValueChange = useStyleChangeCallback()\n\n\tconst arrowheadEnd = styles.get(ArrowShapeArrowheadEndStyle)\n\tconst arrowheadStart = styles.get(ArrowShapeArrowheadStartStyle)\n\tif (!arrowheadEnd || !arrowheadStart) {\n\t\treturn null\n\t}\n\n\treturn (\n\t\t<DoubleDropdownPicker\n\t\t\tlabel={'style-panel.arrowheads'}\n\t\t\tuiTypeA=\"arrowheadStart\"\n\t\t\tstyleA={ArrowShapeArrowheadStartStyle}\n\t\t\titemsA={STYLES.arrowheadStart}\n\t\t\tvalueA={arrowheadStart}\n\t\t\tuiTypeB=\"arrowheadEnd\"\n\t\t\tstyleB={ArrowShapeArrowheadEndStyle}\n\t\t\titemsB={STYLES.arrowheadEnd}\n\t\t\tvalueB={arrowheadEnd}\n\t\t\tonValueChange={handleValueChange}\n\t\t\tlabelA=\"style-panel.arrowhead-start\"\n\t\t\tlabelB=\"style-panel.arrowhead-end\"\n\t\t/>\n\t)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}