{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nfunction CLIENT_FIXUP_SCRIPT(persistedStore) {\n  var records = Object.values(persistedStore);\n  for (var i = 0; i < records.length; i++) {\n    if (!records[i]) continue;\n    var _fixupRecord = fixupRecord(records[i]),\n      record = _fixupRecord.record;\n    if (record) {\n      persistedStore[records[i].id] = record;\n    } else {\n      delete persistedStore[records[i].id];\n    }\n  }\n  return persistedStore;\n}\nfunction fixupRecord(oldRecord) {\n  var issues = [];\n  var record = JSON.parse(JSON.stringify(oldRecord));\n  switch (record.typeName) {\n    case \"user_presence\":\n      {\n        if (!record.cursor) {\n          issues.push(\"no cursor\");\n          record.cursor = {\n            x: 0,\n            y: 0\n          };\n        }\n        if (record.cursor.x === void 0 || record.cursor.x === null) {\n          issues.push(\"no cursor x\");\n          record.cursor.x = 0;\n        }\n        if (record.cursor.y === void 0 || record.cursor.y === null) {\n          issues.push(\"no cursor y\");\n          record.cursor.y = 0;\n        }\n        break;\n      }\n    case \"asset\":\n      {\n        switch (record.type) {\n          case \"image\":\n          case \"video\":\n            {\n              if (!record.props) {\n                issues.push(\"no props in asset\");\n                record.props = {\n                  w: 100,\n                  h: 100,\n                  name: \"old_asset\",\n                  isAnimated: false,\n                  mimeType: null,\n                  src: null\n                };\n              }\n              if (!record.props.mimeType) {\n                issues.push(\"no mimeType in asset props\");\n                record.props.mimeType = \"image/png\";\n              }\n              if (!record.props.src) {\n                issues.push(\"no src in asset props\");\n                record.props.src = \"\";\n              }\n              if (record.props.isAnimated == null) {\n                issues.push(\"no isAnimated in asset props\");\n                record.props.isAnimated = false;\n              }\n              if (record.props.name === void 0) {\n                record.props.name = \"asset\";\n              }\n              if (\"width\" in record) {\n                issues.push(\"width in asset\");\n                record.props.w = record.width;\n                delete record.width;\n              }\n              if (\"width\" in record.props && typeof record.props.width === \"number\" && record.props.width) {\n                issues.push(\"no w in asset props\");\n                record.props.w = record.props.width;\n                delete record.props.width;\n              }\n              if (\"height\" in record) {\n                issues.push(\"height in asset\");\n                record.props.h = record.height;\n                delete record.height;\n              }\n              if (\"height\" in record.props && typeof record.props.height === \"number\" && record.props.height) {\n                issues.push(\"no h in asset props\");\n                record.props.h = record.props.height;\n                delete record.props.height;\n              }\n              if (!record.props.w) {\n                issues.push(\"no w in asset props\");\n                record.props.w = 100;\n              }\n              if (!record.props.h) {\n                issues.push(\"no h in asset props\");\n                record.props.h = 100;\n              }\n              if (\"src\" in record) {\n                issues.push(\"src in asset\");\n                record.props.src = record.src;\n                delete record.src;\n              }\n              if (\"name\" in record) {\n                issues.push(\"name in asset\");\n                delete record.name;\n              }\n              break;\n            }\n          case \"bookmark\":\n            if (!record.props) {\n              issues.push(\"no asset props\");\n              record.props = {\n                title: \"\",\n                description: \"\",\n                image: \"\",\n                src: \"url\" in record && typeof record.url === \"string\" ? record.url : \"\"\n              };\n            }\n            if (!record.props.title) {\n              issues.push(\"no title in bookmark asset props\");\n              record.props.title = \"\";\n            }\n            if (!record.props.description) {\n              issues.push(\"no description in bookmark asset props\");\n              record.props.description = \"\";\n            }\n            if (!record.props.image) {\n              issues.push(\"no image in bookmark asset props\");\n              record.props.image = \"\";\n            }\n            if (\"src\" in record) {\n              issues.push(\"leftover src in bookmark asset\");\n              delete record.src;\n            }\n            if (\"width\" in record) {\n              issues.push(\"leftover width in bookmark asset\");\n              delete record.width;\n            }\n            if (\"height\" in record) {\n              issues.push(\"leftover height in bookmark asset\");\n              delete record.height;\n            }\n            if (\"name\" in record) {\n              issues.push(\"leftover name in bookmark asset\");\n              delete record.name;\n            }\n            if (\"meta\" in record) {\n              delete record.meta;\n            }\n            break;\n        }\n        break;\n      }\n    case \"camera\":\n      {\n        if (record.x === void 0 || record.x === null) {\n          issues.push(\"no x in camera\");\n          record.x = 0;\n        }\n        if (record.y === void 0 || record.y === null) {\n          issues.push(\"no y in camera\");\n          record.y = 0;\n        }\n        break;\n      }\n    case \"instance\":\n      {\n        if (\"props\" in record) {\n          issues.push(\"leftover props in instance\");\n          delete record.props;\n        }\n        if (record.isToolLocked === void 0) {\n          issues.push(\"no isToolLocked in instance\");\n          record.isToolLocked = false;\n        }\n        if (record.propsForNextShape === void 0) {\n          issues.push(\"no props in instance\");\n          record.propsForNextShape = {\n            opacity: \"1\",\n            color: \"black\",\n            dash: \"draw\",\n            fill: \"none\",\n            size: \"m\",\n            icon: \"file\",\n            font: \"draw\",\n            align: \"middle\",\n            geo: \"rectangle\",\n            arrowheadStart: \"none\",\n            arrowheadEnd: \"arrow\",\n            spline: \"line\"\n          };\n        }\n        if (\"url\" in record.propsForNextShape) {\n          issues.push(\"leftover url in instance.propsForNextShape\");\n          delete record.propsForNextShape.url;\n        }\n        if (\"lang\" in record.propsForNextShape) {\n          issues.push(\"leftover lang in instance.propsForNextShape\");\n          delete record.propsForNextShape.lang;\n        }\n        if (record.exportBackground === void 0) {\n          issues.push(\"no export background in \".concat(record.typeName));\n          record.exportBackground = false;\n        }\n        if (record.brush === void 0) {\n          issues.push(\"no brush in \".concat(record.typeName));\n          record.brush = null;\n        }\n        if (record.scribble === void 0) {\n          issues.push(\"no scribble in \".concat(record.typeName));\n          record.scribble = null;\n        }\n        if (record.dialog !== void 0) {\n          issues.push(\"no dialog in \".concat(record.typeName));\n          delete record.dialog;\n        }\n        if (record.screenBounds === void 0) {\n          issues.push(\"no screen bounds in \".concat(record.typeName));\n          record.screenBounds = {\n            x: 0,\n            y: 0,\n            w: 1080,\n            h: 720\n          };\n        }\n        break;\n      }\n    case \"user\":\n      {\n        if (!record.name) {\n          issues.push(\"no name in user\");\n          record.name = \"User\";\n        }\n        if (!record.locale) {\n          issues.push(\"no locale in user\");\n          record.locale = \"en\";\n        }\n        if (\"cursor\" in record) {\n          issues.push(\"leftover cursor in user\");\n          delete record.cursor;\n        }\n        if (\"color\" in record) {\n          issues.push(\"leftover color in user\");\n          delete record.color;\n        }\n        if (\"brush\" in record) {\n          issues.push(\"leftover brush in user\");\n          delete record.brush;\n        }\n        if (\"selectedIds\" in record) {\n          issues.push(\"leftover selectedIds in user\");\n          delete record.selectedIds;\n        }\n        if (\"scribble\" in record) {\n          issues.push(\"leftover scribble in user\");\n          delete record.scribble;\n        }\n        if (\"currentPageId\" in record) {\n          issues.push(\"leftover currentPageId in user\");\n          delete record.currentPageId;\n        }\n        break;\n      }\n    case \"user_document\":\n      {\n        if (record.isMobileMode === void 0) {\n          issues.push(\"no ismobilemode in user document\");\n          record.isMobileMode = false;\n        }\n        if (record.isSnapMode === void 0) {\n          issues.push(\"no issnapmode in user document\");\n          record.isSnapMode = false;\n        }\n        break;\n      }\n    case \"shape\":\n      {\n        if (\"url\" in record) {\n          delete record.url;\n        }\n        if (record.x === void 0 || record.x === null) {\n          issues.push(\"some bug in \".concat(record.typeName, \" \").concat(record.type));\n          record.x = 0;\n        }\n        if (record.y === void 0 || record.y === null) {\n          issues.push(\"some bug in \".concat(record.typeName, \" \").concat(record.type));\n          record.y = 0;\n        }\n        if (record.type === \"image\") {\n          if (record.props.playing === void 0) {\n            issues.push(\"some bug in \".concat(record.typeName, \" \").concat(record.type));\n            record.props.playing = false;\n          }\n          if (\"loaded\" in record.props) {\n            delete record.props.loaded;\n          }\n        }\n        if (record.type === \"arrow\") {\n          if (record.props.start.type === \"binding\") {\n            if (record.props.start.normalizedAnchor.x === void 0 || record.props.start.normalizedAnchor.x === null) {\n              issues.push(\"some bug in \".concat(record.typeName, \" \").concat(record.type));\n              record.props.start.normalizedAnchor.x = 0;\n            }\n            if (record.props.start.normalizedAnchor.y === void 0 || record.props.start.normalizedAnchor.y === null) {\n              issues.push(\"some bug in \".concat(record.typeName, \" \").concat(record.type));\n              record.props.start.normalizedAnchor.y = 0;\n            }\n          } else {\n            if (record.props.start.x === void 0 || record.props.start.x === null) {\n              issues.push(\"some bug in \".concat(record.typeName, \" \").concat(record.type));\n              record.props.start.x = 0;\n            }\n            if (record.props.start.y === void 0 || record.props.start.y === null) {\n              issues.push(\"some bug in \".concat(record.typeName, \" \").concat(record.type));\n              record.props.start.y = 0;\n            }\n            if (\"boundShapeId\" in record.props.start) {\n              issues.push(\"leftover bound shape id in arrow\");\n              delete record.props.start.boundShapeId;\n            }\n            if (\"normalizedAnchor\" in record.props.start) {\n              issues.push(\"leftover normalize anchor in arrow\");\n              delete record.props.start.normalizedAnchor;\n            }\n            if (\"isExact\" in record.props.start) {\n              issues.push(\"leftover isExact in arrow\");\n              delete record.props.start.isExact;\n            }\n          }\n          if (record.props.end.type === \"binding\") {\n            if (record.props.end.normalizedAnchor.x === void 0 || record.props.end.normalizedAnchor.x === null) {\n              issues.push(\"some bug in \".concat(record.typeName, \"  \").concat(record.type));\n              record.props.end.normalizedAnchor.x = 0;\n            }\n            if (record.props.end.normalizedAnchor.y === void 0 || record.props.end.normalizedAnchor.y === null) {\n              issues.push(\"some bug in \".concat(record.typeName, \" \").concat(record.type));\n              record.props.end.normalizedAnchor.y = 0;\n            }\n          } else {\n            if (record.props.end.x === void 0 || record.props.end.x === null) {\n              issues.push(\"no x in arrow end\");\n              record.props.end.x = 0;\n            }\n            if (record.props.end.y === void 0 || record.props.end.y === null) {\n              issues.push(\"no y in arrow end\");\n              record.props.end.y = 0;\n            }\n            if (\"boundShapeId\" in record.props.end) {\n              issues.push(\"leftover bound shape id in arrow\");\n              delete record.props.end.boundShapeId;\n            }\n            if (\"normalizedAnchor\" in record.props.end) {\n              issues.push(\"leftover normalize anchor in arrow\");\n              delete record.props.end.normalizedAnchor;\n            }\n            if (\"isExact\" in record.props.end) {\n              issues.push(\"leftover isExact in arrow\");\n              delete record.props.end.isExact;\n            }\n          }\n        }\n        if (record.type === \"note\" || record.type === \"video\" || record.type === \"image\" || record.type === \"geo\" || record.type === \"bookmark\") {\n          if (record.props.url === void 0) {\n            issues.push(\"missing url prop in \".concat(record.type, \" shape\"));\n            record.props.url = \"\";\n          }\n        }\n        if (record.type === \"bookmark\") {\n          if (record.props.assetId === void 0) {\n            issues.push(\"some bug in \".concat(record.typeName, \"  \").concat(record.type));\n            record.props.assetId = null;\n          }\n          if (\"src\" in record) {\n            issues.push(\"leftover src in bookmark\");\n            delete record.src;\n          }\n        }\n        if (record.type === \"geo\") {\n          if (\"width\" in record.props) {\n            issues.push(\"leftover width in geo\");\n            delete record.props.width;\n          }\n          if (\"height\" in record.props) {\n            issues.push(\"leftover height in geo\");\n            delete record.props.height;\n          }\n        }\n        if (record.type === \"draw\") {\n          if (record.props.segments === void 0) {\n            issues.push(\"some bug in \".concat(record.typeName, \"  \").concat(record.type));\n            record.props.segments = [{\n              points: [{\n                x: 0,\n                y: 0,\n                z: 0.5\n              }, {\n                x: 1,\n                y: 1,\n                z: 0.5\n              }],\n              type: \"free\"\n            }];\n          }\n          var _iterator = _createForOfIteratorHelper(record.props.segments),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var segment = _step.value;\n              var _iterator2 = _createForOfIteratorHelper(segment.points),\n                _step2;\n              try {\n                for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n                  var point = _step2.value;\n                  if (point.x === void 0 || point.y === null) {\n                    issues.push(\"some bug in \".concat(record.typeName));\n                    point.x = 0;\n                  }\n                  if (point.y === void 0 || point.y === null) {\n                    issues.push(\"some bug in \".concat(record.typeName));\n                    point.y = 0;\n                  }\n                }\n              } catch (err) {\n                _iterator2.e(err);\n              } finally {\n                _iterator2.f();\n              }\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          if (\"points\" in record.props) {\n            delete record.props.points;\n          }\n        }\n        if (record.type === \"bookmark\") {\n          if (\"loaded\" in record.props) {\n            issues.push(\"leftover loaded in bookmark\");\n            delete record.props.loaded;\n          }\n        }\n        if (record.type === \"draw\") {\n          if (\"points\" in record.props && record.props.segments === void 0) {\n            record.props.segments = [{\n              type: \"free\",\n              points: record.props.points\n            }];\n          }\n        }\n        if (record.type === \"image\") {\n          if (record.props.w < 1) {\n            record.props.w = 1;\n            issues.push(\"zero w image in \".concat(record.typeName));\n          }\n          if (record.props.h < 1) {\n            record.props.h = 1;\n            issues.push(\"zero h image in \".concat(record.typeName));\n          }\n        }\n        if (record.type === \"embed\") {\n          if (\"loaded\" in record.props) {\n            issues.push(\"leftover loaded in embed\");\n            delete record.props.loaded;\n          }\n        }\n        break;\n      }\n    case void 0:\n      {\n        record = null;\n      }\n  }\n  return {\n    record: record,\n    issues: issues\n  };\n}\nexport { CLIENT_FIXUP_SCRIPT, fixupRecord };","map":{"version":3,"names":["CLIENT_FIXUP_SCRIPT","persistedStore","records","Object","values","i","length","_fixupRecord","fixupRecord","record","id","oldRecord","issues","JSON","parse","stringify","typeName","cursor","push","x","y","type","props","w","h","name","isAnimated","mimeType","src","width","height","title","description","image","url","meta","isToolLocked","propsForNextShape","opacity","color","dash","fill","size","icon","font","align","geo","arrowheadStart","arrowheadEnd","spline","lang","exportBackground","concat","brush","scribble","dialog","screenBounds","locale","selectedIds","currentPageId","isMobileMode","isSnapMode","playing","loaded","start","normalizedAnchor","boundShapeId","isExact","end","assetId","segments","points","z","_iterator","_createForOfIteratorHelper","_step","s","n","done","segment","value","_iterator2","_step2","point","err","e","f"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/tlschema/src/fixup.ts"],"sourcesContent":["import { StoreSnapshot } from '@tldraw/store'\nimport { Vec2dModel } from './misc/geometry-types'\nimport { TLRecord } from './records/TLRecord'\n\n/** @internal */\nexport function CLIENT_FIXUP_SCRIPT(persistedStore: StoreSnapshot<TLRecord>) {\n\tconst records = Object.values(persistedStore)\n\n\tfor (let i = 0; i < records.length; i++) {\n\t\tif (!records[i]) continue\n\n\t\tconst { record } = fixupRecord(records[i])\n\n\t\tif (record) {\n\t\t\tpersistedStore[records[i].id] = record\n\t\t} else {\n\t\t\tdelete persistedStore[records[i].id]\n\t\t}\n\t}\n\n\treturn persistedStore\n}\n\n/** @internal */\nexport function fixupRecord(oldRecord: TLRecord) {\n\tconst issues: string[] = []\n\n\tlet record = JSON.parse(JSON.stringify(oldRecord))\n\n\tswitch (record.typeName) {\n\t\tcase 'user_presence': {\n\t\t\tif (!record.cursor) {\n\t\t\t\tissues.push('no cursor')\n\t\t\t\trecord.cursor = { x: 0, y: 0 }\n\t\t\t}\n\n\t\t\tif (record.cursor.x === undefined || record.cursor.x === null) {\n\t\t\t\tissues.push('no cursor x')\n\t\t\t\trecord.cursor.x = 0\n\t\t\t}\n\t\t\tif (record.cursor.y === undefined || record.cursor.y === null) {\n\t\t\t\tissues.push('no cursor y')\n\t\t\t\trecord.cursor.y = 0\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\n\t\tcase 'asset': {\n\t\t\tswitch (record.type) {\n\t\t\t\tcase 'image':\n\t\t\t\tcase 'video': {\n\t\t\t\t\tif (!record.props) {\n\t\t\t\t\t\tissues.push('no props in asset')\n\t\t\t\t\t\trecord.props = {\n\t\t\t\t\t\t\tw: 100,\n\t\t\t\t\t\t\th: 100,\n\t\t\t\t\t\t\tname: 'old_asset',\n\t\t\t\t\t\t\tisAnimated: false,\n\t\t\t\t\t\t\tmimeType: null,\n\t\t\t\t\t\t\tsrc: null,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!record.props.mimeType) {\n\t\t\t\t\t\tissues.push('no mimeType in asset props')\n\t\t\t\t\t\trecord.props.mimeType = 'image/png'\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!record.props.src) {\n\t\t\t\t\t\tissues.push('no src in asset props')\n\t\t\t\t\t\trecord.props.src = ''\n\t\t\t\t\t}\n\n\t\t\t\t\tif (record.props.isAnimated == null) {\n\t\t\t\t\t\tissues.push('no isAnimated in asset props')\n\t\t\t\t\t\trecord.props.isAnimated = false\n\t\t\t\t\t}\n\n\t\t\t\t\tif (record.props.name === undefined) {\n\t\t\t\t\t\trecord.props.name = 'asset'\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('width' in record) {\n\t\t\t\t\t\tissues.push('width in asset')\n\t\t\t\t\t\trecord.props.w = record.width\n\t\t\t\t\t\tdelete record.width\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\t'width' in record.props &&\n\t\t\t\t\t\ttypeof record.props.width === 'number' &&\n\t\t\t\t\t\trecord.props.width\n\t\t\t\t\t) {\n\t\t\t\t\t\tissues.push('no w in asset props')\n\t\t\t\t\t\trecord.props.w = record.props.width\n\t\t\t\t\t\tdelete record.props.width\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('height' in record) {\n\t\t\t\t\t\tissues.push('height in asset')\n\t\t\t\t\t\trecord.props.h = record.height\n\t\t\t\t\t\tdelete record.height\n\t\t\t\t\t}\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t'height' in record.props &&\n\t\t\t\t\t\ttypeof record.props.height === 'number' &&\n\t\t\t\t\t\trecord.props.height\n\t\t\t\t\t) {\n\t\t\t\t\t\tissues.push('no h in asset props')\n\t\t\t\t\t\trecord.props.h = record.props.height\n\t\t\t\t\t\tdelete record.props.height\n\t\t\t\t\t}\n\t\t\t\t\tif (!record.props.w) {\n\t\t\t\t\t\tissues.push('no w in asset props')\n\t\t\t\t\t\trecord.props.w = 100\n\t\t\t\t\t}\n\t\t\t\t\tif (!record.props.h) {\n\t\t\t\t\t\tissues.push('no h in asset props')\n\t\t\t\t\t\trecord.props.h = 100\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('src' in record) {\n\t\t\t\t\t\tissues.push('src in asset')\n\t\t\t\t\t\trecord.props.src = record.src\n\t\t\t\t\t\tdelete record.src\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('name' in record) {\n\t\t\t\t\t\tissues.push('name in asset')\n\t\t\t\t\t\tdelete record.name\n\t\t\t\t\t}\n\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t\tcase 'bookmark':\n\t\t\t\t\tif (!record.props) {\n\t\t\t\t\t\tissues.push('no asset props')\n\t\t\t\t\t\trecord.props = {\n\t\t\t\t\t\t\ttitle: '',\n\t\t\t\t\t\t\tdescription: '',\n\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\tsrc: 'url' in record && typeof record.url === 'string' ? record.url : '',\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!record.props.title) {\n\t\t\t\t\t\tissues.push('no title in bookmark asset props')\n\t\t\t\t\t\trecord.props.title = ''\n\t\t\t\t\t}\n\t\t\t\t\tif (!record.props.description) {\n\t\t\t\t\t\tissues.push('no description in bookmark asset props')\n\t\t\t\t\t\trecord.props.description = ''\n\t\t\t\t\t}\n\t\t\t\t\tif (!record.props.image) {\n\t\t\t\t\t\tissues.push('no image in bookmark asset props')\n\t\t\t\t\t\trecord.props.image = ''\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('src' in record) {\n\t\t\t\t\t\tissues.push('leftover src in bookmark asset')\n\t\t\t\t\t\tdelete record.src\n\t\t\t\t\t}\n\t\t\t\t\tif ('width' in record) {\n\t\t\t\t\t\tissues.push('leftover width in bookmark asset')\n\t\t\t\t\t\tdelete record.width\n\t\t\t\t\t}\n\t\t\t\t\tif ('height' in record) {\n\t\t\t\t\t\tissues.push('leftover height in bookmark asset')\n\t\t\t\t\t\tdelete record.height\n\t\t\t\t\t}\n\t\t\t\t\tif ('name' in record) {\n\t\t\t\t\t\tissues.push('leftover name in bookmark asset')\n\t\t\t\t\t\tdelete record.name\n\t\t\t\t\t}\n\n\t\t\t\t\tif ('meta' in record) {\n\t\t\t\t\t\tdelete record.meta\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'camera': {\n\t\t\tif (record.x === undefined || record.x === null) {\n\t\t\t\tissues.push('no x in camera')\n\t\t\t\trecord.x = 0\n\t\t\t}\n\t\t\tif (record.y === undefined || record.y === null) {\n\t\t\t\tissues.push('no y in camera')\n\t\t\t\trecord.y = 0\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'instance': {\n\t\t\tif ('props' in record) {\n\t\t\t\tissues.push('leftover props in instance')\n\t\t\t\tdelete record.props\n\t\t\t}\n\n\t\t\tif (record.isToolLocked === undefined) {\n\t\t\t\tissues.push('no isToolLocked in instance')\n\t\t\t\trecord.isToolLocked = false\n\t\t\t}\n\n\t\t\tif (record.propsForNextShape === undefined) {\n\t\t\t\tissues.push('no props in instance')\n\t\t\t\trecord.propsForNextShape = {\n\t\t\t\t\topacity: '1',\n\t\t\t\t\tcolor: 'black',\n\t\t\t\t\tdash: 'draw',\n\t\t\t\t\tfill: 'none',\n\t\t\t\t\tsize: 'm',\n\t\t\t\t\ticon: 'file',\n\t\t\t\t\tfont: 'draw',\n\t\t\t\t\talign: 'middle',\n\t\t\t\t\tgeo: 'rectangle',\n\t\t\t\t\tarrowheadStart: 'none',\n\t\t\t\t\tarrowheadEnd: 'arrow',\n\t\t\t\t\tspline: 'line',\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ('url' in record.propsForNextShape) {\n\t\t\t\tissues.push('leftover url in instance.propsForNextShape')\n\t\t\t\tdelete record.propsForNextShape.url\n\t\t\t}\n\n\t\t\tif ('lang' in record.propsForNextShape) {\n\t\t\t\tissues.push('leftover lang in instance.propsForNextShape')\n\t\t\t\tdelete record.propsForNextShape.lang\n\t\t\t}\n\n\t\t\tif (record.exportBackground === undefined) {\n\t\t\t\tissues.push(`no export background in ${record.typeName}`)\n\t\t\t\trecord.exportBackground = false\n\t\t\t}\n\t\t\tif (record.brush === undefined) {\n\t\t\t\tissues.push(`no brush in ${record.typeName}`)\n\t\t\t\trecord.brush = null\n\t\t\t}\n\t\t\tif (record.scribble === undefined) {\n\t\t\t\tissues.push(`no scribble in ${record.typeName}`)\n\t\t\t\trecord.scribble = null\n\t\t\t}\n\n\t\t\tif (record.dialog !== undefined) {\n\t\t\t\tissues.push(`no dialog in ${record.typeName}`)\n\t\t\t\tdelete record.dialog\n\t\t\t}\n\n\t\t\tif (record.screenBounds === undefined) {\n\t\t\t\tissues.push(`no screen bounds in ${record.typeName}`)\n\t\t\t\trecord.screenBounds = { x: 0, y: 0, w: 1080, h: 720 }\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 'user': {\n\t\t\tif (!record.name) {\n\t\t\t\tissues.push(`no name in user`)\n\t\t\t\trecord.name = 'User'\n\t\t\t}\n\t\t\tif (!record.locale) {\n\t\t\t\tissues.push(`no locale in user`)\n\t\t\t\trecord.locale = 'en'\n\t\t\t}\n\t\t\tif ('cursor' in record) {\n\t\t\t\tissues.push('leftover cursor in user')\n\t\t\t\tdelete record.cursor\n\t\t\t}\n\t\t\tif ('color' in record) {\n\t\t\t\tissues.push('leftover color in user')\n\t\t\t\tdelete record.color\n\t\t\t}\n\t\t\tif ('brush' in record) {\n\t\t\t\tissues.push('leftover brush in user')\n\t\t\t\tdelete record.brush\n\t\t\t}\n\t\t\tif ('selectedIds' in record) {\n\t\t\t\tissues.push('leftover selectedIds in user')\n\t\t\t\tdelete record.selectedIds\n\t\t\t}\n\t\t\tif ('scribble' in record) {\n\t\t\t\tissues.push('leftover scribble in user')\n\t\t\t\tdelete record.scribble\n\t\t\t}\n\t\t\tif ('currentPageId' in record) {\n\t\t\t\tissues.push('leftover currentPageId in user')\n\t\t\t\tdelete record.currentPageId\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'user_document': {\n\t\t\tif (record.isMobileMode === undefined) {\n\t\t\t\tissues.push(`no ismobilemode in user document`)\n\t\t\t\trecord.isMobileMode = false\n\t\t\t}\n\n\t\t\tif (record.isSnapMode === undefined) {\n\t\t\t\tissues.push(`no issnapmode in user document`)\n\t\t\t\trecord.isSnapMode = false\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'shape': {\n\t\t\tif ('url' in record) {\n\t\t\t\tdelete record.url\n\t\t\t}\n\n\t\t\tif (record.x === undefined || record.x === null) {\n\t\t\t\tissues.push(`some bug in ${record.typeName} ${record.type}`)\n\t\t\t\trecord.x = 0\n\t\t\t}\n\t\t\tif (record.y === undefined || record.y === null) {\n\t\t\t\tissues.push(`some bug in ${record.typeName} ${record.type}`)\n\t\t\t\trecord.y = 0\n\t\t\t}\n\n\t\t\tif (record.type === 'image') {\n\t\t\t\tif (record.props.playing === undefined) {\n\t\t\t\t\tissues.push(`some bug in ${record.typeName} ${record.type}`)\n\t\t\t\t\trecord.props.playing = false\n\t\t\t\t}\n\n\t\t\t\tif ('loaded' in record.props) {\n\t\t\t\t\tdelete record.props.loaded\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (record.type === 'arrow') {\n\t\t\t\tif (record.props.start.type === 'binding') {\n\t\t\t\t\tif (\n\t\t\t\t\t\trecord.props.start.normalizedAnchor.x === undefined ||\n\t\t\t\t\t\trecord.props.start.normalizedAnchor.x === null\n\t\t\t\t\t) {\n\t\t\t\t\t\tissues.push(`some bug in ${record.typeName} ${record.type}`)\n\t\t\t\t\t\trecord.props.start.normalizedAnchor.x = 0\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\trecord.props.start.normalizedAnchor.y === undefined ||\n\t\t\t\t\t\trecord.props.start.normalizedAnchor.y === null\n\t\t\t\t\t) {\n\t\t\t\t\t\tissues.push(`some bug in ${record.typeName} ${record.type}`)\n\t\t\t\t\t\trecord.props.start.normalizedAnchor.y = 0\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (record.props.start.x === undefined || record.props.start.x === null) {\n\t\t\t\t\t\tissues.push(`some bug in ${record.typeName} ${record.type}`)\n\t\t\t\t\t\trecord.props.start.x = 0\n\t\t\t\t\t}\n\t\t\t\t\tif (record.props.start.y === undefined || record.props.start.y === null) {\n\t\t\t\t\t\tissues.push(`some bug in ${record.typeName} ${record.type}`)\n\t\t\t\t\t\trecord.props.start.y = 0\n\t\t\t\t\t}\n\t\t\t\t\tif ('boundShapeId' in record.props.start) {\n\t\t\t\t\t\tissues.push(`leftover bound shape id in arrow`)\n\t\t\t\t\t\tdelete record.props.start.boundShapeId\n\t\t\t\t\t}\n\t\t\t\t\tif ('normalizedAnchor' in record.props.start) {\n\t\t\t\t\t\tissues.push(`leftover normalize anchor in arrow`)\n\t\t\t\t\t\tdelete record.props.start.normalizedAnchor\n\t\t\t\t\t}\n\t\t\t\t\tif ('isExact' in record.props.start) {\n\t\t\t\t\t\tissues.push(`leftover isExact in arrow`)\n\t\t\t\t\t\tdelete record.props.start.isExact\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (record.props.end.type === 'binding') {\n\t\t\t\t\tif (\n\t\t\t\t\t\trecord.props.end.normalizedAnchor.x === undefined ||\n\t\t\t\t\t\trecord.props.end.normalizedAnchor.x === null\n\t\t\t\t\t) {\n\t\t\t\t\t\tissues.push(`some bug in ${record.typeName}  ${record.type}`)\n\t\t\t\t\t\trecord.props.end.normalizedAnchor.x = 0\n\t\t\t\t\t}\n\t\t\t\t\tif (\n\t\t\t\t\t\trecord.props.end.normalizedAnchor.y === undefined ||\n\t\t\t\t\t\trecord.props.end.normalizedAnchor.y === null\n\t\t\t\t\t) {\n\t\t\t\t\t\tissues.push(`some bug in ${record.typeName} ${record.type}`)\n\t\t\t\t\t\trecord.props.end.normalizedAnchor.y = 0\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (record.props.end.x === undefined || record.props.end.x === null) {\n\t\t\t\t\t\tissues.push(`no x in arrow end`)\n\t\t\t\t\t\trecord.props.end.x = 0\n\t\t\t\t\t}\n\t\t\t\t\tif (record.props.end.y === undefined || record.props.end.y === null) {\n\t\t\t\t\t\tissues.push(`no y in arrow end`)\n\t\t\t\t\t\trecord.props.end.y = 0\n\t\t\t\t\t}\n\t\t\t\t\tif ('boundShapeId' in record.props.end) {\n\t\t\t\t\t\tissues.push(`leftover bound shape id in arrow`)\n\t\t\t\t\t\tdelete record.props.end.boundShapeId\n\t\t\t\t\t}\n\t\t\t\t\tif ('normalizedAnchor' in record.props.end) {\n\t\t\t\t\t\tissues.push(`leftover normalize anchor in arrow`)\n\t\t\t\t\t\tdelete record.props.end.normalizedAnchor\n\t\t\t\t\t}\n\t\t\t\t\tif ('isExact' in record.props.end) {\n\t\t\t\t\t\tissues.push(`leftover isExact in arrow`)\n\t\t\t\t\t\tdelete record.props.end.isExact\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\trecord.type === 'note' ||\n\t\t\t\trecord.type === 'video' ||\n\t\t\t\trecord.type === 'image' ||\n\t\t\t\trecord.type === 'geo' ||\n\t\t\t\trecord.type === 'bookmark'\n\t\t\t) {\n\t\t\t\tif (record.props.url === undefined) {\n\t\t\t\t\tissues.push(`missing url prop in ${record.type} shape`)\n\t\t\t\t\trecord.props.url = ''\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (record.type === 'bookmark') {\n\t\t\t\tif (record.props.assetId === undefined) {\n\t\t\t\t\tissues.push(`some bug in ${record.typeName}  ${record.type}`)\n\t\t\t\t\trecord.props.assetId = null\n\t\t\t\t}\n\n\t\t\t\tif ('src' in record) {\n\t\t\t\t\tissues.push(`leftover src in bookmark`)\n\t\t\t\t\tdelete record.src\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (record.type === 'geo') {\n\t\t\t\tif ('width' in record.props) {\n\t\t\t\t\tissues.push(`leftover width in geo`)\n\t\t\t\t\tdelete record.props.width\n\t\t\t\t}\n\t\t\t\tif ('height' in record.props) {\n\t\t\t\t\tissues.push(`leftover height in geo`)\n\t\t\t\t\tdelete record.props.height\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (record.type === 'draw') {\n\t\t\t\tif (record.props.segments === undefined) {\n\t\t\t\t\tissues.push(`some bug in ${record.typeName}  ${record.type}`)\n\t\t\t\t\trecord.props.segments = [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpoints: [\n\t\t\t\t\t\t\t\t{ x: 0, y: 0, z: 0.5 },\n\t\t\t\t\t\t\t\t{ x: 1, y: 1, z: 0.5 },\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttype: 'free',\n\t\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t\tfor (const segment of record.props.segments) {\n\t\t\t\t\tfor (const point of segment.points) {\n\t\t\t\t\t\tif (point.x === undefined || point.y === null) {\n\t\t\t\t\t\t\tissues.push(`some bug in ${record.typeName}`)\n\t\t\t\t\t\t\tpoint.x = 0\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (point.y === undefined || point.y === null) {\n\t\t\t\t\t\t\tissues.push(`some bug in ${record.typeName}`)\n\t\t\t\t\t\t\tpoint.y = 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ('points' in record.props) {\n\t\t\t\t\tdelete record.props.points\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (record.type === 'bookmark') {\n\t\t\t\tif ('loaded' in record.props) {\n\t\t\t\t\tissues.push('leftover loaded in bookmark')\n\t\t\t\t\tdelete record.props.loaded\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (record.type === 'draw') {\n\t\t\t\tif ('points' in record.props && record.props.segments === undefined) {\n\t\t\t\t\trecord.props.segments = [{ type: 'free', points: record.props.points as Vec2dModel[] }]\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (record.type === 'image') {\n\t\t\t\tif (record.props.w < 1) {\n\t\t\t\t\trecord.props.w = 1\n\t\t\t\t\tissues.push(`zero w image in ${record.typeName}`)\n\t\t\t\t}\n\t\t\t\tif (record.props.h < 1) {\n\t\t\t\t\trecord.props.h = 1\n\t\t\t\t\tissues.push(`zero h image in ${record.typeName}`)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (record.type === 'embed') {\n\t\t\t\tif ('loaded' in record.props) {\n\t\t\t\t\tissues.push('leftover loaded in embed')\n\t\t\t\t\tdelete record.props.loaded\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase undefined: {\n\t\t\trecord = null\n\t\t}\n\t}\n\n\t// Assign the new record into the store\n\treturn { record, issues }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}