{"ast":null,"code":"import _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n// src/provider.ts\nimport * as bc from \"lib0/broadcastchannel\";\nimport * as time from \"lib0/time\";\nimport * as encoding from \"lib0/encoding\";\nimport * as decoding from \"lib0/decoding\";\nimport * as syncProtocol from \"y-protocols/sync\";\nimport * as authProtocol from \"y-protocols/auth\";\nimport * as awarenessProtocol from \"y-protocols/awareness\";\nimport { Observable } from \"lib0/observable\";\nimport * as math from \"lib0/math\";\nimport * as url from \"lib0/url\";\nvar messageSync = 0;\nvar messageQueryAwareness = 3;\nvar messageAwareness = 1;\nvar messageAuth = 2;\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\nvar messageHandlers = [];\nmessageHandlers[messageSync] = function (encoder, decoder, provider, emitSynced, _messageType) {\n  encoding.writeVarUint(encoder, messageSync);\n  var syncMessageType = syncProtocol.readSyncMessage(decoder, encoder, provider.doc, provider);\n  if (emitSynced && syncMessageType === syncProtocol.messageYjsSyncStep2 && !provider.synced) {\n    provider.synced = true;\n  }\n};\nmessageHandlers[messageQueryAwareness] = function (encoder, _decoder, provider, _emitSynced, _messageType) {\n  encoding.writeVarUint(encoder, messageAwareness);\n  encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(provider.awareness, Array.from(provider.awareness.getStates().keys())));\n};\nmessageHandlers[messageAwareness] = function (_encoder, decoder, provider, _emitSynced, _messageType) {\n  awarenessProtocol.applyAwarenessUpdate(provider.awareness, decoding.readVarUint8Array(decoder), provider);\n};\nmessageHandlers[messageAuth] = function (_encoder, decoder, provider, _emitSynced, _messageType) {\n  authProtocol.readAuthMessage(decoder, provider.doc, function (_ydoc, reason) {\n    return permissionDeniedHandler(provider, reason);\n  });\n};\nvar messageReconnectTimeout = 3e4;\nfunction permissionDeniedHandler(provider, reason) {\n  console.warn(\"Permission denied to access \".concat(provider.url, \".\\n\").concat(reason));\n}\nfunction readMessage(provider, buf, emitSynced) {\n  var decoder = decoding.createDecoder(buf);\n  var encoder = encoding.createEncoder();\n  var messageType = decoding.readVarUint(decoder);\n  var messageHandler = provider.messageHandlers[messageType];\n  if ( /** @type {any} */\n  messageHandler) {\n    messageHandler(encoder, decoder, provider, emitSynced, messageType);\n  } else {\n    console.error(\"Unable to compute message\");\n  }\n  return encoder;\n}\nfunction setupWS(provider) {\n  if (provider.shouldConnect && provider.ws === null) {\n    var websocket = new provider._WS(provider.url);\n    websocket.binaryType = \"arraybuffer\";\n    provider.ws = websocket;\n    provider.wsconnecting = true;\n    provider.wsconnected = false;\n    provider.synced = false;\n    websocket.onmessage = function (event) {\n      if (event.data === \"ping\") {\n        websocket.send(\"pong\");\n        return;\n      }\n      provider.wsLastMessageReceived = time.getUnixTime();\n      var encoder = readMessage(provider, new Uint8Array(event.data), true);\n      if (encoding.length(encoder) > 1) {\n        websocket.send(encoding.toUint8Array(encoder));\n      }\n    };\n    websocket.onerror = function (event) {\n      provider.emit(\"connection-error\", [event, provider]);\n    };\n    websocket.onclose = function (event) {\n      provider.emit(\"connection-close\", [event, provider]);\n      provider.ws = null;\n      provider.wsconnecting = false;\n      if (provider.wsconnected) {\n        provider.wsconnected = false;\n        provider.synced = false;\n        awarenessProtocol.removeAwarenessStates(provider.awareness, Array.from(provider.awareness.getStates().keys()).filter(function (client) {\n          return client !== provider.doc.clientID;\n        }), provider);\n        provider.emit(\"status\", [{\n          status: \"disconnected\"\n        }]);\n      } else {\n        provider.wsUnsuccessfulReconnects++;\n      }\n      setTimeout(setupWS, math.min(math.pow(2, provider.wsUnsuccessfulReconnects) * 100, provider.maxBackoffTime), provider);\n    };\n    websocket.onopen = function () {\n      provider.wsLastMessageReceived = time.getUnixTime();\n      provider.wsconnecting = false;\n      provider.wsconnected = true;\n      provider.wsUnsuccessfulReconnects = 0;\n      provider.emit(\"status\", [{\n        status: \"connected\"\n      }]);\n      var encoder = encoding.createEncoder();\n      encoding.writeVarUint(encoder, messageSync);\n      syncProtocol.writeSyncStep1(encoder, provider.doc);\n      websocket.send(encoding.toUint8Array(encoder));\n      if (provider.awareness.getLocalState() !== null) {\n        var encoderAwarenessState = encoding.createEncoder();\n        encoding.writeVarUint(encoderAwarenessState, messageAwareness);\n        encoding.writeVarUint8Array(encoderAwarenessState, awarenessProtocol.encodeAwarenessUpdate(provider.awareness, [provider.doc.clientID]));\n        websocket.send(encoding.toUint8Array(encoderAwarenessState));\n      }\n    };\n    provider.emit(\"status\", [{\n      status: \"connecting\"\n    }]);\n  }\n}\nfunction broadcastMessage(provider, buf) {\n  var ws = provider.ws;\n  if (provider.wsconnected && ws && ws.readyState === ws.OPEN) {\n    ws.send(buf);\n  }\n  if (provider.bcconnected) {\n    bc.publish(provider.bcChannel, buf, provider);\n  }\n}\nvar WebsocketProvider = /*#__PURE__*/function (_Observable) {\n  _inherits(WebsocketProvider, _Observable);\n  var _super = _createSuper(WebsocketProvider);\n  function WebsocketProvider(serverUrl, roomname, doc) {\n    var _this;\n    var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n      _ref$connect = _ref.connect,\n      connect = _ref$connect === void 0 ? true : _ref$connect,\n      _ref$awareness = _ref.awareness,\n      awareness = _ref$awareness === void 0 ? new awarenessProtocol.Awareness(doc) : _ref$awareness,\n      _ref$params = _ref.params,\n      params = _ref$params === void 0 ? {} : _ref$params,\n      _ref$WebSocketPolyfil = _ref.WebSocketPolyfill,\n      WebSocketPolyfill = _ref$WebSocketPolyfil === void 0 ? WebSocket : _ref$WebSocketPolyfil,\n      _ref$resyncInterval = _ref.resyncInterval,\n      resyncInterval = _ref$resyncInterval === void 0 ? -1 : _ref$resyncInterval,\n      _ref$maxBackoffTime = _ref.maxBackoffTime,\n      maxBackoffTime = _ref$maxBackoffTime === void 0 ? 2500 : _ref$maxBackoffTime,\n      _ref$disableBc = _ref.disableBc,\n      disableBc = _ref$disableBc === void 0 ? false : _ref$disableBc;\n    _classCallCheck(this, WebsocketProvider);\n    _this = _super.call(this);\n    _defineProperty(_assertThisInitialized(_this), \"maxBackoffTime\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"bcChannel\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"url\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"roomname\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"doc\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_WS\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"awareness\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"wsconnected\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"wsconnecting\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"bcconnected\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"disableBc\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"wsUnsuccessfulReconnects\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"messageHandlers\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_synced\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"ws\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"wsLastMessageReceived\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"shouldConnect\", void 0);\n    // Whether to connect to other peers or not\n    _defineProperty(_assertThisInitialized(_this), \"_resyncInterval\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_bcSubscriber\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_updateHandler\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_awarenessUpdateHandler\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_unloadHandler\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"_checkInterval\", void 0);\n    while (serverUrl[serverUrl.length - 1] === \"/\") {\n      serverUrl = serverUrl.slice(0, serverUrl.length - 1);\n    }\n    var encodedParams = url.encodeQueryParams(params);\n    _this.maxBackoffTime = maxBackoffTime;\n    _this.bcChannel = serverUrl + \"/\" + roomname;\n    _this.url = serverUrl + \"/\" + roomname + (encodedParams.length === 0 ? \"\" : \"?\" + encodedParams);\n    _this.roomname = roomname;\n    _this.doc = doc;\n    _this._WS = WebSocketPolyfill;\n    _this.awareness = awareness;\n    _this.wsconnected = false;\n    _this.wsconnecting = false;\n    _this.bcconnected = false;\n    _this.disableBc = disableBc;\n    _this.wsUnsuccessfulReconnects = 0;\n    _this.messageHandlers = messageHandlers.slice();\n    _this._synced = false;\n    _this.ws = null;\n    _this.wsLastMessageReceived = 0;\n    _this.shouldConnect = connect;\n    _this._resyncInterval = 0;\n    if (resyncInterval > 0) {\n      _this._resyncInterval = /** @type {any} */\n      setInterval(function () {\n        if (_this.ws && _this.ws.readyState === WebSocket.OPEN) {\n          var encoder = encoding.createEncoder();\n          encoding.writeVarUint(encoder, messageSync);\n          syncProtocol.writeSyncStep1(encoder, doc);\n          _this.ws.send(encoding.toUint8Array(encoder));\n        }\n      }, resyncInterval);\n    }\n    _this._bcSubscriber = function (data, origin) {\n      if (origin !== _assertThisInitialized(_this)) {\n        var encoder = readMessage(_assertThisInitialized(_this), new Uint8Array(data), false);\n        if (encoding.length(encoder) > 1) {\n          bc.publish(_this.bcChannel, encoding.toUint8Array(encoder), _assertThisInitialized(_this));\n        }\n      }\n    };\n    _this._updateHandler = function (update, origin) {\n      if (origin !== _assertThisInitialized(_this)) {\n        var encoder = encoding.createEncoder();\n        encoding.writeVarUint(encoder, messageSync);\n        syncProtocol.writeUpdate(encoder, update);\n        broadcastMessage(_assertThisInitialized(_this), encoding.toUint8Array(encoder));\n      }\n    };\n    _this.doc.on(\"update\", _this._updateHandler);\n    _this._awarenessUpdateHandler = function (_ref2, _origin) {\n      var added = _ref2.added,\n        updated = _ref2.updated,\n        removed = _ref2.removed;\n      var changedClients = added.concat(updated).concat(removed);\n      var encoder = encoding.createEncoder();\n      encoding.writeVarUint(encoder, messageAwareness);\n      encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(awareness, changedClients));\n      broadcastMessage(_assertThisInitialized(_this), encoding.toUint8Array(encoder));\n    };\n    _this._unloadHandler = function () {\n      awarenessProtocol.removeAwarenessStates(_this.awareness, [doc.clientID], \"window unload\");\n    };\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"unload\", _this._unloadHandler);\n    } else if (typeof process !== \"undefined\") {\n      process.on(\"exit\", _this._unloadHandler);\n    }\n    awareness.on(\"update\", _this._awarenessUpdateHandler);\n    _this._checkInterval = /** @type {any} */\n    setInterval(function () {\n      if (_this.wsconnected && messageReconnectTimeout < time.getUnixTime() - _this.wsLastMessageReceived) {\n        assert(_this.ws !== null, \"ws must not be null\");\n        _this.ws.close();\n      }\n    }, messageReconnectTimeout / 10);\n    if (connect) {\n      _this.connect();\n    }\n    return _this;\n  }\n  /**\n   * @type {boolean}\n   */\n  _createClass(WebsocketProvider, [{\n    key: \"synced\",\n    get: function get() {\n      return this._synced;\n    },\n    set: function set(state) {\n      if (this._synced !== state) {\n        this._synced = state;\n        this.emit(\"synced\", [state]);\n        this.emit(\"sync\", [state]);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this._resyncInterval !== 0) {\n        clearInterval(this._resyncInterval);\n      }\n      clearInterval(this._checkInterval);\n      this.disconnect();\n      if (typeof window !== \"undefined\") {\n        window.removeEventListener(\"unload\", this._unloadHandler);\n      } else if (typeof process !== \"undefined\") {\n        process.off(\"exit\", this._unloadHandler);\n      }\n      this.awareness.off(\"update\", this._awarenessUpdateHandler);\n      this.doc.off(\"update\", this._updateHandler);\n      _get(_getPrototypeOf(WebsocketProvider.prototype), \"destroy\", this).call(this);\n    }\n  }, {\n    key: \"connectBc\",\n    value: function connectBc() {\n      if (this.disableBc) {\n        return;\n      }\n      if (!this.bcconnected) {\n        bc.subscribe(this.bcChannel, this._bcSubscriber);\n        this.bcconnected = true;\n      }\n      var encoderSync = encoding.createEncoder();\n      encoding.writeVarUint(encoderSync, messageSync);\n      syncProtocol.writeSyncStep1(encoderSync, this.doc);\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderSync), this);\n      var encoderState = encoding.createEncoder();\n      encoding.writeVarUint(encoderState, messageSync);\n      syncProtocol.writeSyncStep2(encoderState, this.doc);\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderState), this);\n      var encoderAwarenessQuery = encoding.createEncoder();\n      encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness);\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderAwarenessQuery), this);\n      var encoderAwarenessState = encoding.createEncoder();\n      encoding.writeVarUint(encoderAwarenessState, messageAwareness);\n      encoding.writeVarUint8Array(encoderAwarenessState, awarenessProtocol.encodeAwarenessUpdate(this.awareness, [this.doc.clientID]));\n      bc.publish(this.bcChannel, encoding.toUint8Array(encoderAwarenessState), this);\n    }\n  }, {\n    key: \"disconnectBc\",\n    value: function disconnectBc() {\n      var encoder = encoding.createEncoder();\n      encoding.writeVarUint(encoder, messageAwareness);\n      encoding.writeVarUint8Array(encoder, awarenessProtocol.encodeAwarenessUpdate(this.awareness, [this.doc.clientID], /* @__PURE__ */new Map()));\n      broadcastMessage(this, encoding.toUint8Array(encoder));\n      if (this.bcconnected) {\n        bc.unsubscribe(this.bcChannel, this._bcSubscriber);\n        this.bcconnected = false;\n      }\n    }\n  }, {\n    key: \"disconnect\",\n    value: function disconnect() {\n      this.shouldConnect = false;\n      this.disconnectBc();\n      if (this.ws !== null) {\n        this.ws.close();\n      }\n    }\n  }, {\n    key: \"connect\",\n    value: function connect() {\n      this.shouldConnect = true;\n      if (!this.wsconnected && this.ws === null) {\n        setupWS(this);\n        this.connectBc();\n      }\n    }\n  }]);\n  return WebsocketProvider;\n}(Observable);\nfunction generateUUID() {\n  if (crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  var d = /* @__PURE__ */new Date().getTime();\n  var d2 = typeof performance !== \"undefined\" && performance.now && performance.now() * 1e3 || 0;\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n    var r = Math.random() * 16;\n    if (d > 0) {\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : r & 3 | 8).toString(16);\n  });\n}\nvar YPartyKitProvider = /*#__PURE__*/function (_WebsocketProvider) {\n  _inherits(YPartyKitProvider, _WebsocketProvider);\n  var _super2 = _createSuper(YPartyKitProvider);\n  function YPartyKitProvider(host, room, doc) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    _classCallCheck(this, YPartyKitProvider);\n    var serverUrl = \"\".concat(host.startsWith(\"localhost:\") || host.startsWith(\"127.0.0.1:\") ? \"ws\" : \"wss\", \"://\").concat(host, \"/party\");\n    if (options.params === void 0) {\n      options.params = {\n        _pk: generateUUID()\n      };\n    } else {\n      options.params._pk = generateUUID();\n    }\n    return _super2.call(this, serverUrl, room, doc, options);\n  }\n  return _createClass(YPartyKitProvider);\n}(WebsocketProvider);\nexport { WebsocketProvider, YPartyKitProvider as default, messageAuth, messageAwareness, messageQueryAwareness, messageSync };","map":{"version":3,"names":["bc","time","encoding","decoding","syncProtocol","authProtocol","awarenessProtocol","Observable","math","url","messageSync","messageQueryAwareness","messageAwareness","messageAuth","assert","condition","message","Error","messageHandlers","encoder","decoder","provider","emitSynced","_messageType","writeVarUint","syncMessageType","readSyncMessage","doc","messageYjsSyncStep2","synced","_decoder","_emitSynced","writeVarUint8Array","encodeAwarenessUpdate","awareness","Array","from","getStates","keys","_encoder","applyAwarenessUpdate","readVarUint8Array","readAuthMessage","_ydoc","reason","permissionDeniedHandler","messageReconnectTimeout","console","warn","concat","readMessage","buf","createDecoder","createEncoder","messageType","readVarUint","messageHandler","error","setupWS","shouldConnect","ws","websocket","_WS","binaryType","wsconnecting","wsconnected","onmessage","event","data","send","wsLastMessageReceived","getUnixTime","Uint8Array","length","toUint8Array","onerror","emit","onclose","removeAwarenessStates","filter","client","clientID","status","wsUnsuccessfulReconnects","setTimeout","min","pow","maxBackoffTime","onopen","writeSyncStep1","getLocalState","encoderAwarenessState","broadcastMessage","readyState","OPEN","bcconnected","publish","bcChannel","WebsocketProvider","_Observable","_inherits","_super","_createSuper","serverUrl","roomname","_this","_ref","arguments","undefined","_ref$connect","connect","_ref$awareness","Awareness","_ref$params","params","_ref$WebSocketPolyfil","WebSocketPolyfill","WebSocket","_ref$resyncInterval","resyncInterval","_ref$maxBackoffTime","_ref$disableBc","disableBc","_classCallCheck","call","_defineProperty","_assertThisInitialized","slice","encodedParams","encodeQueryParams","_synced","_resyncInterval","setInterval","_bcSubscriber","origin","_updateHandler","update","writeUpdate","on","_awarenessUpdateHandler","_ref2","_origin","added","updated","removed","changedClients","_unloadHandler","window","addEventListener","process","_checkInterval","close","_createClass","key","get","set","state","value","destroy","clearInterval","disconnect","removeEventListener","off","_get","_getPrototypeOf","prototype","connectBc","subscribe","encoderSync","encoderState","writeSyncStep2","encoderAwarenessQuery","disconnectBc","Map","unsubscribe","generateUUID","crypto","randomUUID","d","Date","getTime","d2","performance","now","replace","c","r","Math","random","floor","toString","YPartyKitProvider","_WebsocketProvider","_super2","host","room","options","startsWith","_pk","default"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/y-partykit/dist/provider.mjs"],"sourcesContent":["// src/provider.ts\nimport * as bc from \"lib0/broadcastchannel\";\nimport * as time from \"lib0/time\";\nimport * as encoding from \"lib0/encoding\";\nimport * as decoding from \"lib0/decoding\";\nimport * as syncProtocol from \"y-protocols/sync\";\nimport * as authProtocol from \"y-protocols/auth\";\nimport * as awarenessProtocol from \"y-protocols/awareness\";\nimport { Observable } from \"lib0/observable\";\nimport * as math from \"lib0/math\";\nimport * as url from \"lib0/url\";\nvar messageSync = 0;\nvar messageQueryAwareness = 3;\nvar messageAwareness = 1;\nvar messageAuth = 2;\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\nvar messageHandlers = [];\nmessageHandlers[messageSync] = (encoder, decoder, provider, emitSynced, _messageType) => {\n  encoding.writeVarUint(encoder, messageSync);\n  const syncMessageType = syncProtocol.readSyncMessage(\n    decoder,\n    encoder,\n    provider.doc,\n    provider\n  );\n  if (emitSynced && syncMessageType === syncProtocol.messageYjsSyncStep2 && !provider.synced) {\n    provider.synced = true;\n  }\n};\nmessageHandlers[messageQueryAwareness] = (encoder, _decoder, provider, _emitSynced, _messageType) => {\n  encoding.writeVarUint(encoder, messageAwareness);\n  encoding.writeVarUint8Array(\n    encoder,\n    awarenessProtocol.encodeAwarenessUpdate(\n      provider.awareness,\n      Array.from(provider.awareness.getStates().keys())\n    )\n  );\n};\nmessageHandlers[messageAwareness] = (_encoder, decoder, provider, _emitSynced, _messageType) => {\n  awarenessProtocol.applyAwarenessUpdate(\n    provider.awareness,\n    decoding.readVarUint8Array(decoder),\n    provider\n  );\n};\nmessageHandlers[messageAuth] = (_encoder, decoder, provider, _emitSynced, _messageType) => {\n  authProtocol.readAuthMessage(\n    decoder,\n    provider.doc,\n    (_ydoc, reason) => permissionDeniedHandler(provider, reason)\n  );\n};\nvar messageReconnectTimeout = 3e4;\nfunction permissionDeniedHandler(provider, reason) {\n  console.warn(`Permission denied to access ${provider.url}.\n${reason}`);\n}\nfunction readMessage(provider, buf, emitSynced) {\n  const decoder = decoding.createDecoder(buf);\n  const encoder = encoding.createEncoder();\n  const messageType = decoding.readVarUint(decoder);\n  const messageHandler = provider.messageHandlers[messageType];\n  if (\n    /** @type {any} */\n    messageHandler\n  ) {\n    messageHandler(encoder, decoder, provider, emitSynced, messageType);\n  } else {\n    console.error(\"Unable to compute message\");\n  }\n  return encoder;\n}\nfunction setupWS(provider) {\n  if (provider.shouldConnect && provider.ws === null) {\n    const websocket = new provider._WS(provider.url);\n    websocket.binaryType = \"arraybuffer\";\n    provider.ws = websocket;\n    provider.wsconnecting = true;\n    provider.wsconnected = false;\n    provider.synced = false;\n    websocket.onmessage = (event) => {\n      if (event.data === \"ping\") {\n        websocket.send(\"pong\");\n        return;\n      }\n      provider.wsLastMessageReceived = time.getUnixTime();\n      const encoder = readMessage(provider, new Uint8Array(event.data), true);\n      if (encoding.length(encoder) > 1) {\n        websocket.send(encoding.toUint8Array(encoder));\n      }\n    };\n    websocket.onerror = (event) => {\n      provider.emit(\"connection-error\", [event, provider]);\n    };\n    websocket.onclose = (event) => {\n      provider.emit(\"connection-close\", [event, provider]);\n      provider.ws = null;\n      provider.wsconnecting = false;\n      if (provider.wsconnected) {\n        provider.wsconnected = false;\n        provider.synced = false;\n        awarenessProtocol.removeAwarenessStates(\n          provider.awareness,\n          Array.from(provider.awareness.getStates().keys()).filter(\n            (client) => client !== provider.doc.clientID\n          ),\n          provider\n        );\n        provider.emit(\"status\", [\n          {\n            status: \"disconnected\"\n          }\n        ]);\n      } else {\n        provider.wsUnsuccessfulReconnects++;\n      }\n      setTimeout(\n        setupWS,\n        math.min(\n          math.pow(2, provider.wsUnsuccessfulReconnects) * 100,\n          provider.maxBackoffTime\n        ),\n        provider\n      );\n    };\n    websocket.onopen = () => {\n      provider.wsLastMessageReceived = time.getUnixTime();\n      provider.wsconnecting = false;\n      provider.wsconnected = true;\n      provider.wsUnsuccessfulReconnects = 0;\n      provider.emit(\"status\", [\n        {\n          status: \"connected\"\n        }\n      ]);\n      const encoder = encoding.createEncoder();\n      encoding.writeVarUint(encoder, messageSync);\n      syncProtocol.writeSyncStep1(encoder, provider.doc);\n      websocket.send(encoding.toUint8Array(encoder));\n      if (provider.awareness.getLocalState() !== null) {\n        const encoderAwarenessState = encoding.createEncoder();\n        encoding.writeVarUint(encoderAwarenessState, messageAwareness);\n        encoding.writeVarUint8Array(\n          encoderAwarenessState,\n          awarenessProtocol.encodeAwarenessUpdate(provider.awareness, [\n            provider.doc.clientID\n          ])\n        );\n        websocket.send(encoding.toUint8Array(encoderAwarenessState));\n      }\n    };\n    provider.emit(\"status\", [\n      {\n        status: \"connecting\"\n      }\n    ]);\n  }\n}\nfunction broadcastMessage(provider, buf) {\n  const ws = provider.ws;\n  if (provider.wsconnected && ws && ws.readyState === ws.OPEN) {\n    ws.send(buf);\n  }\n  if (provider.bcconnected) {\n    bc.publish(provider.bcChannel, buf, provider);\n  }\n}\nvar WebsocketProvider = class extends Observable {\n  maxBackoffTime;\n  bcChannel;\n  url;\n  roomname;\n  doc;\n  _WS;\n  awareness;\n  wsconnected;\n  wsconnecting;\n  bcconnected;\n  disableBc;\n  wsUnsuccessfulReconnects;\n  messageHandlers;\n  _synced;\n  ws;\n  wsLastMessageReceived;\n  shouldConnect;\n  // Whether to connect to other peers or not\n  _resyncInterval;\n  _bcSubscriber;\n  _updateHandler;\n  _awarenessUpdateHandler;\n  _unloadHandler;\n  _checkInterval;\n  constructor(serverUrl, roomname, doc, {\n    connect = true,\n    awareness = new awarenessProtocol.Awareness(doc),\n    params = {},\n    WebSocketPolyfill = WebSocket,\n    // Optionally provide a WebSocket polyfill\n    resyncInterval = -1,\n    // Request server state every `resyncInterval` milliseconds\n    maxBackoffTime = 2500,\n    // Maximum amount of time to wait before trying to reconnect (we try to reconnect using exponential backoff)\n    disableBc = false\n    // Disable cross-tab BroadcastChannel communication\n  } = {}) {\n    super();\n    while (serverUrl[serverUrl.length - 1] === \"/\") {\n      serverUrl = serverUrl.slice(0, serverUrl.length - 1);\n    }\n    const encodedParams = url.encodeQueryParams(params);\n    this.maxBackoffTime = maxBackoffTime;\n    this.bcChannel = serverUrl + \"/\" + roomname;\n    this.url = serverUrl + \"/\" + roomname + (encodedParams.length === 0 ? \"\" : \"?\" + encodedParams);\n    this.roomname = roomname;\n    this.doc = doc;\n    this._WS = WebSocketPolyfill;\n    this.awareness = awareness;\n    this.wsconnected = false;\n    this.wsconnecting = false;\n    this.bcconnected = false;\n    this.disableBc = disableBc;\n    this.wsUnsuccessfulReconnects = 0;\n    this.messageHandlers = messageHandlers.slice();\n    this._synced = false;\n    this.ws = null;\n    this.wsLastMessageReceived = 0;\n    this.shouldConnect = connect;\n    this._resyncInterval = 0;\n    if (resyncInterval > 0) {\n      this._resyncInterval = /** @type {any} */\n      setInterval(() => {\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\n          const encoder = encoding.createEncoder();\n          encoding.writeVarUint(encoder, messageSync);\n          syncProtocol.writeSyncStep1(encoder, doc);\n          this.ws.send(encoding.toUint8Array(encoder));\n        }\n      }, resyncInterval);\n    }\n    this._bcSubscriber = (data, origin) => {\n      if (origin !== this) {\n        const encoder = readMessage(this, new Uint8Array(data), false);\n        if (encoding.length(encoder) > 1) {\n          bc.publish(this.bcChannel, encoding.toUint8Array(encoder), this);\n        }\n      }\n    };\n    this._updateHandler = (update, origin) => {\n      if (origin !== this) {\n        const encoder = encoding.createEncoder();\n        encoding.writeVarUint(encoder, messageSync);\n        syncProtocol.writeUpdate(encoder, update);\n        broadcastMessage(this, encoding.toUint8Array(encoder));\n      }\n    };\n    this.doc.on(\"update\", this._updateHandler);\n    this._awarenessUpdateHandler = ({ added, updated, removed }, _origin) => {\n      const changedClients = added.concat(updated).concat(removed);\n      const encoder = encoding.createEncoder();\n      encoding.writeVarUint(encoder, messageAwareness);\n      encoding.writeVarUint8Array(\n        encoder,\n        awarenessProtocol.encodeAwarenessUpdate(awareness, changedClients)\n      );\n      broadcastMessage(this, encoding.toUint8Array(encoder));\n    };\n    this._unloadHandler = () => {\n      awarenessProtocol.removeAwarenessStates(\n        this.awareness,\n        [doc.clientID],\n        \"window unload\"\n      );\n    };\n    if (typeof window !== \"undefined\") {\n      window.addEventListener(\"unload\", this._unloadHandler);\n    } else if (typeof process !== \"undefined\") {\n      process.on(\"exit\", this._unloadHandler);\n    }\n    awareness.on(\"update\", this._awarenessUpdateHandler);\n    this._checkInterval = /** @type {any} */\n    setInterval(() => {\n      if (this.wsconnected && messageReconnectTimeout < time.getUnixTime() - this.wsLastMessageReceived) {\n        assert(this.ws !== null, \"ws must not be null\");\n        this.ws.close();\n      }\n    }, messageReconnectTimeout / 10);\n    if (connect) {\n      this.connect();\n    }\n  }\n  /**\n   * @type {boolean}\n   */\n  get synced() {\n    return this._synced;\n  }\n  set synced(state) {\n    if (this._synced !== state) {\n      this._synced = state;\n      this.emit(\"synced\", [state]);\n      this.emit(\"sync\", [state]);\n    }\n  }\n  destroy() {\n    if (this._resyncInterval !== 0) {\n      clearInterval(this._resyncInterval);\n    }\n    clearInterval(this._checkInterval);\n    this.disconnect();\n    if (typeof window !== \"undefined\") {\n      window.removeEventListener(\"unload\", this._unloadHandler);\n    } else if (typeof process !== \"undefined\") {\n      process.off(\"exit\", this._unloadHandler);\n    }\n    this.awareness.off(\"update\", this._awarenessUpdateHandler);\n    this.doc.off(\"update\", this._updateHandler);\n    super.destroy();\n  }\n  connectBc() {\n    if (this.disableBc) {\n      return;\n    }\n    if (!this.bcconnected) {\n      bc.subscribe(this.bcChannel, this._bcSubscriber);\n      this.bcconnected = true;\n    }\n    const encoderSync = encoding.createEncoder();\n    encoding.writeVarUint(encoderSync, messageSync);\n    syncProtocol.writeSyncStep1(encoderSync, this.doc);\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderSync), this);\n    const encoderState = encoding.createEncoder();\n    encoding.writeVarUint(encoderState, messageSync);\n    syncProtocol.writeSyncStep2(encoderState, this.doc);\n    bc.publish(this.bcChannel, encoding.toUint8Array(encoderState), this);\n    const encoderAwarenessQuery = encoding.createEncoder();\n    encoding.writeVarUint(encoderAwarenessQuery, messageQueryAwareness);\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessQuery),\n      this\n    );\n    const encoderAwarenessState = encoding.createEncoder();\n    encoding.writeVarUint(encoderAwarenessState, messageAwareness);\n    encoding.writeVarUint8Array(\n      encoderAwarenessState,\n      awarenessProtocol.encodeAwarenessUpdate(this.awareness, [\n        this.doc.clientID\n      ])\n    );\n    bc.publish(\n      this.bcChannel,\n      encoding.toUint8Array(encoderAwarenessState),\n      this\n    );\n  }\n  disconnectBc() {\n    const encoder = encoding.createEncoder();\n    encoding.writeVarUint(encoder, messageAwareness);\n    encoding.writeVarUint8Array(\n      encoder,\n      awarenessProtocol.encodeAwarenessUpdate(\n        this.awareness,\n        [this.doc.clientID],\n        /* @__PURE__ */ new Map()\n      )\n    );\n    broadcastMessage(this, encoding.toUint8Array(encoder));\n    if (this.bcconnected) {\n      bc.unsubscribe(this.bcChannel, this._bcSubscriber);\n      this.bcconnected = false;\n    }\n  }\n  disconnect() {\n    this.shouldConnect = false;\n    this.disconnectBc();\n    if (this.ws !== null) {\n      this.ws.close();\n    }\n  }\n  connect() {\n    this.shouldConnect = true;\n    if (!this.wsconnected && this.ws === null) {\n      setupWS(this);\n      this.connectBc();\n    }\n  }\n};\nfunction generateUUID() {\n  if (crypto.randomUUID) {\n    return crypto.randomUUID();\n  }\n  let d = (/* @__PURE__ */ new Date()).getTime();\n  let d2 = typeof performance !== \"undefined\" && performance.now && performance.now() * 1e3 || 0;\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(c) {\n    let r = Math.random() * 16;\n    if (d > 0) {\n      r = (d + r) % 16 | 0;\n      d = Math.floor(d / 16);\n    } else {\n      r = (d2 + r) % 16 | 0;\n      d2 = Math.floor(d2 / 16);\n    }\n    return (c === \"x\" ? r : r & 3 | 8).toString(16);\n  });\n}\nvar YPartyKitProvider = class extends WebsocketProvider {\n  constructor(host, room, doc, options = {}) {\n    const serverUrl = `${host.startsWith(\"localhost:\") || host.startsWith(\"127.0.0.1:\") ? \"ws\" : \"wss\"}://${host}/party`;\n    if (options.params === void 0) {\n      options.params = {\n        _pk: generateUUID()\n      };\n    } else {\n      options.params._pk = generateUUID();\n    }\n    super(serverUrl, room, doc, options);\n  }\n};\nexport {\n  WebsocketProvider,\n  YPartyKitProvider as default,\n  messageAuth,\n  messageAwareness,\n  messageQueryAwareness,\n  messageSync\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}