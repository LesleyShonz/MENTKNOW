{"ast":null,"code":"import { Box2d, ROTATE_CORNER_TO_SELECTION_CORNER, flipSelectionHandleX, flipSelectionHandleY, isSelectionCorner, rotateSelectionHandle } from \"./lib/Box2d.mjs\";\nimport { CubicSegment2d } from \"./lib/CubicSegment2d.mjs\";\nimport { CubicSpline2d } from \"./lib/CubicSpline2d.mjs\";\nimport { LineSegment2d } from \"./lib/LineSegment2d.mjs\";\nimport { Matrix2d, decomposeMatrix2d } from \"./lib/Matrix2d.mjs\";\nimport { Polyline2d } from \"./lib/Polyline2d.mjs\";\nimport { Vec2d } from \"./lib/Vec2d.mjs\";\nimport { EASINGS } from \"./lib/easings.mjs\";\nimport { getStroke } from \"./lib/freehand/getStroke.mjs\";\nimport { getStrokeOutlinePoints } from \"./lib/freehand/getStrokeOutlinePoints.mjs\";\nimport { getStrokePoints } from \"./lib/freehand/getStrokePoints.mjs\";\nimport { setStrokePointRadii } from \"./lib/freehand/setStrokePointRadii.mjs\";\nimport { intersectCircleCircle, intersectCirclePolygon, intersectCirclePolyline, intersectLineSegmentCircle, intersectLineSegmentLineSegment, intersectLineSegmentPolygon, intersectLineSegmentPolyline, intersectPolygonBounds, intersectPolygonPolygon, linesIntersect, polygonsIntersect } from \"./lib/intersect.mjs\";\nimport { getDrawLinePathData, getRoundedInkyPolygonPath, getRoundedPolygonPoints } from \"./lib/polygon-helpers.mjs\";\nimport { EPSILON, PI, PI2, SIN, TAU, angleDelta, approximately, areAnglesCompatible, canolicalizeRotation, clamp, clampRadians, degreesToRadians, getArcLength, getHeight, getMaxX, getMaxY, getMidX, getMidY, getMinX, getMinY, getPointOnCircle, getPolygonVertices, getStarBounds, getSweep, getWidth, isAngleBetween, isSafeFloat, lerpAngles, longAngleDist, perimeterOfEllipse, pointInBounds, pointInCircle, pointInEllipse, pointInPolygon, pointInPolyline, pointInRect, pointNearToLineSegment, pointNearToPolyline, radiansToDegrees, rangeIntersection, rangesOverlap, shortAngleDist, simplify, simplify2, snapAngle, toDomPrecision, toFixed, toPrecision } from \"./lib/utils.mjs\";\nexport { Box2d, CubicSegment2d, CubicSpline2d, EASINGS, EPSILON, LineSegment2d, Matrix2d, PI, PI2, Polyline2d, ROTATE_CORNER_TO_SELECTION_CORNER, SIN, TAU, Vec2d, angleDelta, approximately, areAnglesCompatible, canolicalizeRotation, clamp, clampRadians, decomposeMatrix2d, degreesToRadians, flipSelectionHandleX, flipSelectionHandleY, getArcLength, getDrawLinePathData, getHeight, getMaxX, getMaxY, getMidX, getMidY, getMinX, getMinY, getPointOnCircle, getPolygonVertices, getRoundedInkyPolygonPath, getRoundedPolygonPoints, getStarBounds, getStroke, getStrokeOutlinePoints, getStrokePoints, getSweep, getWidth, intersectCircleCircle, intersectCirclePolygon, intersectCirclePolyline, intersectLineSegmentCircle, intersectLineSegmentLineSegment, intersectLineSegmentPolygon, intersectLineSegmentPolyline, intersectPolygonBounds, intersectPolygonPolygon, isAngleBetween, isSafeFloat, isSelectionCorner, lerpAngles, linesIntersect, longAngleDist, perimeterOfEllipse, pointInBounds, pointInCircle, pointInEllipse, pointInPolygon, pointInPolyline, pointInRect, pointNearToLineSegment, pointNearToPolyline, polygonsIntersect, radiansToDegrees, rangeIntersection, rangesOverlap, rotateSelectionHandle, setStrokePointRadii, shortAngleDist, simplify, simplify2, snapAngle, toDomPrecision, toFixed, toPrecision };","map":{"version":3,"names":["Box2d","ROTATE_CORNER_TO_SELECTION_CORNER","flipSelectionHandleX","flipSelectionHandleY","isSelectionCorner","rotateSelectionHandle","CubicSegment2d","CubicSpline2d","LineSegment2d","Matrix2d","decomposeMatrix2d","Polyline2d","Vec2d","EASINGS","getStroke","getStrokeOutlinePoints","getStrokePoints","setStrokePointRadii","intersectCircleCircle","intersectCirclePolygon","intersectCirclePolyline","intersectLineSegmentCircle","intersectLineSegmentLineSegment","intersectLineSegmentPolygon","intersectLineSegmentPolyline","intersectPolygonBounds","intersectPolygonPolygon","linesIntersect","polygonsIntersect","getDrawLinePathData","getRoundedInkyPolygonPath","getRoundedPolygonPoints","EPSILON","PI","PI2","SIN","TAU","angleDelta","approximately","areAnglesCompatible","canolicalizeRotation","clamp","clampRadians","degreesToRadians","getArcLength","getHeight","getMaxX","getMaxY","getMidX","getMidY","getMinX","getMinY","getPointOnCircle","getPolygonVertices","getStarBounds","getSweep","getWidth","isAngleBetween","isSafeFloat","lerpAngles","longAngleDist","perimeterOfEllipse","pointInBounds","pointInCircle","pointInEllipse","pointInPolygon","pointInPolyline","pointInRect","pointNearToLineSegment","pointNearToPolyline","radiansToDegrees","rangeIntersection","rangesOverlap","shortAngleDist","simplify","simplify2","snapAngle","toDomPrecision","toFixed","toPrecision"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/primitives/src/index.ts"],"sourcesContent":["export {\n\tBox2d,\n\tROTATE_CORNER_TO_SELECTION_CORNER,\n\tflipSelectionHandleX,\n\tflipSelectionHandleY,\n\tisSelectionCorner,\n\trotateSelectionHandle,\n\ttype RotateCorner,\n\ttype SelectionCorner,\n\ttype SelectionEdge,\n\ttype SelectionHandle,\n} from './lib/Box2d'\nexport { CubicSegment2d, type CubicSegment2dModel } from './lib/CubicSegment2d'\nexport { CubicSpline2d } from './lib/CubicSpline2d'\nexport { LineSegment2d, type LineSegment2dModel } from './lib/LineSegment2d'\nexport {\n\tMatrix2d,\n\tdecomposeMatrix2d,\n\ttype MatLike,\n\ttype Matrix2dModel,\n\ttype MatrixInfo,\n} from './lib/Matrix2d'\nexport { Polyline2d } from './lib/Polyline2d'\nexport { Vec2d, type VecLike } from './lib/Vec2d'\nexport { EASINGS, type EasingType } from './lib/easings'\nexport { getStroke } from './lib/freehand/getStroke'\nexport { getStrokeOutlinePoints } from './lib/freehand/getStrokeOutlinePoints'\nexport { getStrokePoints } from './lib/freehand/getStrokePoints'\nexport { setStrokePointRadii } from './lib/freehand/setStrokePointRadii'\nexport { type StrokeOptions, type StrokePoint } from './lib/freehand/types'\nexport {\n\tintersectCircleCircle,\n\tintersectCirclePolygon,\n\tintersectCirclePolyline,\n\tintersectLineSegmentCircle,\n\tintersectLineSegmentLineSegment,\n\tintersectLineSegmentPolygon,\n\tintersectLineSegmentPolyline,\n\tintersectPolygonBounds,\n\tintersectPolygonPolygon,\n\tlinesIntersect,\n\tpolygonsIntersect,\n} from './lib/intersect'\nexport {\n\tgetDrawLinePathData,\n\tgetRoundedInkyPolygonPath,\n\tgetRoundedPolygonPoints,\n} from './lib/polygon-helpers'\nexport {\n\tEPSILON,\n\tPI,\n\tPI2,\n\tSIN,\n\tTAU,\n\tangleDelta,\n\tapproximately,\n\tareAnglesCompatible,\n\tcanolicalizeRotation,\n\tclamp,\n\tclampRadians,\n\tdegreesToRadians,\n\tgetArcLength,\n\tgetHeight,\n\tgetMaxX,\n\tgetMaxY,\n\tgetMidX,\n\tgetMidY,\n\tgetMinX,\n\tgetMinY,\n\tgetPointOnCircle,\n\tgetPolygonVertices,\n\tgetStarBounds,\n\tgetSweep,\n\tgetWidth,\n\tisAngleBetween,\n\tisSafeFloat,\n\tlerpAngles,\n\tlongAngleDist,\n\tperimeterOfEllipse,\n\tpointInBounds,\n\tpointInCircle,\n\tpointInEllipse,\n\tpointInPolygon,\n\tpointInPolyline,\n\tpointInRect,\n\tpointNearToLineSegment,\n\tpointNearToPolyline,\n\tradiansToDegrees,\n\trangeIntersection,\n\trangesOverlap,\n\tshortAngleDist,\n\tsimplify,\n\tsimplify2,\n\tsnapAngle,\n\ttoDomPrecision,\n\ttoFixed,\n\ttoPrecision,\n} from './lib/utils'\n"],"mappings":"AAAA,SACCA,KAAA,EACAC,iCAAA,EACAC,oBAAA,EACAC,oBAAA,EACAC,iBAAA,EACAC,qBAAA,QAKM;AACP,SAASC,cAAA,QAAgD;AACzD,SAASC,aAAA,QAAqB;AAC9B,SAASC,aAAA,QAA8C;AACvD,SACCC,QAAA,EACAC,iBAAA,QAIM;AACP,SAASC,UAAA,QAAkB;AAC3B,SAASC,KAAA,QAA2B;AACpC,SAASC,OAAA,QAAgC;AACzC,SAASC,SAAA,QAAiB;AAC1B,SAASC,sBAAA,QAA8B;AACvC,SAASC,eAAA,QAAuB;AAChC,SAASC,mBAAA,QAA2B;AAEpC,SACCC,qBAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,0BAAA,EACAC,+BAAA,EACAC,2BAAA,EACAC,4BAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,cAAA,EACAC,iBAAA,QACM;AACP,SACCC,mBAAA,EACAC,yBAAA,EACAC,uBAAA,QACM;AACP,SACCC,OAAA,EACAC,EAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,UAAA,EACAC,aAAA,EACAC,mBAAA,EACAC,oBAAA,EACAC,KAAA,EACAC,YAAA,EACAC,gBAAA,EACAC,YAAA,EACAC,SAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,OAAA,EACAC,gBAAA,EACAC,kBAAA,EACAC,aAAA,EACAC,QAAA,EACAC,QAAA,EACAC,cAAA,EACAC,WAAA,EACAC,UAAA,EACAC,aAAA,EACAC,kBAAA,EACAC,aAAA,EACAC,aAAA,EACAC,cAAA,EACAC,cAAA,EACAC,eAAA,EACAC,WAAA,EACAC,sBAAA,EACAC,mBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,aAAA,EACAC,cAAA,EACAC,QAAA,EACAC,SAAA,EACAC,SAAA,EACAC,cAAA,EACAC,OAAA,EACAC,WAAA,QACM"},"metadata":{},"sourceType":"module","externalDependencies":[]}