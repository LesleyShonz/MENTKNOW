{"ast":null,"code":"import _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectWithoutProperties from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nvar _migrators;\nvar _excluded = [\"delay\"],\n  _excluded2 = [\"instanceId\"],\n  _excluded3 = [\"chatMessage\"];\nimport { createRecordType, defineMigrations } from \"@tldraw/store\";\nimport { T } from \"@tldraw/validate\";\nimport { box2dModelValidator } from \"../misc/geometry-types.mjs\";\nimport { idValidator } from \"../misc/id-validator.mjs\";\nimport { cursorTypeValidator } from \"../misc/TLCursor.mjs\";\nimport { scribbleValidator } from \"../misc/TLScribble.mjs\";\nimport { TLINSTANCE_ID } from \"./TLInstance.mjs\";\nvar instancePresenceValidator = T.model(\"instance_presence\", T.object({\n  typeName: T.literal(\"instance_presence\"),\n  id: idValidator(\"instance_presence\"),\n  userId: T.string,\n  userName: T.string,\n  lastActivityTimestamp: T.number,\n  followingUserId: T.string.nullable(),\n  cursor: T.object({\n    x: T.number,\n    y: T.number,\n    type: cursorTypeValidator,\n    rotation: T.number\n  }),\n  color: T.string,\n  camera: T.object({\n    x: T.number,\n    y: T.number,\n    z: T.number\n  }),\n  screenBounds: box2dModelValidator,\n  selectedIds: T.arrayOf(idValidator(\"shape\")),\n  currentPageId: idValidator(\"page\"),\n  brush: box2dModelValidator.nullable(),\n  scribble: scribbleValidator.nullable(),\n  chatMessage: T.string\n}));\nvar Versions = {\n  AddScribbleDelay: 1,\n  RemoveInstanceId: 2,\n  AddChatMessage: 3\n};\nvar instancePresenceMigrations = defineMigrations({\n  currentVersion: Versions.AddChatMessage,\n  migrators: (_migrators = {}, _defineProperty(_migrators, Versions.AddScribbleDelay, {\n    up: function up(instance) {\n      if (instance.scribble !== null) {\n        return _objectSpread(_objectSpread({}, instance), {}, {\n          scribble: _objectSpread(_objectSpread({}, instance.scribble), {}, {\n            delay: 0\n          })\n        });\n      }\n      return _objectSpread({}, instance);\n    },\n    down: function down(instance) {\n      if (instance.scribble !== null) {\n        var _instance$scribble = instance.scribble,\n          _delay = _instance$scribble.delay,\n          rest = _objectWithoutProperties(_instance$scribble, _excluded);\n        return _objectSpread(_objectSpread({}, instance), {}, {\n          scribble: rest\n        });\n      }\n      return _objectSpread({}, instance);\n    }\n  }), _defineProperty(_migrators, Versions.RemoveInstanceId, {\n    up: function up(_ref) {\n      var _ = _ref.instanceId,\n        instance = _objectWithoutProperties(_ref, _excluded2);\n      return instance;\n    },\n    down: function down(instance) {\n      return _objectSpread(_objectSpread({}, instance), {}, {\n        instanceId: TLINSTANCE_ID\n      });\n    }\n  }), _defineProperty(_migrators, Versions.AddChatMessage, {\n    up: function up(instance) {\n      return _objectSpread(_objectSpread({}, instance), {}, {\n        chatMessage: \"\"\n      });\n    },\n    down: function down(_ref2) {\n      var _ = _ref2.chatMessage,\n        instance = _objectWithoutProperties(_ref2, _excluded3);\n      return instance;\n    }\n  }), _migrators)\n});\nvar InstancePresenceRecordType = createRecordType(\"instance_presence\", {\n  migrations: instancePresenceMigrations,\n  validator: instancePresenceValidator,\n  scope: \"presence\"\n}).withDefaultProperties(function () {\n  return {\n    lastActivityTimestamp: 0,\n    followingUserId: null,\n    color: \"#FF0000\",\n    camera: {\n      x: 0,\n      y: 0,\n      z: 1\n    },\n    cursor: {\n      x: 0,\n      y: 0,\n      type: \"default\",\n      rotation: 0\n    },\n    screenBounds: {\n      x: 0,\n      y: 0,\n      w: 1,\n      h: 1\n    },\n    selectedIds: [],\n    brush: null,\n    scribble: null,\n    chatMessage: \"\"\n  };\n});\nexport { InstancePresenceRecordType, instancePresenceMigrations, instancePresenceValidator, Versions as instancePresenceVersions };","map":{"version":3,"names":["createRecordType","defineMigrations","T","box2dModelValidator","idValidator","cursorTypeValidator","scribbleValidator","TLINSTANCE_ID","instancePresenceValidator","model","object","typeName","literal","id","userId","string","userName","lastActivityTimestamp","number","followingUserId","nullable","cursor","x","y","type","rotation","color","camera","z","screenBounds","selectedIds","arrayOf","currentPageId","brush","scribble","chatMessage","Versions","AddScribbleDelay","RemoveInstanceId","AddChatMessage","instancePresenceMigrations","currentVersion","migrators","_migrators","_defineProperty","up","instance","_objectSpread","delay","down","_instance$scribble","_delay","rest","_objectWithoutProperties","_excluded","_ref","_","instanceId","_excluded2","_ref2","_excluded3","InstancePresenceRecordType","migrations","validator","scope","withDefaultProperties","w","h"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/tlschema/src/records/TLPresence.ts"],"sourcesContent":["import { BaseRecord, createRecordType, defineMigrations, RecordId } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { Box2dModel, box2dModelValidator } from '../misc/geometry-types'\nimport { idValidator } from '../misc/id-validator'\nimport { cursorTypeValidator, TLCursor } from '../misc/TLCursor'\nimport { scribbleValidator, TLScribble } from '../misc/TLScribble'\nimport { TLINSTANCE_ID } from './TLInstance'\nimport { TLPageId } from './TLPage'\nimport { TLShapeId } from './TLShape'\n\n/** @public */\nexport interface TLInstancePresence extends BaseRecord<'instance_presence', TLInstancePresenceID> {\n\tuserId: string\n\tuserName: string\n\tlastActivityTimestamp: number\n\tcolor: string // can be any hex color\n\tcamera: { x: number; y: number; z: number }\n\tselectedIds: TLShapeId[]\n\tcurrentPageId: TLPageId\n\tbrush: Box2dModel | null\n\tscribble: TLScribble | null\n\tscreenBounds: Box2dModel\n\tfollowingUserId: string | null\n\tcursor: {\n\t\tx: number\n\t\ty: number\n\t\ttype: TLCursor['type']\n\t\trotation: number\n\t}\n\tchatMessage: string\n}\n\n/** @public */\nexport type TLInstancePresenceID = RecordId<TLInstancePresence>\n\n/** @internal */\nexport const instancePresenceValidator: T.Validator<TLInstancePresence> = T.model(\n\t'instance_presence',\n\tT.object({\n\t\ttypeName: T.literal('instance_presence'),\n\t\tid: idValidator<TLInstancePresenceID>('instance_presence'),\n\t\tuserId: T.string,\n\t\tuserName: T.string,\n\t\tlastActivityTimestamp: T.number,\n\t\tfollowingUserId: T.string.nullable(),\n\t\tcursor: T.object({\n\t\t\tx: T.number,\n\t\t\ty: T.number,\n\t\t\ttype: cursorTypeValidator,\n\t\t\trotation: T.number,\n\t\t}),\n\t\tcolor: T.string,\n\t\tcamera: T.object({\n\t\t\tx: T.number,\n\t\t\ty: T.number,\n\t\t\tz: T.number,\n\t\t}),\n\t\tscreenBounds: box2dModelValidator,\n\t\tselectedIds: T.arrayOf(idValidator<TLShapeId>('shape')),\n\t\tcurrentPageId: idValidator<TLPageId>('page'),\n\t\tbrush: box2dModelValidator.nullable(),\n\t\tscribble: scribbleValidator.nullable(),\n\t\tchatMessage: T.string,\n\t})\n)\n\nconst Versions = {\n\tAddScribbleDelay: 1,\n\tRemoveInstanceId: 2,\n\tAddChatMessage: 3,\n} as const\n\nexport { Versions as instancePresenceVersions }\n\nexport const instancePresenceMigrations = defineMigrations({\n\tcurrentVersion: Versions.AddChatMessage,\n\tmigrators: {\n\t\t[Versions.AddScribbleDelay]: {\n\t\t\tup: (instance) => {\n\t\t\t\tif (instance.scribble !== null) {\n\t\t\t\t\treturn { ...instance, scribble: { ...instance.scribble, delay: 0 } }\n\t\t\t\t}\n\t\t\t\treturn { ...instance }\n\t\t\t},\n\t\t\tdown: (instance) => {\n\t\t\t\tif (instance.scribble !== null) {\n\t\t\t\t\tconst { delay: _delay, ...rest } = instance.scribble\n\t\t\t\t\treturn { ...instance, scribble: rest }\n\t\t\t\t}\n\t\t\t\treturn { ...instance }\n\t\t\t},\n\t\t},\n\t\t[Versions.RemoveInstanceId]: {\n\t\t\tup: ({ instanceId: _, ...instance }) => {\n\t\t\t\treturn instance\n\t\t\t},\n\t\t\tdown: (instance) => {\n\t\t\t\treturn { ...instance, instanceId: TLINSTANCE_ID }\n\t\t\t},\n\t\t},\n\t\t[Versions.AddChatMessage]: {\n\t\t\tup: (instance) => {\n\t\t\t\treturn { ...instance, chatMessage: '' }\n\t\t\t},\n\t\t\tdown: ({ chatMessage: _, ...instance }) => {\n\t\t\t\treturn instance\n\t\t\t},\n\t\t},\n\t},\n})\n\n/** @public */\nexport const InstancePresenceRecordType = createRecordType<TLInstancePresence>(\n\t'instance_presence',\n\t{\n\t\tmigrations: instancePresenceMigrations,\n\t\tvalidator: instancePresenceValidator,\n\t\tscope: 'presence',\n\t}\n).withDefaultProperties(() => ({\n\tlastActivityTimestamp: 0,\n\tfollowingUserId: null,\n\tcolor: '#FF0000',\n\tcamera: {\n\t\tx: 0,\n\t\ty: 0,\n\t\tz: 1,\n\t},\n\tcursor: {\n\t\tx: 0,\n\t\ty: 0,\n\t\ttype: 'default',\n\t\trotation: 0,\n\t},\n\tscreenBounds: {\n\t\tx: 0,\n\t\ty: 0,\n\t\tw: 1,\n\t\th: 1,\n\t},\n\tselectedIds: [],\n\tbrush: null,\n\tscribble: null,\n\tchatMessage: '',\n}))\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}