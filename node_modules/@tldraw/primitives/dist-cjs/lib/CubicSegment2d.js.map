{
  "version": 3,
  "sources": ["../../src/lib/CubicSegment2d.ts"],
  "sourcesContent": ["import { BaseSegment2d } from './BaseSegment2d'\nimport { Vec2d, VecLike } from './Vec2d'\n\n/** @public */\nexport interface CubicSegment2dModel {\n\ta: VecLike\n\tb: VecLike\n\tc: VecLike\n\td: VecLike\n\tp: number\n}\n\n/** @public */\nexport class CubicSegment2d extends BaseSegment2d<CubicSegment2dModel> {\n\tconstructor(a: VecLike, b: VecLike, c: VecLike, d: VecLike, p = 25) {\n\t\tsuper({ a, b, c, d, p })\n\t}\n\n\t[Symbol.iterator] = function* (this: InstanceType<typeof CubicSegment2d>) {\n\t\tconst { a, b, c, d } = this.values\n\t\tyield* [a, b, c, d]\n\t}\n\n\tgetPath(head = true) {\n\t\tconst { a, b, c, d } = this.values\n\n\t\tif (Vec2d.Equals(a, d)) return ''\n\n\t\treturn `${head ? `M${a.x.toFixed(2)},${a.y.toFixed(2)}C` : ``}${b.x.toFixed(2)},${b.y.toFixed(\n\t\t\t2\n\t\t)} ${c.x.toFixed(2)},${c.y.toFixed(2)} ${d.x.toFixed(2)},${d.y.toFixed(2)}`\n\t}\n\n\tgetPoint(t: number) {\n\t\tconst { a, b, c, d } = this.values\n\n\t\tif (t <= 0) return Vec2d.From(a)\n\t\tif (t >= 1) return Vec2d.From(d)\n\n\t\treturn new Vec2d(\n\t\t\t(1 - t) * (1 - t) * (1 - t) * a.x +\n\t\t\t\t3 * ((1 - t) * (1 - t)) * t * b.x +\n\t\t\t\t3 * (1 - t) * (t * t) * c.x +\n\t\t\t\tt * t * t * d.x,\n\t\t\t(1 - t) * (1 - t) * (1 - t) * a.y +\n\t\t\t\t3 * ((1 - t) * (1 - t)) * t * b.y +\n\t\t\t\t3 * (1 - t) * (t * t) * c.y +\n\t\t\t\tt * t * t * d.y\n\t\t)\n\t}\n\n\tgetX(t: number) {\n\t\tconst { a, b, c, d } = this.values\n\n\t\treturn (\n\t\t\t(1 - t) * (1 - t) * (1 - t) * a.x +\n\t\t\t3 * ((1 - t) * (1 - t)) * t * b.x +\n\t\t\t3 * (1 - t) * (t * t) * c.x +\n\t\t\tt * t * t * d.x\n\t\t)\n\t}\n\n\tgetY(t: number) {\n\t\tconst { a, b, c, d } = this.values\n\n\t\treturn (\n\t\t\t(1 - t) * (1 - t) * (1 - t) * a.y +\n\t\t\t3 * ((1 - t) * (1 - t)) * t * b.y +\n\t\t\t3 * (1 - t) * (t * t) * c.y +\n\t\t\tt * t * t * d.y\n\t\t)\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA8B;AAC9B,mBAA+B;AAYxB,MAAM,uBAAuB,mCAAmC;AAAA,EACtE,YAAY,GAAY,GAAY,GAAY,GAAY,IAAI,IAAI;AACnE,UAAM,EAAE,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC;AAAA,EACxB;AAAA,EAEA,CAAC,OAAO,QAAQ,IAAI,aAAsD;AACzE,UAAM,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,KAAK;AAC5B,WAAO,CAAC,GAAG,GAAG,GAAG,CAAC;AAAA,EACnB;AAAA,EAEA,QAAQ,OAAO,MAAM;AACpB,UAAM,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,KAAK;AAE5B,QAAI,mBAAM,OAAO,GAAG,CAAC;AAAG,aAAO;AAE/B,WAAO,GAAG,OAAO,IAAI,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,OAAO,KAAK,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE;AAAA,MACrF;AAAA,IACD,KAAK,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC;AAAA,EACzE;AAAA,EAEA,SAAS,GAAW;AACnB,UAAM,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,KAAK;AAE5B,QAAI,KAAK;AAAG,aAAO,mBAAM,KAAK,CAAC;AAC/B,QAAI,KAAK;AAAG,aAAO,mBAAM,KAAK,CAAC;AAE/B,WAAO,IAAI;AAAA,OACT,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,EAAE,IAC/B,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,IAChC,KAAK,IAAI,MAAM,IAAI,KAAK,EAAE,IAC1B,IAAI,IAAI,IAAI,EAAE;AAAA,OACd,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,EAAE,IAC/B,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,IAChC,KAAK,IAAI,MAAM,IAAI,KAAK,EAAE,IAC1B,IAAI,IAAI,IAAI,EAAE;AAAA,IAChB;AAAA,EACD;AAAA,EAEA,KAAK,GAAW;AACf,UAAM,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,KAAK;AAE5B,YACE,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,EAAE,IAChC,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,IAChC,KAAK,IAAI,MAAM,IAAI,KAAK,EAAE,IAC1B,IAAI,IAAI,IAAI,EAAE;AAAA,EAEhB;AAAA,EAEA,KAAK,GAAW;AACf,UAAM,EAAE,GAAG,GAAG,GAAG,EAAE,IAAI,KAAK;AAE5B,YACE,IAAI,MAAM,IAAI,MAAM,IAAI,KAAK,EAAE,IAChC,MAAM,IAAI,MAAM,IAAI,MAAM,IAAI,EAAE,IAChC,KAAK,IAAI,MAAM,IAAI,KAAK,EAAE,IAC1B,IAAI,IAAI,IAAI,EAAE;AAAA,EAEhB;AACD;",
  "names": []
}
