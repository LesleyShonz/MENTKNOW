import { createRecordType, defineMigrations } from "@tldraw/store";
import { T } from "@tldraw/validate";
import {
  bookmarkAssetMigrations,
  bookmarkAssetValidator
} from "../assets/TLBookmarkAsset.mjs";
import { imageAssetMigrations, imageAssetValidator } from "../assets/TLImageAsset.mjs";
import { videoAssetMigrations, videoAssetValidator } from "../assets/TLVideoAsset.mjs";
const assetValidator = T.model(
  "asset",
  T.union("type", {
    image: imageAssetValidator,
    video: videoAssetValidator,
    bookmark: bookmarkAssetValidator
  })
);
const assetMigrations = defineMigrations({
  subTypeKey: "type",
  subTypeMigrations: {
    image: imageAssetMigrations,
    video: videoAssetMigrations,
    bookmark: bookmarkAssetMigrations
  }
});
const AssetRecordType = createRecordType("asset", {
  migrations: assetMigrations,
  validator: assetValidator,
  scope: "document"
});
export {
  AssetRecordType,
  assetMigrations,
  assetValidator
};
//# sourceMappingURL=TLAsset.mjs.map
