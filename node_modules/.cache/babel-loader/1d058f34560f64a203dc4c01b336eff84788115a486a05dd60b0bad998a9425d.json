{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { pasteFiles } from \"./pasteFiles.mjs\";\nfunction pasteUrl(_x, _x2, _x3) {\n  return _pasteUrl.apply(this, arguments);\n}\nfunction _pasteUrl() {\n  _pasteUrl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(editor, url, point) {\n    var _resp$headers$get, resp;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return fetch(url);\n        case 3:\n          resp = _context.sent;\n          if (!((_resp$headers$get = resp.headers.get(\"content-type\")) !== null && _resp$headers$get !== void 0 && _resp$headers$get.match(/^image\\//))) {\n            _context.next = 8;\n            break;\n          }\n          editor.mark(\"paste\");\n          pasteFiles(editor, [url]);\n          return _context.abrupt(\"return\");\n        case 8:\n          _context.next = 13;\n          break;\n        case 10:\n          _context.prev = 10;\n          _context.t0 = _context[\"catch\"](0);\n          if (_context.t0.message !== \"Failed to fetch\") {\n            console.error(_context.t0);\n          }\n        case 13:\n          editor.mark(\"paste\");\n          _context.next = 16;\n          return editor.putExternalContent({\n            type: \"url\",\n            point: point,\n            url: url\n          });\n        case 16:\n          return _context.abrupt(\"return\", _context.sent);\n        case 17:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[0, 10]]);\n  }));\n  return _pasteUrl.apply(this, arguments);\n}\nexport { pasteUrl };","map":{"version":3,"names":["pasteFiles","pasteUrl","_x","_x2","_x3","_pasteUrl","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","editor","url","point","_resp$headers$get","resp","wrap","_callee$","_context","prev","next","fetch","sent","headers","get","match","abrupt","t0","message","console","error","putExternalContent","type","stop"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/clipboard/pasteUrl.ts"],"sourcesContent":["import { Editor } from '@tldraw/editor'\nimport { VecLike } from '@tldraw/primitives'\nimport { pasteFiles } from './pasteFiles'\n\n/**\n * When the clipboard has plain text that is a valid URL, create a bookmark shape and insert it into\n * the scene\n *\n * @param editor - The editor instance.\n * @param url - The URL to paste.\n * @param point - (optional) The point at which to paste the file.\n * @internal\n */\nexport async function pasteUrl(editor: Editor, url: string, point?: VecLike) {\n\t// Lets see if its an image and we have CORs\n\ttry {\n\t\tconst resp = await fetch(url)\n\t\tif (resp.headers.get('content-type')?.match(/^image\\//)) {\n\t\t\teditor.mark('paste')\n\t\t\tpasteFiles(editor, [url])\n\t\t\treturn\n\t\t}\n\t} catch (err: any) {\n\t\tif (err.message !== 'Failed to fetch') {\n\t\t\tconsole.error(err)\n\t\t}\n\t}\n\n\teditor.mark('paste')\n\n\treturn await editor.putExternalContent({\n\t\ttype: 'url',\n\t\tpoint,\n\t\turl,\n\t})\n}\n"],"mappings":";;AAEA,SAASA,UAAA,QAAkB;AAAA,SAWLC,SAAAC,EAAA,EAAAC,GAAA,EAAAC,GAAA;EAAA,OAAAC,SAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,UAAA;EAAAA,SAAA,GAAAG,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,CAAtB,SAAAC,QAA+BC,MAAA,EAAgBC,GAAA,EAAaC,KAAA;IAAA,IAAAC,iBAAA,EAAAC,IAAA;IAAA,OAAAP,mBAAA,GAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAGvCC,KAAA,CAAMT,GAAG;QAAA;UAAtBG,IAAA,GAAAG,QAAA,CAAAI,IAAA;UAAA,OAAAR,iBAAA,GACFC,IAAA,CAAKQ,OAAA,CAAQC,GAAA,CAAI,cAAc,eAAAV,iBAAA,eAA/BA,iBAAA,CAAkCW,KAAA,CAAM,UAAU;YAAAP,QAAA,CAAAE,IAAA;YAAA;UAAA;UACrDT,MAAA,CAAOF,IAAA,CAAK,OAAO;UACnBV,UAAA,CAAWY,MAAA,EAAQ,CAACC,GAAG,CAAC;UAAA,OAAAM,QAAA,CAAAQ,MAAA;QAAA;UAAAR,QAAA,CAAAE,IAAA;UAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAS,EAAA,GAAAT,QAAA;UAIzB,IAAIA,QAAA,CAAAS,EAAA,CAAIC,OAAA,KAAY,mBAAmB;YACtCC,OAAA,CAAQC,KAAA,CAAAZ,QAAA,CAAAS,EAAS;UAClB;QAAA;UAGDhB,MAAA,CAAOF,IAAA,CAAK,OAAO;UAAAS,QAAA,CAAAE,IAAA;UAAA,OAENT,MAAA,CAAOoB,kBAAA,CAAmB;YACtCC,IAAA,EAAM;YACNnB,KAAA,EAAAA,KAAA;YACAD,GAAA,EAAAA;UACD,CAAC;QAAA;UAAA,OAAAM,QAAA,CAAAQ,MAAA,WAAAR,QAAA,CAAAI,IAAA;QAAA;QAAA;UAAA,OAAAJ,QAAA,CAAAe,IAAA;MAAA;IAAA,GAAAvB,OAAA;EAAA,CACF;EAAA,OAAAN,SAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}