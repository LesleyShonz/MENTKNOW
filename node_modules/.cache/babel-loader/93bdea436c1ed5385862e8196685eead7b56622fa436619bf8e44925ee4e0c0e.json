{"ast":null,"code":"import { useEditor } from \"@tldraw/editor\";\nimport { useCallback, useEffect, useRef } from \"react\";\nimport { useValue } from \"signia-react\";\nimport { useEvents } from \"./useEventsProvider.mjs\";\nfunction useMenuIsOpen(id, cb) {\n  var editor = useEditor();\n  var rIsOpen = useRef(false);\n  var trackEvent = useEvents();\n  var onOpenChange = useCallback(function (isOpen2) {\n    rIsOpen.current = isOpen2;\n    editor.batch(function () {\n      if (isOpen2) {\n        editor.complete();\n        editor.addOpenMenu(id);\n      } else {\n        editor.deleteOpenMenu(id);\n        editor.openMenus.forEach(function (menuId) {\n          if (menuId.startsWith(id)) {\n            editor.deleteOpenMenu(menuId);\n          }\n        });\n      }\n      cb === null || cb === void 0 || cb(isOpen2);\n    });\n  }, [editor, id, cb]);\n  useEffect(function () {\n    if (rIsOpen.current) {\n      trackEvent(\"open-menu\", {\n        source: \"unknown\",\n        id: id\n      });\n      editor.addOpenMenu(id);\n    }\n    return function () {\n      if (rIsOpen.current) {\n        editor.deleteOpenMenu(id);\n        editor.openMenus.forEach(function (menuId) {\n          if (menuId.startsWith(id)) {\n            trackEvent(\"close-menu\", {\n              source: \"unknown\",\n              id: id\n            });\n            editor.deleteOpenMenu(menuId);\n          }\n        });\n        rIsOpen.current = false;\n      }\n    };\n  }, [editor, id, trackEvent]);\n  var isOpen = useValue(\"is menu open\", function () {\n    return editor.openMenus.includes(id);\n  }, [editor, id]);\n  return [isOpen, onOpenChange];\n}\nexport { useMenuIsOpen };","map":{"version":3,"names":["useEditor","useCallback","useEffect","useRef","useValue","useEvents","useMenuIsOpen","id","cb","editor","rIsOpen","trackEvent","onOpenChange","isOpen2","current","batch","complete","addOpenMenu","deleteOpenMenu","openMenus","forEach","menuId","startsWith","source","isOpen","includes"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useMenuIsOpen.ts"],"sourcesContent":["import { useEditor } from '@tldraw/editor'\nimport { useCallback, useEffect, useRef } from 'react'\nimport { useValue } from 'signia-react'\nimport { useEvents } from './useEventsProvider'\n\n/** @public */\nexport function useMenuIsOpen(id: string, cb?: (isOpen: boolean) => void) {\n\tconst editor = useEditor()\n\tconst rIsOpen = useRef(false)\n\tconst trackEvent = useEvents()\n\n\tconst onOpenChange = useCallback(\n\t\t(isOpen: boolean) => {\n\t\t\trIsOpen.current = isOpen\n\t\t\teditor.batch(() => {\n\t\t\t\tif (isOpen) {\n\t\t\t\t\teditor.complete()\n\t\t\t\t\teditor.addOpenMenu(id)\n\t\t\t\t} else {\n\t\t\t\t\teditor.deleteOpenMenu(id)\n\t\t\t\t\teditor.openMenus.forEach((menuId) => {\n\t\t\t\t\t\tif (menuId.startsWith(id)) {\n\t\t\t\t\t\t\teditor.deleteOpenMenu(menuId)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tcb?.(isOpen)\n\t\t\t})\n\t\t},\n\t\t[editor, id, cb]\n\t)\n\n\tuseEffect(() => {\n\t\t// When the effect runs, if the menu is open then\n\t\t// add it to the open menus list.\n\n\t\t// This is necessary for cases where the user closes\n\t\t// the parent of a submenu before closing the submenu.\n\t\t// There is some duplication between this and `onOpenChange`\n\t\t// hook but it's necessary to handle the case where the\n\t\t// this effect runs twice or re-runs.\n\t\tif (rIsOpen.current) {\n\t\t\ttrackEvent('open-menu', { source: 'unknown', id })\n\t\t\teditor.addOpenMenu(id)\n\t\t}\n\n\t\treturn () => {\n\t\t\tif (rIsOpen.current) {\n\t\t\t\t// Close menu on unmount\n\t\t\t\teditor.deleteOpenMenu(id)\n\n\t\t\t\t// Close menu and all submenus when the parent is closed\n\t\t\t\teditor.openMenus.forEach((menuId) => {\n\t\t\t\t\tif (menuId.startsWith(id)) {\n\t\t\t\t\t\ttrackEvent('close-menu', { source: 'unknown', id })\n\t\t\t\t\t\teditor.deleteOpenMenu(menuId)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t\t\trIsOpen.current = false\n\t\t\t}\n\t\t}\n\t}, [editor, id, trackEvent])\n\n\tconst isOpen = useValue('is menu open', () => editor.openMenus.includes(id), [editor, id])\n\n\treturn [isOpen, onOpenChange] as const\n}\n"],"mappings":"AAAA,SAASA,SAAA,QAAiB;AAC1B,SAASC,WAAA,EAAaC,SAAA,EAAWC,MAAA,QAAc;AAC/C,SAASC,QAAA,QAAgB;AACzB,SAASC,SAAA,QAAiB;AAGnB,SAASC,cAAcC,EAAA,EAAYC,EAAA,EAAgC;EACzE,IAAMC,MAAA,GAAST,SAAA,CAAU;EACzB,IAAMU,OAAA,GAAUP,MAAA,CAAO,KAAK;EAC5B,IAAMQ,UAAA,GAAaN,SAAA,CAAU;EAE7B,IAAMO,YAAA,GAAeX,WAAA,CACpB,UAACY,OAAA,EAAoB;IACpBH,OAAA,CAAQI,OAAA,GAAUD,OAAA;IAClBJ,MAAA,CAAOM,KAAA,CAAM,YAAM;MAClB,IAAIF,OAAA,EAAQ;QACXJ,MAAA,CAAOO,QAAA,CAAS;QAChBP,MAAA,CAAOQ,WAAA,CAAYV,EAAE;MACtB,OAAO;QACNE,MAAA,CAAOS,cAAA,CAAeX,EAAE;QACxBE,MAAA,CAAOU,SAAA,CAAUC,OAAA,CAAQ,UAACC,MAAA,EAAW;UACpC,IAAIA,MAAA,CAAOC,UAAA,CAAWf,EAAE,GAAG;YAC1BE,MAAA,CAAOS,cAAA,CAAeG,MAAM;UAC7B;QACD,CAAC;MACF;MAEAb,EAAA,aAAAA,EAAA,eAAAA,EAAA,CAAKK,OAAM;IACZ,CAAC;EACF,GACA,CAACJ,MAAA,EAAQF,EAAA,EAAIC,EAAE,CAChB;EAEAN,SAAA,CAAU,YAAM;IASf,IAAIQ,OAAA,CAAQI,OAAA,EAAS;MACpBH,UAAA,CAAW,aAAa;QAAEY,MAAA,EAAQ;QAAWhB,EAAA,EAAAA;MAAG,CAAC;MACjDE,MAAA,CAAOQ,WAAA,CAAYV,EAAE;IACtB;IAEA,OAAO,YAAM;MACZ,IAAIG,OAAA,CAAQI,OAAA,EAAS;QAEpBL,MAAA,CAAOS,cAAA,CAAeX,EAAE;QAGxBE,MAAA,CAAOU,SAAA,CAAUC,OAAA,CAAQ,UAACC,MAAA,EAAW;UACpC,IAAIA,MAAA,CAAOC,UAAA,CAAWf,EAAE,GAAG;YAC1BI,UAAA,CAAW,cAAc;cAAEY,MAAA,EAAQ;cAAWhB,EAAA,EAAAA;YAAG,CAAC;YAClDE,MAAA,CAAOS,cAAA,CAAeG,MAAM;UAC7B;QACD,CAAC;QAEDX,OAAA,CAAQI,OAAA,GAAU;MACnB;IACD;EACD,GAAG,CAACL,MAAA,EAAQF,EAAA,EAAII,UAAU,CAAC;EAE3B,IAAMa,MAAA,GAASpB,QAAA,CAAS,gBAAgB;IAAA,OAAMK,MAAA,CAAOU,SAAA,CAAUM,QAAA,CAASlB,EAAE;EAAA,GAAG,CAACE,MAAA,EAAQF,EAAE,CAAC;EAEzF,OAAO,CAACiB,MAAA,EAAQZ,YAAY;AAC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}