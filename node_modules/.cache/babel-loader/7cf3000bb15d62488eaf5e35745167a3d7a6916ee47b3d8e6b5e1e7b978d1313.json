{"ast":null,"code":"// src/useValue.ts\nimport { useMemo, useSyncExternalStore } from \"react\";\nimport { computed, react } from \"signia\";\nfunction useValue() {\n  var args = arguments;\n  var deps = args.length === 3 ? args[2] : [args[0]];\n  var name = args.length === 3 ? args[0] : \"useValue(\".concat(args[0].name, \")\");\n  var $val = useMemo(function () {\n    if (args.length === 1) {\n      return args[0];\n    }\n    return computed(name, args[1]);\n  }, deps);\n  var _useMemo = useMemo(function () {\n      return {\n        subscribe: function subscribe(listen) {\n          return react(\"useValue(\".concat(name, \")\"), function () {\n            $val.value;\n            listen();\n          });\n        },\n        getSnapshot: function getSnapshot() {\n          return $val.value;\n        }\n      };\n    }, [$val]),\n    subscribe = _useMemo.subscribe,\n    getSnapshot = _useMemo.getSnapshot;\n  return useSyncExternalStore(subscribe, getSnapshot, getSnapshot);\n}\nexport { useValue };","map":{"version":3,"names":["useMemo","useSyncExternalStore","computed","react","useValue","args","arguments","deps","length","name","concat","$val","_useMemo","subscribe","listen","value","getSnapshot"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/signia-react/src/useValue.ts"],"sourcesContent":["/* eslint-disable prefer-rest-params */\nimport { useMemo, useSyncExternalStore } from 'react'\nimport { computed, react, Signal } from 'signia'\n\n/**\n * Extracts the value from a signal and subscribes to it.\n *\n * Note that you do not need to use this hook if you are doing one of the following:\n *   - Wrapping the component with [[track]],\n * \t - Installing the jsx integration with [[signia-react-jsx.install]]\n *\n * @example\n * ```ts\n * const Counter: React.FC = () => {\n *   const $count = useAtom('count', 0)\n *   const increment = useCallback(() => $count.set($count.value + 1), [count])\n *   const currentCount = useValue($count)\n *   return <button onClick={increment}>{currentCount}</button>\n * }\n * ```\n *\n * You can also pass a function to compute the value and it will be memoized as in [[useComputed]]:\n *\n * @example\n * ```ts\n * type GreeterProps = {\n *   firstName: Signal<string>\n *   lastName: Signal<string>\n * }\n *\n * const Greeter = track(function Greeter({ firstName, lastName }: GreeterProps) {\n *   const fullName = useValue('fullName', () => `${firstName.value} ${lastName.value}`, [\n *     firstName,\n *     lastName,\n *   ])\n *   return <div>Hello {fullName}!</div>\n * })\n * ```\n *\n * @public\n */\nexport function useValue<Value>(value: Signal<Value>): Value\n/** @public */\nexport function useValue<Value>(name: string, fn: () => Value, deps: unknown[]): Value\n/** @public */\nexport function useValue() {\n\tconst args = arguments\n\t// deps will be either the computed or the deps array\n\tconst deps = args.length === 3 ? args[2] : [args[0]]\n\tconst name = args.length === 3 ? args[0] : `useValue(${args[0].name})`\n\tconst $val = useMemo(() => {\n\t\tif (args.length === 1) {\n\t\t\treturn args[0]\n\t\t}\n\t\treturn computed(name, args[1])\n\t}, deps)\n\n\tconst { subscribe, getSnapshot } = useMemo(() => {\n\t\treturn {\n\t\t\tsubscribe: (listen: () => void) => {\n\t\t\t\treturn react(`useValue(${name})`, () => {\n\t\t\t\t\t$val.value\n\t\t\t\t\tlisten()\n\t\t\t\t})\n\t\t\t},\n\t\t\tgetSnapshot: () => $val.value,\n\t\t}\n\t}, [$val])\n\n\treturn useSyncExternalStore(subscribe, getSnapshot, getSnapshot)\n}\n"],"mappings":";AACA,SAASA,OAAA,EAASC,oBAAA,QAA4B;AAC9C,SAASC,QAAA,EAAUC,KAAA,QAAqB;AA2CjC,SAASC,SAAA,EAAW;EAC1B,IAAMC,IAAA,GAAOC,SAAA;EAEb,IAAMC,IAAA,GAAOF,IAAA,CAAKG,MAAA,KAAW,IAAIH,IAAA,CAAK,CAAC,IAAI,CAACA,IAAA,CAAK,CAAC,CAAC;EACnD,IAAMI,IAAA,GAAOJ,IAAA,CAAKG,MAAA,KAAW,IAAIH,IAAA,CAAK,CAAC,gBAAAK,MAAA,CAAgBL,IAAA,CAAK,CAAC,EAAEI,IAAA;EAC/D,IAAME,IAAA,GAAOX,OAAA,CAAQ,YAAM;IAC1B,IAAIK,IAAA,CAAKG,MAAA,KAAW,GAAG;MACtB,OAAOH,IAAA,CAAK,CAAC;IACd;IACA,OAAOH,QAAA,CAASO,IAAA,EAAMJ,IAAA,CAAK,CAAC,CAAC;EAC9B,GAAGE,IAAI;EAEP,IAAAK,QAAA,GAAmCZ,OAAA,CAAQ,YAAM;MAChD,OAAO;QACNa,SAAA,EAAW,SAAAA,UAACC,MAAA,EAAuB;UAClC,OAAOX,KAAA,aAAAO,MAAA,CAAkBD,IAAA,QAAS,YAAM;YACvCE,IAAA,CAAKI,KAAA;YACLD,MAAA,CAAO;UACR,CAAC;QACF;QACAE,WAAA,EAAa,SAAAA,YAAA;UAAA,OAAML,IAAA,CAAKI,KAAA;QAAA;MACzB;IACD,GAAG,CAACJ,IAAI,CAAC;IAVDE,SAAA,GAAAD,QAAA,CAAAC,SAAA;IAAWG,WAAA,GAAAJ,QAAA,CAAAI,WAAA;EAYnB,OAAOf,oBAAA,CAAqBY,SAAA,EAAWG,WAAA,EAAaA,WAAW;AAChE"},"metadata":{},"sourceType":"module","externalDependencies":[]}