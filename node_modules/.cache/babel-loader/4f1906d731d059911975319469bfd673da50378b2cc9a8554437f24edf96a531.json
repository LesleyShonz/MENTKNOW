{"ast":null,"code":"/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js';\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport var decodeQueryParams = function decodeQueryParams(url) {\n  /**\n   * @type {Object<string,string>}\n   */\n  var query = {};\n  var urlQuerySplit = url.split('?');\n  var pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&');\n  for (var i = 0; i < pairs.length; i++) {\n    var item = pairs[i];\n    if (item.length > 0) {\n      var pair = item.split('=');\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\n    }\n  }\n  return query;\n};\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport var encodeQueryParams = function encodeQueryParams(params) {\n  return object.map(params, function (val, key) {\n    return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(val));\n  }).join('&');\n};","map":{"version":3,"names":["object","decodeQueryParams","url","query","urlQuerySplit","split","pairs","length","i","item","pair","decodeURIComponent","encodeQueryParams","params","map","val","key","concat","encodeURIComponent","join"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/lib0/url.js"],"sourcesContent":["/**\n * Utility module to work with urls.\n *\n * @module url\n */\n\nimport * as object from './object.js'\n\n/**\n * Parse query parameters from an url.\n *\n * @param {string} url\n * @return {Object<string,string>}\n */\nexport const decodeQueryParams = url => {\n  /**\n   * @type {Object<string,string>}\n   */\n  const query = {}\n  const urlQuerySplit = url.split('?')\n  const pairs = urlQuerySplit[urlQuerySplit.length - 1].split('&')\n  for (let i = 0; i < pairs.length; i++) {\n    const item = pairs[i]\n    if (item.length > 0) {\n      const pair = item.split('=')\n      query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '')\n    }\n  }\n  return query\n}\n\n/**\n * @param {Object<string,string>} params\n * @return {string}\n */\nexport const encodeQueryParams = params =>\n  object.map(params, (val, key) => `${encodeURIComponent(key)}=${encodeURIComponent(val)}`).join('&')\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAO,KAAKA,MAAM,MAAM,aAAa;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAGC,GAAG,EAAI;EACtC;AACF;AACA;EACE,IAAMC,KAAK,GAAG,CAAC,CAAC;EAChB,IAAMC,aAAa,GAAGF,GAAG,CAACG,KAAK,CAAC,GAAG,CAAC;EACpC,IAAMC,KAAK,GAAGF,aAAa,CAACA,aAAa,CAACG,MAAM,GAAG,CAAC,CAAC,CAACF,KAAK,CAAC,GAAG,CAAC;EAChE,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,KAAK,CAACC,MAAM,EAAEC,CAAC,EAAE,EAAE;IACrC,IAAMC,IAAI,GAAGH,KAAK,CAACE,CAAC,CAAC;IACrB,IAAIC,IAAI,CAACF,MAAM,GAAG,CAAC,EAAE;MACnB,IAAMG,IAAI,GAAGD,IAAI,CAACJ,KAAK,CAAC,GAAG,CAAC;MAC5BF,KAAK,CAACQ,kBAAkB,CAACD,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGC,kBAAkB,CAACD,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;IACxE;EACF;EACA,OAAOP,KAAK;AACd,CAAC;;AAED;AACA;AACA;AACA;AACA,OAAO,IAAMS,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAGC,MAAM;EAAA,OACrCb,MAAM,CAACc,GAAG,CAACD,MAAM,EAAE,UAACE,GAAG,EAAEC,GAAG;IAAA,UAAAC,MAAA,CAAQC,kBAAkB,CAACF,GAAG,CAAC,OAAAC,MAAA,CAAIC,kBAAkB,CAACH,GAAG,CAAC;EAAA,CAAE,CAAC,CAACI,IAAI,CAAC,GAAG,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}