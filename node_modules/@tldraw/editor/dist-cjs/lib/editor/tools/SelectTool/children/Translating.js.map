{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/tools/SelectTool/children/Translating.ts"],
  "sourcesContent": ["import { Box2d, Matrix2d, Matrix2dModel, Vec2d } from '@tldraw/primitives'\nimport { PageRecordType, TLShape, TLShapePartial, isPageId } from '@tldraw/tlschema'\nimport { compact } from '@tldraw/utils'\nimport type { Editor } from '../../../Editor'\nimport { DragAndDropManager } from '../../../managers/DragAndDropManager'\nimport { SnapPoint } from '../../../managers/SnapManager'\nimport { TLEventHandlers, TLPointerEventInfo } from '../../../types/event-types'\nimport { StateNode } from '../../StateNode'\n\nexport class Translating extends StateNode {\n\tstatic override id = 'translating'\n\n\tinfo = {} as TLPointerEventInfo & {\n\t\ttarget: 'shape'\n\t\tisCreating?: boolean\n\t\teditAfterComplete?: boolean\n\t\tonInteractionEnd?: string\n\t}\n\n\tselectionSnapshot: TranslatingSnapshot = {} as any\n\n\tsnapshot: TranslatingSnapshot = {} as any\n\n\tmarkId = ''\n\n\tisCloning = false\n\tisCreating = false\n\teditAfterComplete = false\n\n\tdragAndDropManager = new DragAndDropManager(this.editor)\n\n\tonEnter = (\n\t\tinfo: TLPointerEventInfo & {\n\t\t\ttarget: 'shape'\n\t\t\tisCreating?: boolean\n\t\t\teditAfterComplete?: boolean\n\t\t\tonInteractionEnd?: string\n\t\t}\n\t) => {\n\t\tconst { isCreating = false, editAfterComplete = false } = info\n\n\t\tthis.info = info\n\t\tthis.isCreating = isCreating\n\t\tthis.editAfterComplete = editAfterComplete\n\n\t\tthis.markId = isCreating ? 'creating' : this.editor.mark('translating')\n\t\tthis.handleEnter(info)\n\t\tthis.editor.on('tick', this.updateParent)\n\t}\n\n\tupdateParent = () => {\n\t\tconst { snapshot } = this\n\t\tthis.dragAndDropManager.updateDroppingNode(snapshot.movingShapes, this.updateParentTransforms)\n\t}\n\n\tonExit = () => {\n\t\tthis.editor.off('tick', this.updateParent)\n\t\tthis.selectionSnapshot = {} as any\n\t\tthis.snapshot = {} as any\n\t\tthis.editor.snaps.clear()\n\t\tthis.editor.setCursor({ type: 'default' })\n\t\tthis.dragAndDropManager.clear()\n\t}\n\n\tonPointerMove = () => {\n\t\tthis.updateShapes()\n\t}\n\n\tonKeyDown = () => {\n\t\tif (this.editor.inputs.altKey && !this.isCloning) {\n\t\t\tthis.startCloning()\n\t\t\treturn\n\t\t}\n\n\t\t// need to update in case user pressed a different modifier key\n\t\tthis.updateShapes()\n\t}\n\n\tonKeyUp: TLEventHandlers['onKeyUp'] = () => {\n\t\tif (!this.editor.inputs.altKey && this.isCloning) {\n\t\t\tthis.stopCloning()\n\t\t\treturn\n\t\t}\n\n\t\t// need to update in case user pressed a different modifier key\n\t\tthis.updateShapes()\n\t}\n\n\tonPointerUp: TLEventHandlers['onPointerUp'] = () => {\n\t\tthis.complete()\n\t}\n\n\tonComplete: TLEventHandlers['onComplete'] = () => {\n\t\tthis.complete()\n\t}\n\n\tonCancel: TLEventHandlers['onCancel'] = () => {\n\t\tthis.cancel()\n\t}\n\n\treset() {\n\t\tthis.editor.bailToMark(this.markId)\n\t}\n\n\tprotected startCloning() {\n\t\tif (this.isCreating) return\n\n\t\tthis.isCloning = true\n\t\tthis.reset()\n\t\tthis.markId = this.editor.mark('translating')\n\n\t\tthis.editor.duplicateShapes()\n\n\t\tthis.snapshot = getTranslatingSnapshot(this.editor)\n\t\tthis.handleStart()\n\t\tthis.updateShapes()\n\t}\n\n\tprotected stopCloning() {\n\t\tthis.isCloning = false\n\t\tthis.snapshot = this.selectionSnapshot\n\t\tthis.reset()\n\t\tthis.markId = this.editor.mark('translating')\n\t\tthis.updateShapes()\n\t}\n\n\tprotected complete() {\n\t\tthis.updateShapes()\n\t\tthis.dragAndDropManager.dropShapes(this.snapshot.movingShapes)\n\t\tthis.handleEnd()\n\n\t\tif (this.editor.instanceState.isToolLocked && this.info.onInteractionEnd) {\n\t\t\tthis.editor.setSelectedTool(this.info.onInteractionEnd)\n\t\t} else {\n\t\t\tif (this.editAfterComplete) {\n\t\t\t\tconst onlySelected = this.editor.onlySelectedShape\n\t\t\t\tif (onlySelected) {\n\t\t\t\t\tthis.editor.setEditingId(onlySelected.id)\n\t\t\t\t\tthis.editor.setSelectedTool('select')\n\t\t\t\t\tthis.editor.root.current.value!.transition('editing_shape', {})\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.parent.transition('idle', {})\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate cancel() {\n\t\tthis.reset()\n\t\tif (this.info.onInteractionEnd) {\n\t\t\tthis.editor.setSelectedTool(this.info.onInteractionEnd)\n\t\t} else {\n\t\t\tthis.parent.transition('idle', this.info)\n\t\t}\n\t}\n\n\tprotected handleEnter(info: TLPointerEventInfo & { target: 'shape' }) {\n\t\tthis.isCloning = false\n\t\tthis.info = info\n\n\t\tthis.editor.setCursor({ type: 'move' })\n\t\tthis.selectionSnapshot = getTranslatingSnapshot(this.editor)\n\n\t\t// Don't clone on create; otherwise clone on altKey\n\t\tif (!this.isCreating) {\n\t\t\tif (this.editor.inputs.altKey) {\n\t\t\t\tthis.startCloning()\n\t\t\t\treturn\n\t\t\t}\n\t\t}\n\n\t\tthis.snapshot = this.selectionSnapshot\n\t\tthis.handleStart()\n\t\tthis.updateShapes()\n\t}\n\n\tprotected handleStart() {\n\t\tconst { movingShapes } = this.snapshot\n\n\t\tconst changes: TLShapePartial[] = []\n\n\t\tmovingShapes.forEach((shape) => {\n\t\t\tconst util = this.editor.getShapeUtil(shape)\n\t\t\tconst change = util.onTranslateStart?.(shape)\n\t\t\tif (change) {\n\t\t\t\tchanges.push(change)\n\t\t\t}\n\t\t})\n\n\t\tif (changes.length > 0) {\n\t\t\tthis.editor.updateShapes(changes)\n\t\t}\n\t}\n\n\tprotected handleEnd() {\n\t\tconst { movingShapes } = this.snapshot\n\n\t\tconst changes: TLShapePartial[] = []\n\n\t\tmovingShapes.forEach((shape) => {\n\t\t\tconst current = this.editor.getShapeById(shape.id)!\n\t\t\tconst util = this.editor.getShapeUtil(shape)\n\t\t\tconst change = util.onTranslateEnd?.(shape, current)\n\t\t\tif (change) {\n\t\t\t\tchanges.push(change)\n\t\t\t}\n\t\t})\n\n\t\tif (changes.length > 0) {\n\t\t\tthis.editor.updateShapes(changes)\n\t\t}\n\t}\n\n\tprotected handleChange() {\n\t\tconst { movingShapes } = this.snapshot\n\n\t\tconst changes: TLShapePartial[] = []\n\n\t\tmovingShapes.forEach((shape) => {\n\t\t\tconst current = this.editor.getShapeById(shape.id)!\n\t\t\tconst util = this.editor.getShapeUtil(shape)\n\t\t\tconst change = util.onTranslate?.(shape, current)\n\t\t\tif (change) {\n\t\t\t\tchanges.push(change)\n\t\t\t}\n\t\t})\n\n\t\tif (changes.length > 0) {\n\t\t\tthis.editor.updateShapes(changes)\n\t\t}\n\t}\n\n\tprotected updateShapes() {\n\t\tconst { snapshot } = this\n\t\tthis.dragAndDropManager.updateDroppingNode(snapshot.movingShapes, this.updateParentTransforms)\n\n\t\tmoveShapesToPoint({\n\t\t\teditor: this.editor,\n\t\t\tshapeSnapshots: snapshot.shapeSnapshots,\n\t\t\taveragePagePoint: snapshot.averagePagePoint,\n\t\t\tinitialSelectionPageBounds: snapshot.initialPageBounds,\n\t\t\tinitialSelectionSnapPoints: snapshot.initialSnapPoints,\n\t\t})\n\n\t\tthis.handleChange()\n\t}\n\n\tprotected updateParentTransforms = () => {\n\t\tconst {\n\t\t\teditor,\n\t\t\tsnapshot: { shapeSnapshots },\n\t\t} = this\n\t\tconst movingShapes: TLShape[] = []\n\n\t\tshapeSnapshots.forEach((shapeSnapshot) => {\n\t\t\tconst shape = editor.getShapeById(shapeSnapshot.shape.id)\n\t\t\tif (!shape) return null\n\t\t\tmovingShapes.push(shape)\n\n\t\t\tconst parentTransform = isPageId(shape.parentId)\n\t\t\t\t? null\n\t\t\t\t: Matrix2d.Inverse(editor.getPageTransformById(shape.parentId)!)\n\n\t\t\tshapeSnapshot.parentTransform = parentTransform\n\t\t})\n\t}\n}\n\nfunction getTranslatingSnapshot(editor: Editor) {\n\tconst movingShapes: TLShape[] = []\n\tconst pagePoints: Vec2d[] = []\n\n\tconst shapeSnapshots = compact(\n\t\teditor.selectedIds.map((id): null | MovingShapeSnapshot => {\n\t\t\tconst shape = editor.getShapeById(id)\n\t\t\tif (!shape) return null\n\t\t\tmovingShapes.push(shape)\n\n\t\t\tconst pagePoint = editor.getPagePointById(id)\n\t\t\tif (!pagePoint) return null\n\t\t\tpagePoints.push(pagePoint)\n\n\t\t\tconst parentTransform = PageRecordType.isId(shape.parentId)\n\t\t\t\t? null\n\t\t\t\t: Matrix2d.Inverse(editor.getPageTransformById(shape.parentId)!)\n\n\t\t\treturn {\n\t\t\t\tshape,\n\t\t\t\tpagePoint,\n\t\t\t\tparentTransform,\n\t\t\t}\n\t\t})\n\t)\n\n\treturn {\n\t\taveragePagePoint: Vec2d.Average(pagePoints),\n\t\tmovingShapes,\n\t\tshapeSnapshots,\n\t\tinitialPageBounds: editor.selectedPageBounds!,\n\t\tinitialSnapPoints:\n\t\t\teditor.selectedIds.length === 1\n\t\t\t\t? editor.snaps.snapPointsCache.get(editor.selectedIds[0])!\n\t\t\t\t: editor.selectedPageBounds\n\t\t\t\t? editor.selectedPageBounds.snapPoints.map((p, i) => ({\n\t\t\t\t\t\tid: 'selection:' + i,\n\t\t\t\t\t\tx: p.x,\n\t\t\t\t\t\ty: p.y,\n\t\t\t\t  }))\n\t\t\t\t: [],\n\t}\n}\n\nexport type TranslatingSnapshot = ReturnType<typeof getTranslatingSnapshot>\n\nexport interface MovingShapeSnapshot {\n\tshape: TLShape\n\tpagePoint: Vec2d\n\tparentTransform: Matrix2dModel | null\n}\n\nexport function moveShapesToPoint({\n\teditor,\n\tshapeSnapshots: snapshots,\n\taveragePagePoint,\n\tinitialSelectionPageBounds,\n\tinitialSelectionSnapPoints,\n}: {\n\teditor: Editor\n\tshapeSnapshots: MovingShapeSnapshot[]\n\taveragePagePoint: Vec2d\n\tinitialSelectionPageBounds: Box2d\n\tinitialSelectionSnapPoints: SnapPoint[]\n}) {\n\tconst { inputs, isGridMode, gridSize } = editor\n\n\tconst delta = Vec2d.Sub(inputs.currentPagePoint, inputs.originPagePoint)\n\n\tconst flatten: 'x' | 'y' | null = editor.inputs.shiftKey\n\t\t? Math.abs(delta.x) < Math.abs(delta.y)\n\t\t\t? 'x'\n\t\t\t: 'y'\n\t\t: null\n\n\tif (flatten === 'x') {\n\t\tdelta.x = 0\n\t} else if (flatten === 'y') {\n\t\tdelta.y = 0\n\t}\n\n\t// Provisional snapping\n\teditor.snaps.clear()\n\n\tconst shouldSnap =\n\t\t(editor.isSnapMode ? !inputs.ctrlKey : inputs.ctrlKey) &&\n\t\teditor.inputs.pointerVelocity.len() < 0.5 // ...and if the user is not dragging fast\n\n\tif (shouldSnap) {\n\t\tconst { nudge } = editor.snaps.snapTranslate({\n\t\t\tdragDelta: delta,\n\t\t\tinitialSelectionPageBounds,\n\t\t\tlockedAxis: flatten,\n\t\t\tinitialSelectionSnapPoints,\n\t\t})\n\n\t\tdelta.add(nudge)\n\t}\n\n\tconst averageSnappedPoint = Vec2d.Add(averagePagePoint, delta)\n\n\tif (isGridMode && !inputs.ctrlKey) {\n\t\taverageSnappedPoint.snapToGrid(gridSize)\n\t}\n\n\tconst averageSnap = Vec2d.Sub(averageSnappedPoint, averagePagePoint)\n\n\teditor.updateShapes(\n\t\tcompact(\n\t\t\tsnapshots.map(({ shape, pagePoint, parentTransform }): TLShapePartial | null => {\n\t\t\t\tconst newPagePoint = Vec2d.Add(pagePoint, averageSnap)\n\t\t\t\tconst newLocalPoint = parentTransform\n\t\t\t\t\t? Matrix2d.applyToPoint(parentTransform, newPagePoint)\n\t\t\t\t\t: newPagePoint\n\n\t\t\t\treturn {\n\t\t\t\t\tid: shape.id,\n\t\t\t\t\ttype: shape.type,\n\t\t\t\t\tx: newLocalPoint.x,\n\t\t\t\t\ty: newLocalPoint.y,\n\t\t\t\t}\n\t\t\t})\n\t\t),\n\t\ttrue\n\t)\n}\n"],
  "mappings": "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",
  "names": []
}
