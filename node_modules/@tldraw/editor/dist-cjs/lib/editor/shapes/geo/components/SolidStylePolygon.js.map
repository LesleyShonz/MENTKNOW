{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/shapes/geo/components/SolidStylePolygon.tsx"],
  "sourcesContent": ["import { VecLike } from '@tldraw/primitives'\nimport { TLGeoShape } from '@tldraw/tlschema'\nimport * as React from 'react'\nimport { ShapeFill, getShapeFillSvg, getSvgWithShapeFill } from '../../shared/ShapeFill'\nimport { TLExportColors } from '../../shared/TLExportColors'\n\nexport const SolidStylePolygon = React.memo(function SolidStylePolygon({\n\toutline,\n\tlines,\n\tfill,\n\tcolor,\n\tstrokeWidth,\n}: Pick<TLGeoShape['props'], 'fill' | 'color'> & {\n\toutline: VecLike[]\n\tlines?: VecLike[][]\n\tstrokeWidth: number\n}) {\n\tlet path = 'M' + outline[0] + 'L' + outline.slice(1) + 'Z'\n\n\tif (lines) {\n\t\tfor (const [A, B] of lines) {\n\t\t\tpath += `M${A.x},${A.y}L${B.x},${B.y}`\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<ShapeFill d={path} fill={fill} color={color} />\n\t\t\t<path d={path} stroke={`var(--palette-${color}`} strokeWidth={strokeWidth} fill=\"none\" />\n\t\t</>\n\t)\n})\n\nexport function SolidStylePolygonSvg({\n\toutline,\n\tlines,\n\tfill,\n\tcolor,\n\tstrokeWidth,\n\tcolors,\n}: Pick<TLGeoShape['props'], 'fill' | 'color'> & {\n\toutline: VecLike[]\n\tstrokeWidth: number\n\tcolors: TLExportColors\n\tlines?: VecLike[][]\n}) {\n\tconst pathData = 'M' + outline[0] + 'L' + outline.slice(1) + 'Z'\n\n\tconst fillPathData = pathData\n\tlet strokePathData = pathData\n\n\tif (lines) {\n\t\tfor (const [A, B] of lines) {\n\t\t\tstrokePathData += `M${A.x},${A.y}L${B.x},${B.y}`\n\t\t}\n\t}\n\n\tconst strokeElement = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\tstrokeElement.setAttribute('d', strokePathData)\n\tstrokeElement.setAttribute('stroke-width', strokeWidth.toString())\n\tstrokeElement.setAttribute('stroke', colors.fill[color])\n\tstrokeElement.setAttribute('fill', 'none')\n\n\t// Get the fill element, if any\n\tconst fillElement = getShapeFillSvg({\n\t\td: fillPathData,\n\t\tfill,\n\t\tcolor,\n\t\tcolors,\n\t})\n\n\treturn getSvgWithShapeFill(strokeElement, fillElement)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BE;AAxBF,YAAuB;AACvB,uBAAgE;AAGzD,MAAM,oBAAoB,MAAM,KAAK,SAASA,mBAAkB;AAAA,EACtE;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAIG;AACF,MAAI,OAAO,MAAM,QAAQ,CAAC,IAAI,MAAM,QAAQ,MAAM,CAAC,IAAI;AAEvD,MAAI,OAAO;AACV,eAAW,CAAC,GAAG,CAAC,KAAK,OAAO;AAC3B,cAAQ,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAAA,IACpC;AAAA,EACD;AAEA,SACC,4EACC;AAAA,gDAAC,8BAAU,GAAG,MAAM,MAAY,OAAc;AAAA,IAC9C,4CAAC,UAAK,GAAG,MAAM,QAAQ,iBAAiB,SAAS,aAA0B,MAAK,QAAO;AAAA,KACxF;AAEF,CAAC;AAEM,SAAS,qBAAqB;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,WAAW,MAAM,QAAQ,CAAC,IAAI,MAAM,QAAQ,MAAM,CAAC,IAAI;AAE7D,QAAM,eAAe;AACrB,MAAI,iBAAiB;AAErB,MAAI,OAAO;AACV,eAAW,CAAC,GAAG,CAAC,KAAK,OAAO;AAC3B,wBAAkB,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE;AAAA,IAC9C;AAAA,EACD;AAEA,QAAM,gBAAgB,SAAS,gBAAgB,8BAA8B,MAAM;AACnF,gBAAc,aAAa,KAAK,cAAc;AAC9C,gBAAc,aAAa,gBAAgB,YAAY,SAAS,CAAC;AACjE,gBAAc,aAAa,UAAU,OAAO,KAAK,KAAK,CAAC;AACvD,gBAAc,aAAa,QAAQ,MAAM;AAGzC,QAAM,kBAAc,kCAAgB;AAAA,IACnC,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAC;AAED,aAAO,sCAAoB,eAAe,WAAW;AACtD;",
  "names": ["SolidStylePolygon"]
}
