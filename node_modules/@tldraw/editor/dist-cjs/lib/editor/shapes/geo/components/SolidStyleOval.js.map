{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/shapes/geo/components/SolidStyleOval.tsx"],
  "sourcesContent": ["import { TLGeoShape } from '@tldraw/tlschema'\nimport * as React from 'react'\nimport { getShapeFillSvg, getSvgWithShapeFill, ShapeFill } from '../../shared/ShapeFill'\nimport { TLExportColors } from '../../shared/TLExportColors'\n\nexport const SolidStyleOval = React.memo(function SolidStyleOval({\n\tw,\n\th,\n\tstrokeWidth: sw,\n\tfill,\n\tcolor,\n}: Pick<TLGeoShape['props'], 'w' | 'h' | 'fill' | 'color'> & {\n\tstrokeWidth: number\n}) {\n\tconst d = getOvalIndicatorPath(w, h)\n\treturn (\n\t\t<>\n\t\t\t<ShapeFill d={d} color={color} fill={fill} />\n\t\t\t<path d={d} stroke={`var(--palette-${color})`} strokeWidth={sw} fill=\"none\" />\n\t\t</>\n\t)\n})\n\nexport function SolidStyleOvalSvg({\n\tw,\n\th,\n\tstrokeWidth: sw,\n\tfill,\n\tcolor,\n\tcolors,\n}: Pick<TLGeoShape['props'], 'w' | 'h' | 'fill' | 'color'> & {\n\tstrokeWidth: number\n\tcolors: TLExportColors\n}) {\n\tconst d = getOvalIndicatorPath(w, h)\n\tconst strokeElement = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\tstrokeElement.setAttribute('d', d)\n\tstrokeElement.setAttribute('stroke-width', sw.toString())\n\tstrokeElement.setAttribute('width', w.toString())\n\tstrokeElement.setAttribute('height', h.toString())\n\tstrokeElement.setAttribute('fill', 'none')\n\tstrokeElement.setAttribute('stroke', colors.fill[color])\n\n\t// Get the fill element, if any\n\tconst fillElement = getShapeFillSvg({\n\t\td,\n\t\tfill,\n\t\tcolor,\n\t\tcolors,\n\t})\n\n\treturn getSvgWithShapeFill(strokeElement, fillElement)\n}\n\nexport function getOvalIndicatorPath(w: number, h: number) {\n\tlet d: string\n\n\tif (h > w) {\n\t\tconst offset = w / 2\n\t\td = `\n    M0,${offset}\n    a${offset},${offset},0,1,1,${offset * 2},0\n    L${w},${h - offset}\n    a${offset},${offset},0,1,1,-${offset * 2},0\n    Z`\n\t} else {\n\t\tconst offset = h / 2\n\t\td = `\n    M${offset},0\n    L${w - offset},0\n    a${offset},${offset},0,1,1,0,${offset * 2}\n    L${offset},${h}\n    a${offset},${offset},0,1,1,0,${-offset * 2}\n    Z`\n\t}\n\n\treturn d\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBE;AAfF,YAAuB;AACvB,uBAAgE;AAGzD,MAAM,iBAAiB,MAAM,KAAK,SAASA,gBAAe;AAAA,EAChE;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb;AAAA,EACA;AACD,GAEG;AACF,QAAM,IAAI,qBAAqB,GAAG,CAAC;AACnC,SACC,4EACC;AAAA,gDAAC,8BAAU,GAAM,OAAc,MAAY;AAAA,IAC3C,4CAAC,UAAK,GAAM,QAAQ,iBAAiB,UAAU,aAAa,IAAI,MAAK,QAAO;AAAA,KAC7E;AAEF,CAAC;AAEM,SAAS,kBAAkB;AAAA,EACjC;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb;AAAA,EACA;AAAA,EACA;AACD,GAGG;AACF,QAAM,IAAI,qBAAqB,GAAG,CAAC;AACnC,QAAM,gBAAgB,SAAS,gBAAgB,8BAA8B,MAAM;AACnF,gBAAc,aAAa,KAAK,CAAC;AACjC,gBAAc,aAAa,gBAAgB,GAAG,SAAS,CAAC;AACxD,gBAAc,aAAa,SAAS,EAAE,SAAS,CAAC;AAChD,gBAAc,aAAa,UAAU,EAAE,SAAS,CAAC;AACjD,gBAAc,aAAa,QAAQ,MAAM;AACzC,gBAAc,aAAa,UAAU,OAAO,KAAK,KAAK,CAAC;AAGvD,QAAM,kBAAc,kCAAgB;AAAA,IACnC;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD,CAAC;AAED,aAAO,sCAAoB,eAAe,WAAW;AACtD;AAEO,SAAS,qBAAqB,GAAW,GAAW;AAC1D,MAAI;AAEJ,MAAI,IAAI,GAAG;AACV,UAAM,SAAS,IAAI;AACnB,QAAI;AAAA,SACG;AAAA,OACF,UAAU,gBAAgB,SAAS;AAAA,OACnC,KAAK,IAAI;AAAA,OACT,UAAU,iBAAiB,SAAS;AAAA;AAAA,EAE1C,OAAO;AACN,UAAM,SAAS,IAAI;AACnB,QAAI;AAAA,OACC;AAAA,OACA,IAAI;AAAA,OACJ,UAAU,kBAAkB,SAAS;AAAA,OACrC,UAAU;AAAA,OACV,UAAU,kBAAkB,CAAC,SAAS;AAAA;AAAA,EAE5C;AAEA,SAAO;AACR;",
  "names": ["SolidStyleOval"]
}
