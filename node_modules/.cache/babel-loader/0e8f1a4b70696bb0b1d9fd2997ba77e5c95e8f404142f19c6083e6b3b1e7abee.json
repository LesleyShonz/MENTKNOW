{"ast":null,"code":"import { preventDefault, useEditor } from \"@tldraw/editor\";\nimport hotkeys from \"hotkeys-js\";\nimport { useEffect } from \"react\";\nimport { useActions } from \"./useActions.mjs\";\nimport { useEditorIsFocused } from \"./useEditorIsFocused.mjs\";\nimport { useReadonly } from \"./useReadonly.mjs\";\nimport { useTools } from \"./useTools.mjs\";\nvar SKIP_KBDS = [\n// we set these in useNativeClipboardEvents instead\n\"copy\", \"cut\", \"paste\",\n// There's also an upload asset action, so we don't want to set the kbd twice\n\"asset\"];\nfunction useKeyboardShortcuts() {\n  var editor = useEditor();\n  var appIsFocused = useEditorIsFocused();\n  var isReadonly = useReadonly();\n  var actions = useActions();\n  var tools = useTools();\n  useEffect(function () {\n    if (!appIsFocused) return;\n    var container = editor.getContainer();\n    var hot = function hot(keys, callback) {\n      hotkeys(keys, {\n        element: container,\n        scope: editor.store.id\n      }, callback);\n    };\n    var areShortcutsDisabled = function areShortcutsDisabled() {\n      return editor.isMenuOpen || editor.editingId !== null || editor.crashingError;\n    };\n    var _loop = function _loop() {\n        var action = _Object$values[_i];\n        if (!action.kbd) return 0; // continue\n        if (isReadonly && !action.readonlyOk) return 0; // continue\n        if (SKIP_KBDS.includes(action.id)) return 0; // continue\n        hot(getHotkeysStringFromKbd(action.kbd), function (event) {\n          if (areShortcutsDisabled()) return;\n          preventDefault(event);\n          action.onSelect(\"kbd\");\n        });\n      },\n      _ret;\n    for (var _i = 0, _Object$values = Object.values(actions); _i < _Object$values.length; _i++) {\n      _ret = _loop();\n      if (_ret === 0) continue;\n    }\n    var _loop2 = function _loop2() {\n        var tool = _Object$values2[_i2];\n        if (!tool.kbd || !tool.readonlyOk && editor.isReadOnly) return 0; // continue\n        if (SKIP_KBDS.includes(tool.id)) return 0; // continue\n        hot(getHotkeysStringFromKbd(tool.kbd), function (event) {\n          if (areShortcutsDisabled()) return;\n          preventDefault(event);\n          tool.onSelect(\"kbd\");\n        });\n      },\n      _ret2;\n    for (var _i2 = 0, _Object$values2 = Object.values(tools); _i2 < _Object$values2.length; _i2++) {\n      _ret2 = _loop2();\n      if (_ret2 === 0) continue;\n    }\n    hotkeys.setScope(editor.store.id);\n    return function () {\n      hotkeys.deleteScope(editor.store.id);\n    };\n  }, [actions, tools, isReadonly, editor, appIsFocused]);\n}\nfunction getHotkeysStringFromKbd(kbd) {\n  return getKeys(kbd).map(function (kbd2) {\n    var str = \"\";\n    var chars = kbd2.split(\"\");\n    if (chars.length === 1) {\n      str = chars[0];\n    } else {\n      if (chars[0] === \"!\") {\n        str = \"shift+\".concat(chars[1]);\n      } else if (chars[0] === \"?\") {\n        str = \"alt+\".concat(chars[1]);\n      } else if (chars[0] === \"$\") {\n        if (chars[1] === \"!\") {\n          str = \"cmd+shift+\".concat(chars[2], \",ctrl+shift+\").concat(chars[2]);\n        } else if (chars[1] === \"?\") {\n          str = \"cmd+\\u2325+\".concat(chars[2], \",ctrl+alt+\").concat(chars[2]);\n        } else {\n          str = \"cmd+\".concat(chars[1], \",ctrl+\").concat(chars[1]);\n        }\n      } else {\n        str = kbd2;\n      }\n    }\n    return str;\n  }).join(\",\");\n}\nfunction getKeys(key) {\n  if (typeof key !== \"string\") key = \"\";\n  key = key.replace(/\\s/g, \"\");\n  var keys = key.split(\",\");\n  var index = keys.lastIndexOf(\"\");\n  for (; index >= 0;) {\n    keys[index - 1] += \",\";\n    keys.splice(index, 1);\n    index = keys.lastIndexOf(\"\");\n  }\n  return keys;\n}\nexport { useKeyboardShortcuts };","map":{"version":3,"names":["preventDefault","useEditor","hotkeys","useEffect","useActions","useEditorIsFocused","useReadonly","useTools","SKIP_KBDS","useKeyboardShortcuts","editor","appIsFocused","isReadonly","actions","tools","container","getContainer","hot","keys","callback","element","scope","store","id","areShortcutsDisabled","isMenuOpen","editingId","crashingError","_loop","action","_Object$values","_i","kbd","readonlyOk","includes","getHotkeysStringFromKbd","event","onSelect","_ret","Object","values","length","_loop2","tool","_Object$values2","_i2","isReadOnly","_ret2","setScope","deleteScope","getKeys","map","kbd2","str","chars","split","concat","join","key","replace","index","lastIndexOf","splice"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useKeyboardShortcuts.ts"],"sourcesContent":["import { preventDefault, useEditor } from '@tldraw/editor'\nimport hotkeys from 'hotkeys-js'\nimport { useEffect } from 'react'\nimport { useActions } from './useActions'\nimport { useEditorIsFocused } from './useEditorIsFocused'\nimport { useReadonly } from './useReadonly'\nimport { useTools } from './useTools'\n\nconst SKIP_KBDS = [\n\t// we set these in useNativeClipboardEvents instead\n\t'copy',\n\t'cut',\n\t'paste',\n\t// There's also an upload asset action, so we don't want to set the kbd twice\n\t'asset',\n]\n\n/** @public */\nexport function useKeyboardShortcuts() {\n\tconst editor = useEditor()\n\n\tconst appIsFocused = useEditorIsFocused()\n\tconst isReadonly = useReadonly()\n\tconst actions = useActions()\n\tconst tools = useTools()\n\n\tuseEffect(() => {\n\t\tif (!appIsFocused) return\n\n\t\tconst container = editor.getContainer()\n\n\t\tconst hot = (keys: string, callback: (event: KeyboardEvent) => void) => {\n\t\t\thotkeys(keys, { element: container, scope: editor.store.id }, callback)\n\t\t}\n\n\t\t// Add hotkeys for actions and tools.\n\t\t// Except those that in SKIP_KBDS!\n\t\tconst areShortcutsDisabled = () =>\n\t\t\teditor.isMenuOpen || editor.editingId !== null || editor.crashingError\n\n\t\tfor (const action of Object.values(actions)) {\n\t\t\tif (!action.kbd) continue\n\t\t\tif (isReadonly && !action.readonlyOk) continue\n\t\t\tif (SKIP_KBDS.includes(action.id)) continue\n\n\t\t\thot(getHotkeysStringFromKbd(action.kbd), (event) => {\n\t\t\t\tif (areShortcutsDisabled()) return\n\t\t\t\tpreventDefault(event)\n\t\t\t\taction.onSelect('kbd')\n\t\t\t})\n\t\t}\n\n\t\tfor (const tool of Object.values(tools)) {\n\t\t\tif (!tool.kbd || (!tool.readonlyOk && editor.isReadOnly)) continue\n\n\t\t\tif (SKIP_KBDS.includes(tool.id)) continue\n\n\t\t\thot(getHotkeysStringFromKbd(tool.kbd), (event) => {\n\t\t\t\tif (areShortcutsDisabled()) return\n\t\t\t\tpreventDefault(event)\n\t\t\t\ttool.onSelect('kbd')\n\t\t\t})\n\t\t}\n\n\t\thotkeys.setScope(editor.store.id)\n\n\t\treturn () => {\n\t\t\thotkeys.deleteScope(editor.store.id)\n\t\t}\n\t}, [actions, tools, isReadonly, editor, appIsFocused])\n}\n\nfunction getHotkeysStringFromKbd(kbd: string) {\n\treturn getKeys(kbd)\n\t\t.map((kbd) => {\n\t\t\tlet str = ''\n\t\t\tconst chars = kbd.split('')\n\t\t\tif (chars.length === 1) {\n\t\t\t\tstr = chars[0]\n\t\t\t} else {\n\t\t\t\tif (chars[0] === '!') {\n\t\t\t\t\tstr = `shift+${chars[1]}`\n\t\t\t\t} else if (chars[0] === '?') {\n\t\t\t\t\tstr = `alt+${chars[1]}`\n\t\t\t\t} else if (chars[0] === '$') {\n\t\t\t\t\tif (chars[1] === '!') {\n\t\t\t\t\t\tstr = `cmd+shift+${chars[2]},ctrl+shift+${chars[2]}`\n\t\t\t\t\t} else if (chars[1] === '?') {\n\t\t\t\t\t\tstr = `cmd+âŒ¥+${chars[2]},ctrl+alt+${chars[2]}`\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstr = `cmd+${chars[1]},ctrl+${chars[1]}`\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstr = kbd\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str\n\t\t})\n\t\t.join(',')\n}\n\n// Logic to split kbd string from hotkeys-js util.\nfunction getKeys(key: string) {\n\tif (typeof key !== 'string') key = ''\n\tkey = key.replace(/\\s/g, '')\n\tconst keys = key.split(',')\n\tlet index = keys.lastIndexOf('')\n\n\tfor (; index >= 0; ) {\n\t\tkeys[index - 1] += ','\n\t\tkeys.splice(index, 1)\n\t\tindex = keys.lastIndexOf('')\n\t}\n\n\treturn keys\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}