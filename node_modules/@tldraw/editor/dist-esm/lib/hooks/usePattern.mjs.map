{
  "version": 3,
  "sources": ["../../../src/lib/hooks/usePattern.tsx"],
  "sourcesContent": ["import { useEffect, useMemo, useState } from 'react'\nimport { HASH_PATERN_ZOOM_NAMES, MAX_ZOOM } from '../constants'\nimport { debugFlags } from '../utils/debug-flags'\nimport { useEditor } from './useEditor'\n\nconst TILE_PATTERN_SIZE = 8\n\nconst generateImage = (dpr: number, currentZoom: number, darkMode: boolean) => {\n\treturn new Promise<Blob>((resolve, reject) => {\n\t\tconst size = TILE_PATTERN_SIZE * currentZoom * dpr\n\n\t\tconst canvasEl = document.createElement('canvas')\n\t\tcanvasEl.width = size\n\t\tcanvasEl.height = size\n\n\t\tconst ctx = canvasEl.getContext('2d')\n\t\tif (!ctx) return\n\n\t\tctx.fillStyle = darkMode ? '#212529' : '#f8f9fa'\n\t\tctx.fillRect(0, 0, size, size)\n\n\t\t// This essentially generates an inverse of the pattern we're drawing.\n\t\tctx.globalCompositeOperation = 'destination-out'\n\n\t\tctx.lineCap = 'round'\n\t\tctx.lineWidth = 1.25 * currentZoom * dpr\n\n\t\tconst t = 8 / 12\n\t\tconst s = (v: number) => v * currentZoom * dpr\n\n\t\tctx.beginPath()\n\t\tctx.moveTo(s(t * 1), s(t * 3))\n\t\tctx.lineTo(s(t * 3), s(t * 1))\n\n\t\tctx.moveTo(s(t * 5), s(t * 7))\n\t\tctx.lineTo(s(t * 7), s(t * 5))\n\n\t\tctx.moveTo(s(t * 9), s(t * 11))\n\t\tctx.lineTo(s(t * 11), s(t * 9))\n\t\tctx.stroke()\n\n\t\tcanvasEl.toBlob((blob) => {\n\t\t\tif (!blob || debugFlags.throwToBlob.value) {\n\t\t\t\treject()\n\t\t\t} else {\n\t\t\t\tresolve(blob)\n\t\t\t}\n\t\t})\n\t})\n}\n\nconst canvasBlob = (size: [number, number], fn: (ctx: CanvasRenderingContext2D) => void) => {\n\tconst canvas = document.createElement('canvas')\n\tcanvas.width = size[0]\n\tcanvas.height = size[1]\n\tconst ctx = canvas.getContext('2d')\n\tif (!ctx) return ''\n\tfn(ctx)\n\treturn canvas.toDataURL()\n}\ntype PatternDef = { zoom: number; url: string; darkMode: boolean }\n\nconst getDefaultPatterns = () => {\n\tconst defaultPatterns: PatternDef[] = []\n\tfor (let i = 1; i <= Math.ceil(MAX_ZOOM); i++) {\n\t\tconst whitePixelBlob = canvasBlob([1, 1], (ctx) => {\n\t\t\t// Hard coded '--palette-black-semi'\n\t\t\tctx.fillStyle = '#e8e8e8'\n\t\t\tctx.fillRect(0, 0, 1, 1)\n\t\t})\n\t\tconst blackPixelBlob = canvasBlob([1, 1], (ctx) => {\n\t\t\t// Hard coded '--palette-black-semi'\n\t\t\tctx.fillStyle = '#2c3036'\n\t\t\tctx.fillRect(0, 0, 1, 1)\n\t\t})\n\t\tdefaultPatterns.push({\n\t\t\tzoom: i,\n\t\t\turl: whitePixelBlob,\n\t\t\tdarkMode: false,\n\t\t})\n\t\tdefaultPatterns.push({\n\t\t\tzoom: i,\n\t\t\turl: blackPixelBlob,\n\t\t\tdarkMode: true,\n\t\t})\n\t}\n\treturn defaultPatterns\n}\n\nexport const usePattern = () => {\n\tconst editor = useEditor()\n\tconst dpr = editor.devicePixelRatio\n\tconst [isReady, setIsReady] = useState(false)\n\tconst defaultPatterns = useMemo(() => getDefaultPatterns(), [])\n\tconst [backgroundUrls, setBackgroundUrls] = useState<PatternDef[]>(defaultPatterns)\n\n\tuseEffect(() => {\n\t\tconst promises: Promise<{ zoom: number; url: string; darkMode: boolean }>[] = []\n\n\t\tfor (let i = 1; i <= Math.ceil(MAX_ZOOM); i++) {\n\t\t\tpromises.push(\n\t\t\t\tgenerateImage(dpr, i, false).then((blob) => ({\n\t\t\t\t\tzoom: i,\n\t\t\t\t\turl: URL.createObjectURL(blob),\n\t\t\t\t\tdarkMode: false,\n\t\t\t\t}))\n\t\t\t)\n\t\t\tpromises.push(\n\t\t\t\tgenerateImage(dpr, i, true).then((blob) => ({\n\t\t\t\t\tzoom: i,\n\t\t\t\t\turl: URL.createObjectURL(blob),\n\t\t\t\t\tdarkMode: true,\n\t\t\t\t}))\n\t\t\t)\n\t\t}\n\n\t\tlet isCancelled = false\n\t\tPromise.all(promises).then((urls) => {\n\t\t\tif (isCancelled) return\n\t\t\tsetBackgroundUrls(urls)\n\t\t\tsetIsReady(true)\n\t\t})\n\n\t\treturn () => {\n\t\t\tisCancelled = true\n\t\t\tsetIsReady(false)\n\t\t}\n\t}, [dpr])\n\n\tconst context = (\n\t\t<>\n\t\t\t{backgroundUrls.map((item) => {\n\t\t\t\tconst key = item.zoom + (item.darkMode ? '_dark' : '_light')\n\t\t\t\treturn (\n\t\t\t\t\t<pattern\n\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\tid={HASH_PATERN_ZOOM_NAMES[key]}\n\t\t\t\t\t\twidth={TILE_PATTERN_SIZE}\n\t\t\t\t\t\theight={TILE_PATTERN_SIZE}\n\t\t\t\t\t\tpatternUnits=\"userSpaceOnUse\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<image href={item.url} width={TILE_PATTERN_SIZE} height={TILE_PATTERN_SIZE} />\n\t\t\t\t\t</pattern>\n\t\t\t\t)\n\t\t\t})}\n\t\t</>\n\t)\n\n\treturn { context, isReady }\n}\n\nconst t = 8 / 12\nexport function exportPatternSvgDefs(backgroundColor: string) {\n\tconst divEl = document.createElement('div')\n\tdivEl.innerHTML = `\n\t\t<svg>\n\t\t\t<defs>\n\t\t\t\t<mask id=\"hash_pattern_mask\">\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fill=\"white\" />\n\t\t\t\t\t<g\n\t\t\t\t\t\tstrokeLinecap=\"round\"\n\t\t\t\t\t\tstroke=\"black\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<line x1=\"${t * 1}\" y1=\"${t * 3}\" x2=\"${t * 3}\" y2=\"${t * 1}\" />\n\t\t\t\t\t\t<line x1=\"${t * 5}\" y1=\"${t * 7}\" x2=\"${t * 7}\" y2=\"${t * 5}\" />\n\t\t\t\t\t\t<line x1=\"${t * 9}\" y1=\"${t * 11}\" x2=\"${t * 11}\" y2=\"${t * 9}\" />\n\t\t\t\t\t</g>\n\t\t\t\t</mask>\n\t\t\t\t<pattern\n\t\t\t\t\tid=\"hash_pattern\"\n\t\t\t\t\twidth=\"8\"\n\t\t\t\t\theight=\"8\"\n\t\t\t\t\tpatternUnits=\"userSpaceOnUse\"\n\t\t\t\t>\n\t\t\t\t\t<rect x=\"0\" y=\"0\" width=\"8\" height=\"8\" fill=\"${backgroundColor}\" mask=\"url(#hash_pattern_mask)\" />\n\t\t\t\t</pattern>\n\t\t\t</defs>\n\t\t</svg>\n\t`\n\treturn divEl.querySelectorAll('defs > *')!\n}\n"],
  "mappings": "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",
  "names": ["t"]
}
