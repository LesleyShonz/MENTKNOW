{"ast":null,"code":"import { jsx } from \"react/jsx-runtime\";\nimport { featureFlags, useEditor } from \"@tldraw/editor\";\nimport { compact } from \"@tldraw/utils\";\nimport React from \"react\";\nimport { useValue } from \"signia-react\";\nimport { useTools } from \"./useTools.mjs\";\nfunction toolbarItem(toolItem) {\n  return {\n    id: toolItem.id,\n    type: \"item\",\n    readonlyOk: toolItem.readonlyOk,\n    toolItem: toolItem\n  };\n}\nvar ToolbarSchemaContext = React.createContext([]);\nfunction ToolbarSchemaProvider(_ref) {\n  var overrides = _ref.overrides,\n    children = _ref.children;\n  var editor = useEditor();\n  var tools = useTools();\n  var highlighterEnabled = useValue(featureFlags.highlighterTool);\n  var toolbarSchema = React.useMemo(function () {\n    var schema = compact([toolbarItem(tools.select), toolbarItem(tools.hand), toolbarItem(tools.draw), toolbarItem(tools.eraser), toolbarItem(tools.arrow), toolbarItem(tools.text), toolbarItem(tools.note), toolbarItem(tools.asset), toolbarItem(tools[\"rectangle\"]), toolbarItem(tools[\"ellipse\"]), toolbarItem(tools[\"diamond\"]), toolbarItem(tools[\"triangle\"]), toolbarItem(tools[\"trapezoid\"]), toolbarItem(tools[\"rhombus\"]), toolbarItem(tools[\"pentagon\"]), toolbarItem(tools[\"hexagon\"]),\n    // toolbarItem(tools['octagon']),\n    toolbarItem(tools[\"star\"]), toolbarItem(tools[\"oval\"]), toolbarItem(tools[\"x-box\"]), toolbarItem(tools[\"check-box\"]), toolbarItem(tools[\"arrow-left\"]), toolbarItem(tools[\"arrow-up\"]), toolbarItem(tools[\"arrow-down\"]), toolbarItem(tools[\"arrow-right\"]), toolbarItem(tools.frame), toolbarItem(tools.line), highlighterEnabled ? toolbarItem(tools.highlight) : null, toolbarItem(tools.laser)]);\n    if (overrides) {\n      return overrides(editor, schema, {\n        tools: tools\n      });\n    }\n    return schema;\n  }, [editor, highlighterEnabled, overrides, tools]);\n  return /* @__PURE__ */jsx(ToolbarSchemaContext.Provider, {\n    value: toolbarSchema,\n    children: children\n  });\n}\nfunction useToolbarSchema() {\n  var ctx = React.useContext(ToolbarSchemaContext);\n  if (!ctx) {\n    throw new Error(\"useToolbarSchema must be used within a ToolbarSchemaProvider\");\n  }\n  return ctx;\n}\nexport { ToolbarSchemaContext, ToolbarSchemaProvider, toolbarItem, useToolbarSchema };","map":{"version":3,"names":["jsx","featureFlags","useEditor","compact","React","useValue","useTools","toolbarItem","toolItem","id","type","readonlyOk","ToolbarSchemaContext","createContext","ToolbarSchemaProvider","_ref","overrides","children","editor","tools","highlighterEnabled","highlighterTool","toolbarSchema","useMemo","schema","select","hand","draw","eraser","arrow","text","note","asset","frame","line","highlight","laser","Provider","value","useToolbarSchema","ctx","useContext","Error"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useToolbarSchema.tsx"],"sourcesContent":["import { Editor, featureFlags, useEditor } from '@tldraw/editor'\nimport { compact } from '@tldraw/utils'\nimport React from 'react'\nimport { useValue } from 'signia-react'\nimport { TLUiToolItem, TLUiToolsContextType, useTools } from './useTools'\n\n/** @public */\nexport type TLUiToolbarItem = {\n\tid: string\n\ttype: 'item'\n\treadonlyOk: boolean\n\ttoolItem: TLUiToolItem\n}\n\n/** @public */\nexport function toolbarItem(toolItem: TLUiToolItem): TLUiToolbarItem {\n\treturn {\n\t\tid: toolItem.id,\n\t\ttype: 'item',\n\t\treadonlyOk: toolItem.readonlyOk,\n\t\ttoolItem,\n\t}\n}\n\n/** @public */\nexport type TLUiToolbarSchemaContextType = TLUiToolbarItem[]\n\n/** @internal */\nexport const ToolbarSchemaContext = React.createContext([] as TLUiToolbarSchemaContextType)\n\n/** @public */\nexport type TLUiToolbarSchemaProviderProps = {\n\toverrides?: (\n\t\teditor: Editor,\n\t\tschema: TLUiToolbarSchemaContextType,\n\t\tmore: { tools: TLUiToolsContextType }\n\t) => TLUiToolbarSchemaContextType\n\tchildren: any\n}\n\n/** @internal */\nexport function ToolbarSchemaProvider({ overrides, children }: TLUiToolbarSchemaProviderProps) {\n\tconst editor = useEditor()\n\n\tconst tools = useTools()\n\tconst highlighterEnabled = useValue(featureFlags.highlighterTool)\n\n\tconst toolbarSchema = React.useMemo<TLUiToolbarSchemaContextType>(() => {\n\t\tconst schema: TLUiToolbarSchemaContextType = compact([\n\t\t\ttoolbarItem(tools.select),\n\t\t\ttoolbarItem(tools.hand),\n\t\t\ttoolbarItem(tools.draw),\n\t\t\ttoolbarItem(tools.eraser),\n\t\t\ttoolbarItem(tools.arrow),\n\t\t\ttoolbarItem(tools.text),\n\t\t\ttoolbarItem(tools.note),\n\t\t\ttoolbarItem(tools.asset),\n\t\t\ttoolbarItem(tools['rectangle']),\n\t\t\ttoolbarItem(tools['ellipse']),\n\t\t\ttoolbarItem(tools['diamond']),\n\t\t\ttoolbarItem(tools['triangle']),\n\t\t\ttoolbarItem(tools['trapezoid']),\n\t\t\ttoolbarItem(tools['rhombus']),\n\t\t\ttoolbarItem(tools['pentagon']),\n\t\t\ttoolbarItem(tools['hexagon']),\n\t\t\t// toolbarItem(tools['octagon']),\n\t\t\ttoolbarItem(tools['star']),\n\t\t\ttoolbarItem(tools['oval']),\n\t\t\ttoolbarItem(tools['x-box']),\n\t\t\ttoolbarItem(tools['check-box']),\n\t\t\ttoolbarItem(tools['arrow-left']),\n\t\t\ttoolbarItem(tools['arrow-up']),\n\t\t\ttoolbarItem(tools['arrow-down']),\n\t\t\ttoolbarItem(tools['arrow-right']),\n\t\t\ttoolbarItem(tools.frame),\n\t\t\ttoolbarItem(tools.line),\n\t\t\thighlighterEnabled ? toolbarItem(tools.highlight) : null,\n\t\t\ttoolbarItem(tools.laser),\n\t\t])\n\n\t\tif (overrides) {\n\t\t\treturn overrides(editor, schema, { tools })\n\t\t}\n\n\t\treturn schema\n\t}, [editor, highlighterEnabled, overrides, tools])\n\n\treturn (\n\t\t<ToolbarSchemaContext.Provider value={toolbarSchema}>{children}</ToolbarSchemaContext.Provider>\n\t)\n}\n\n/** @public */\nexport function useToolbarSchema() {\n\tconst ctx = React.useContext(ToolbarSchemaContext)\n\n\tif (!ctx) {\n\t\tthrow new Error('useToolbarSchema must be used within a ToolbarSchemaProvider')\n\t}\n\n\treturn ctx\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}