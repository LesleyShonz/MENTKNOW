{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { jsx } from \"react/jsx-runtime\";\nimport { useEditor } from \"@tldraw/editor\";\nimport * as React from \"react\";\nimport { track } from \"signia-react\";\nimport { useAssetUrls } from \"../useAssetUrls.mjs\";\nimport { DEFAULT_TRANSLATION } from \"./defaultTranslation.mjs\";\nimport { fetchTranslation } from \"./translations.mjs\";\nvar TranslationsContext = React.createContext({});\nvar useCurrentTranslation = function useCurrentTranslation() {\n  return React.useContext(TranslationsContext);\n};\nvar TranslationProvider = track(function TranslationProvider2(_ref) {\n  var overrides = _ref.overrides,\n    children = _ref.children;\n  var editor = useEditor();\n  var locale = editor.locale;\n  var getAssetUrl = useAssetUrls();\n  var _React$useState = React.useState(function () {\n      if (overrides && overrides[\"en\"]) {\n        return {\n          locale: \"en\",\n          label: \"English\",\n          messages: _objectSpread(_objectSpread({}, DEFAULT_TRANSLATION), overrides[\"en\"])\n        };\n      }\n      return {\n        locale: \"en\",\n        label: \"English\",\n        messages: DEFAULT_TRANSLATION\n      };\n    }),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    currentTranslation = _React$useState2[0],\n    setCurrentTranslation = _React$useState2[1];\n  React.useEffect(function () {\n    var isCancelled = false;\n    function loadTranslation() {\n      return _loadTranslation.apply(this, arguments);\n    }\n    function _loadTranslation() {\n      _loadTranslation = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var translation;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetchTranslation(locale, getAssetUrl);\n            case 2:\n              translation = _context.sent;\n              if (translation && !isCancelled) {\n                if (overrides && overrides[locale]) {\n                  setCurrentTranslation(_objectSpread(_objectSpread({}, translation), {}, {\n                    messages: _objectSpread(_objectSpread({}, translation.messages), overrides[locale])\n                  }));\n                } else {\n                  setCurrentTranslation(translation);\n                }\n              }\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return _loadTranslation.apply(this, arguments);\n    }\n    loadTranslation();\n    return function () {\n      isCancelled = true;\n    };\n  }, [getAssetUrl, locale, overrides]);\n  return /* @__PURE__ */jsx(TranslationsContext.Provider, {\n    value: currentTranslation,\n    children: children\n  });\n});\nfunction useTranslation() {\n  var translation = useCurrentTranslation();\n  return React.useCallback(function msg(id) {\n    var _translation$messages;\n    return (_translation$messages = translation.messages[id]) !== null && _translation$messages !== void 0 ? _translation$messages : id;\n  }, [translation]);\n}\nexport { TranslationProvider, useTranslation };","map":{"version":3,"names":["jsx","useEditor","React","track","useAssetUrls","DEFAULT_TRANSLATION","fetchTranslation","TranslationsContext","createContext","useCurrentTranslation","useContext","TranslationProvider","TranslationProvider2","_ref","overrides","children","editor","locale","getAssetUrl","_React$useState","useState","label","messages","_objectSpread","_React$useState2","_slicedToArray","currentTranslation","setCurrentTranslation","useEffect","isCancelled","loadTranslation","_loadTranslation","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","translation","wrap","_callee$","_context","prev","next","sent","stop","Provider","value","useTranslation","useCallback","msg","id","_translation$messages"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useTranslation/useTranslation.tsx"],"sourcesContent":["import { useEditor } from '@tldraw/editor'\nimport * as React from 'react'\nimport { track } from 'signia-react'\nimport { useAssetUrls } from '../useAssetUrls'\nimport { TLUiTranslationKey } from './TLUiTranslationKey'\nimport { DEFAULT_TRANSLATION } from './defaultTranslation'\nimport { TLUiTranslation, fetchTranslation } from './translations'\n\n/** @public */\nexport interface TLUiTranslationProviderProps {\n\tchildren: any\n\t/**\n\t * (optional) A collection of overrides different locales.\n\t *\n\t * @example\n\t *\n\t * ```ts\n\t * <TranslationProvider overrides={{ en: { 'style-panel.styles': 'Properties' } }} />\n\t * ```\n\t */\n\toverrides?: Record<string, Record<string, string>>\n}\n\n/** @public */\nexport type TLUiTranslationContextType = TLUiTranslation\n\nconst TranslationsContext = React.createContext<TLUiTranslationContextType>(\n\t{} as TLUiTranslationContextType\n)\n\nconst useCurrentTranslation = () => React.useContext(TranslationsContext)\n\n/**\n * Provides a translation context to the editor.\n *\n * @internal\n */\nexport const TranslationProvider = track(function TranslationProvider({\n\toverrides,\n\tchildren,\n}: TLUiTranslationProviderProps) {\n\tconst editor = useEditor()\n\tconst locale = editor.locale\n\tconst getAssetUrl = useAssetUrls()\n\n\tconst [currentTranslation, setCurrentTranslation] = React.useState<TLUiTranslation>(() => {\n\t\tif (overrides && overrides['en']) {\n\t\t\treturn {\n\t\t\t\tlocale: 'en',\n\t\t\t\tlabel: 'English',\n\t\t\t\tmessages: { ...DEFAULT_TRANSLATION, ...overrides['en'] },\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tlocale: 'en',\n\t\t\tlabel: 'English',\n\t\t\tmessages: DEFAULT_TRANSLATION,\n\t\t}\n\t})\n\n\tReact.useEffect(() => {\n\t\tlet isCancelled = false\n\n\t\tasync function loadTranslation() {\n\t\t\tconst translation = await fetchTranslation(locale, getAssetUrl)\n\n\t\t\tif (translation && !isCancelled) {\n\t\t\t\tif (overrides && overrides[locale]) {\n\t\t\t\t\tsetCurrentTranslation({\n\t\t\t\t\t\t...translation,\n\t\t\t\t\t\tmessages: { ...translation.messages, ...overrides[locale] },\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\tsetCurrentTranslation(translation)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tloadTranslation()\n\n\t\treturn () => {\n\t\t\tisCancelled = true\n\t\t}\n\t}, [getAssetUrl, locale, overrides])\n\n\treturn (\n\t\t<TranslationsContext.Provider value={currentTranslation}>\n\t\t\t{children}\n\t\t</TranslationsContext.Provider>\n\t)\n})\n\n/**\n * Returns a function to translate a translation key into a string based on the current translation.\n *\n * @example\n *\n * ```ts\n * const msg = useTranslation()\n * const label = msg('style-panel.styles')\n * ```\n *\n * @public\n */\nexport function useTranslation() {\n\tconst translation = useCurrentTranslation()\n\treturn React.useCallback(\n\t\tfunction msg(id: TLUiTranslationKey) {\n\t\t\treturn translation.messages[id] ?? id\n\t\t},\n\t\t[translation]\n\t)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}