import { ArrowShape } from "../editor/shapes/arrow/ArrowShape.mjs";
import { BookmarkShape } from "../editor/shapes/bookmark/BookmarkShape.mjs";
import { DrawShape } from "../editor/shapes/draw/DrawShape.mjs";
import { EmbedShape } from "../editor/shapes/embed/EmbedShape.mjs";
import { FrameShape } from "../editor/shapes/frame/FrameShape.mjs";
import { GeoShape } from "../editor/shapes/geo/GeoShape.mjs";
import { GroupShape } from "../editor/shapes/group/GroupShape.mjs";
import { HighlightShape } from "../editor/shapes/highlight/HighlightShape.mjs";
import { ImageShape } from "../editor/shapes/image/ImageShape.mjs";
import { LineShape } from "../editor/shapes/line/LineShape.mjs";
import { NoteShape } from "../editor/shapes/note/NoteShape.mjs";
import { TextShape } from "../editor/shapes/text/TextShape.mjs";
import { VideoShape } from "../editor/shapes/video/VideoShape.mjs";
const coreShapes = [
  // created by grouping interactions, probably the corest core shape that we have
  GroupShape,
  // created by embed menu / url drop
  EmbedShape,
  // created by copy and paste / url drop
  BookmarkShape,
  // created by copy and paste / file drop
  ImageShape,
  // created by copy and paste
  TextShape
];
const defaultShapes = [
  DrawShape,
  GeoShape,
  LineShape,
  NoteShape,
  FrameShape,
  ArrowShape,
  HighlightShape,
  VideoShape
];
const coreShapeTypes = new Set(coreShapes.map((s) => s.type));
function checkShapesAndAddCore(customShapes) {
  const shapes = [...coreShapes];
  const addedCustomShapeTypes = /* @__PURE__ */ new Set();
  for (const customShape of customShapes) {
    if (coreShapeTypes.has(customShape.type)) {
      throw new Error(
        `Shape type "${customShape.type}" is a core shapes type and cannot be overridden`
      );
    }
    if (addedCustomShapeTypes.has(customShape.type)) {
      throw new Error(`Shape type "${customShape.type}" is defined more than once`);
    }
    shapes.push(customShape);
    addedCustomShapeTypes.add(customShape.type);
  }
  return shapes;
}
export {
  checkShapesAndAddCore,
  coreShapes,
  defaultShapes
};
//# sourceMappingURL=defaultShapes.mjs.map
