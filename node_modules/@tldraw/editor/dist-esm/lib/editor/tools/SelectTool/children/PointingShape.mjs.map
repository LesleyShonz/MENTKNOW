{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/tools/SelectTool/children/PointingShape.ts"],
  "sourcesContent": ["import { TLShape } from '@tldraw/tlschema'\nimport { GroupShapeUtil } from '../../../shapes/group/GroupShapeUtil'\nimport { TLEventHandlers, TLPointerEventInfo } from '../../../types/event-types'\nimport { StateNode } from '../../StateNode'\n\nexport class PointingShape extends StateNode {\n\tstatic override id = 'pointing_shape'\n\n\teventTargetShape = {} as TLShape\n\tselectingShape = {} as TLShape\n\n\tdidSelectOnEnter = false\n\n\tonEnter = (info: TLPointerEventInfo & { target: 'shape' }) => {\n\t\tthis.eventTargetShape = info.shape\n\t\tthis.selectingShape = this.editor.getOutermostSelectableShape(info.shape)\n\n\t\tconst util = this.editor.getShapeUtil(info.shape)\n\n\t\tif (util.onClick || this.selectingShape.id === this.editor.focusLayerId) {\n\t\t\tthis.didSelectOnEnter = false\n\t\t\treturn\n\t\t}\n\n\t\tconst isSelected = this.editor.isWithinSelection(this.selectingShape.id)\n\n\t\tconst isBehindSelectionBounds =\n\t\t\tthis.editor.selectedIds.length > 1 && // only on 2+ selected shapes!\n\t\t\tthis.editor.selectionBounds?.containsPoint(this.editor.inputs.currentPagePoint)\n\n\t\tthis.didSelectOnEnter =\n\t\t\t!isSelected && this.selectingShape.id !== this.editor.focusLayerId && !isBehindSelectionBounds\n\n\t\tif (this.didSelectOnEnter) {\n\t\t\tconst { inputs, selectedIds } = this.editor\n\n\t\t\tconst parent = this.editor.getParentShape(info.shape)\n\n\t\t\tif (parent && this.editor.isShapeOfType(parent, GroupShapeUtil)) {\n\t\t\t\tthis.editor.cancelDoubleClick()\n\t\t\t}\n\n\t\t\tif (inputs.shiftKey && !inputs.altKey) {\n\t\t\t\tif (!selectedIds.includes(this.selectingShape.id)) {\n\t\t\t\t\tthis.editor.mark('shift selecting shape')\n\t\t\t\t\tthis.editor.setSelectedIds([...selectedIds, this.selectingShape.id])\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.editor.mark('selecting shape')\n\t\t\t\tthis.editor.setSelectedIds([this.selectingShape.id])\n\t\t\t}\n\t\t}\n\t}\n\n\tonPointerUp: TLEventHandlers['onPointerUp'] = (info) => {\n\t\tconst { shape } = info\n\n\t\tif (shape) {\n\t\t\tconst util = this.editor.getShapeUtil(shape)\n\t\t\tif (util.onClick) {\n\t\t\t\tconst change = util.onClick?.(shape)\n\t\t\t\tif (change) {\n\t\t\t\t\tthis.editor.updateShapes([change])\n\t\t\t\t\tthis.parent.transition('idle', info)\n\t\t\t\t\treturn\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!this.didSelectOnEnter && this.selectingShape.id !== this.editor.focusLayerId) {\n\t\t\tthis.editor.mark('selecting shape (pointer up)')\n\t\t\t// if the shape has an ancestor which is a focusable layer and it is not focused but it is selected\n\t\t\t// then we should focus the layer and select the shape\n\n\t\t\tconst targetShape = this.editor.getOutermostSelectableShape(\n\t\t\t\tthis.eventTargetShape,\n\t\t\t\t// if a group is selected, we want to stop before reaching that group\n\t\t\t\t// so we can drill down into the group\n\t\t\t\t(parent) => !this.editor.isSelected(parent.id)\n\t\t\t)\n\n\t\t\tif (this.editor.selectedIds.includes(targetShape.id)) {\n\t\t\t\t// same shape, so deselect it if shift is pressed, otherwise deselect all others\n\t\t\t\tthis.editor.setSelectedIds(\n\t\t\t\t\tthis.editor.inputs.shiftKey\n\t\t\t\t\t\t? this.editor.selectedIds.filter((id) => id !== this.selectingShape.id)\n\t\t\t\t\t\t: [this.selectingShape.id]\n\t\t\t\t)\n\t\t\t} else if (this.editor.inputs.shiftKey) {\n\t\t\t\t// Different shape, so we are drilling down into a group with shift key held.\n\t\t\t\t// Deselect any ancestors and add the target shape to the selection\n\t\t\t\tconst ancestors = this.editor.getAncestors(targetShape)\n\n\t\t\t\tthis.editor.setSelectedIds([\n\t\t\t\t\t...this.editor.selectedIds.filter((id) => !ancestors.find((a) => a.id === id)),\n\t\t\t\t\ttargetShape.id,\n\t\t\t\t])\n\t\t\t} else {\n\t\t\t\t// different shape and we are drilling down, but no shift held so just select it straight up\n\t\t\t\tthis.editor.setSelectedIds([targetShape.id])\n\t\t\t}\n\t\t} else if (this.selectingShape.id === this.editor.focusLayerId) {\n\t\t\t// clicking the 'background' of a focused group should deselect. equivalent to a click on the canvas\n\t\t\tif (this.editor.selectedIds.length > 0) {\n\t\t\t\tthis.editor.setSelectedIds([])\n\t\t\t} else {\n\t\t\t\tthis.editor.popFocusLayer()\n\t\t\t}\n\t\t}\n\n\t\tthis.parent.transition('idle', info)\n\t}\n\n\tonPointerMove: TLEventHandlers['onPointerMove'] = (info) => {\n\t\tif (this.editor.inputs.isDragging) {\n\t\t\tif (this.editor.isReadOnly) return\n\t\t\tthis.parent.transition('translating', info)\n\t\t}\n\t}\n\n\toverride onCancel: TLEventHandlers['onCancel'] = () => {\n\t\tthis.cancel()\n\t}\n\n\toverride onComplete: TLEventHandlers['onComplete'] = () => {\n\t\tthis.cancel()\n\t}\n\n\toverride onInterrupt = () => {\n\t\tthis.cancel()\n\t}\n\n\tprivate cancel() {\n\t\tthis.parent.transition('idle', {})\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
