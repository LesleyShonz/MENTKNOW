{"ast":null,"code":"import _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { Box2d, linesIntersect, pointInPolygon, Vec2d } from \"@tldraw/primitives\";\nimport { ShapeUtil } from \"./ShapeUtil.mjs\";\nimport { resizeBox } from \"./shared/resizeBox.mjs\";\nvar BaseBoxShapeUtil = /*#__PURE__*/function (_ShapeUtil) {\n  _inherits(BaseBoxShapeUtil, _ShapeUtil);\n  var _super = _createSuper(BaseBoxShapeUtil);\n  function BaseBoxShapeUtil() {\n    var _this;\n    _classCallCheck(this, BaseBoxShapeUtil);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"onResize\", function (shape, info) {\n      return resizeBox(shape, info);\n    });\n    return _this;\n  }\n  _createClass(BaseBoxShapeUtil, [{\n    key: \"getBounds\",\n    value: function getBounds(shape) {\n      return new Box2d(0, 0, shape.props.w, shape.props.h);\n    }\n  }, {\n    key: \"getCenter\",\n    value: function getCenter(shape) {\n      return new Vec2d(shape.props.w / 2, shape.props.h / 2);\n    }\n  }, {\n    key: \"getOutline\",\n    value: function getOutline(shape) {\n      return this.bounds(shape).corners;\n    }\n  }, {\n    key: \"hitTestPoint\",\n    value: function hitTestPoint(shape, point) {\n      return pointInPolygon(point, this.outline(shape));\n    }\n  }, {\n    key: \"hitTestLineSegment\",\n    value: function hitTestLineSegment(shape, A, B) {\n      var outline = this.outline(shape);\n      for (var i = 0; i < outline.length; i++) {\n        var C = outline[i];\n        var D = outline[(i + 1) % outline.length];\n        if (linesIntersect(A, B, C, D)) return true;\n      }\n      return false;\n    }\n  }]);\n  return BaseBoxShapeUtil;\n}(ShapeUtil);\nexport { BaseBoxShapeUtil };","map":{"version":3,"names":["Box2d","linesIntersect","pointInPolygon","Vec2d","ShapeUtil","resizeBox","BaseBoxShapeUtil","_ShapeUtil","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","shape","info","_createClass","key","value","getBounds","props","w","h","getCenter","getOutline","bounds","corners","hitTestPoint","point","outline","hitTestLineSegment","A","B","i","C","D"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/BaseBoxShapeUtil.tsx"],"sourcesContent":["import { Box2d, linesIntersect, pointInPolygon, Vec2d, VecLike } from '@tldraw/primitives'\nimport { TLBaseShape } from '@tldraw/tlschema'\nimport { ShapeUtil, TLOnResizeHandler } from './ShapeUtil'\nimport { resizeBox } from './shared/resizeBox'\n\n/** @public */\nexport type TLBaseBoxShape = TLBaseShape<string, { w: number; h: number }>\n\n/** @public */\nexport abstract class BaseBoxShapeUtil<Shape extends TLBaseBoxShape> extends ShapeUtil<Shape> {\n\toverride getBounds(shape: Shape) {\n\t\treturn new Box2d(0, 0, shape.props.w, shape.props.h)\n\t}\n\n\toverride getCenter(shape: Shape) {\n\t\treturn new Vec2d(shape.props.w / 2, shape.props.h / 2)\n\t}\n\n\toverride getOutline(shape: Shape) {\n\t\treturn this.bounds(shape).corners\n\t}\n\n\thitTestPoint(shape: Shape, point: VecLike): boolean {\n\t\treturn pointInPolygon(point, this.outline(shape))\n\t}\n\n\thitTestLineSegment(shape: Shape, A: VecLike, B: VecLike): boolean {\n\t\tconst outline = this.outline(shape)\n\n\t\tfor (let i = 0; i < outline.length; i++) {\n\t\t\tconst C = outline[i]\n\t\t\tconst D = outline[(i + 1) % outline.length]\n\t\t\tif (linesIntersect(A, B, C, D)) return true\n\t\t}\n\n\t\treturn false\n\t}\n\n\tonResize: TLOnResizeHandler<any> = (shape, info) => {\n\t\treturn resizeBox(shape, info)\n\t}\n}\n"],"mappings":";;;;;;AAAA,SAASA,KAAA,EAAOC,cAAA,EAAgBC,cAAA,EAAgBC,KAAA,QAAsB;AAEtE,SAASC,SAAA,QAAoC;AAC7C,SAASC,SAAA,QAAiB;AAAA,IAMJC,gBAAA,0BAAAC,UAAA;EAAAC,SAAA,CAAAF,gBAAA,EAAAC,UAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,gBAAA;EAAA,SAAAA,iBAAA;IAAA,IAAAK,KAAA;IAAAC,eAAA,OAAAN,gBAAA;IAAA,SAAAO,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAAAC,IAAA,OAAAC,KAAA,CAAAJ,IAAA,GAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAAF,IAAA,CAAAE,IAAA,IAAAJ,SAAA,CAAAI,IAAA;IAAA;IAAAP,KAAA,GAAAF,MAAA,CAAAU,IAAA,CAAAC,KAAA,CAAAX,MAAA,SAAAY,MAAA,CAAAL,IAAA;IAAAM,eAAA,CAAAC,sBAAA,CAAAZ,KAAA,eA6Bc,UAACa,KAAA,EAAOC,IAAA,EAAS;MACnD,OAAOpB,SAAA,CAAUmB,KAAA,EAAOC,IAAI;IAC7B;IAAA,OAAAd,KAAA;EAAA;EAAAe,YAAA,CAAApB,gBAAA;IAAAqB,GAAA;IAAAC,KAAA,EA9BS,SAAAC,UAAUL,KAAA,EAAc;MAChC,OAAO,IAAIxB,KAAA,CAAM,GAAG,GAAGwB,KAAA,CAAMM,KAAA,CAAMC,CAAA,EAAGP,KAAA,CAAMM,KAAA,CAAME,CAAC;IACpD;EAAA;IAAAL,GAAA;IAAAC,KAAA,EAES,SAAAK,UAAUT,KAAA,EAAc;MAChC,OAAO,IAAIrB,KAAA,CAAMqB,KAAA,CAAMM,KAAA,CAAMC,CAAA,GAAI,GAAGP,KAAA,CAAMM,KAAA,CAAME,CAAA,GAAI,CAAC;IACtD;EAAA;IAAAL,GAAA;IAAAC,KAAA,EAES,SAAAM,WAAWV,KAAA,EAAc;MACjC,OAAO,KAAKW,MAAA,CAAOX,KAAK,EAAEY,OAAA;IAC3B;EAAA;IAAAT,GAAA;IAAAC,KAAA,EAEA,SAAAS,aAAab,KAAA,EAAcc,KAAA,EAAyB;MACnD,OAAOpC,cAAA,CAAeoC,KAAA,EAAO,KAAKC,OAAA,CAAQf,KAAK,CAAC;IACjD;EAAA;IAAAG,GAAA;IAAAC,KAAA,EAEA,SAAAY,mBAAmBhB,KAAA,EAAciB,CAAA,EAAYC,CAAA,EAAqB;MACjE,IAAMH,OAAA,GAAU,KAAKA,OAAA,CAAQf,KAAK;MAElC,SAASmB,CAAA,GAAI,GAAGA,CAAA,GAAIJ,OAAA,CAAQxB,MAAA,EAAQ4B,CAAA,IAAK;QACxC,IAAMC,CAAA,GAAIL,OAAA,CAAQI,CAAC;QACnB,IAAME,CAAA,GAAIN,OAAA,EAASI,CAAA,GAAI,KAAKJ,OAAA,CAAQxB,MAAM;QAC1C,IAAId,cAAA,CAAewC,CAAA,EAAGC,CAAA,EAAGE,CAAA,EAAGC,CAAC,GAAG,OAAO;MACxC;MAEA,OAAO;IACR;EAAA;EAAA,OAAAvC,gBAAA;AAAA,EA3B4EF,SAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}