{
  "version": 3,
  "sources": ["../../../../../src/lib/editor/shapes/shared/ShapeFill.tsx"],
  "sourcesContent": ["import { TLDefaultColorStyle, TLDefaultFillStyle } from '@tldraw/tlschema'\nimport * as React from 'react'\nimport { useValue } from 'signia-react'\nimport { HASH_PATERN_ZOOM_NAMES } from '../../../constants'\nimport { useEditor } from '../../../hooks/useEditor'\nimport { TLExportColors } from './TLExportColors'\n\nexport interface ShapeFillProps {\n\td: string\n\tfill: TLDefaultFillStyle\n\tcolor: TLDefaultColorStyle\n}\n\nexport const ShapeFill = React.memo(function ShapeFill({ d, color, fill }: ShapeFillProps) {\n\tswitch (fill) {\n\t\tcase 'none': {\n\t\t\treturn <path className={'tl-hitarea-stroke'} fill=\"none\" d={d} />\n\t\t}\n\t\tcase 'solid': {\n\t\t\treturn (\n\t\t\t\t<path className={'tl-hitarea-fill-solid'} fill={`var(--palette-${color}-semi)`} d={d} />\n\t\t\t)\n\t\t}\n\t\tcase 'semi': {\n\t\t\treturn <path className={'tl-hitarea-fill-solid'} fill={`var(--palette-solid)`} d={d} />\n\t\t}\n\t\tcase 'pattern': {\n\t\t\treturn <PatternFill color={color} fill={fill} d={d} />\n\t\t}\n\t}\n})\n\nconst PatternFill = function PatternFill({ d, color }: ShapeFillProps) {\n\tconst editor = useEditor()\n\tconst zoomLevel = useValue('zoomLevel', () => editor.zoomLevel, [editor])\n\tconst isDarkMode = useValue('isDarkMode', () => editor.isDarkMode, [editor])\n\n\tconst intZoom = Math.ceil(zoomLevel)\n\tconst teenyTiny = editor.zoomLevel <= 0.18\n\n\treturn (\n\t\t<>\n\t\t\t<path className={'tl-hitarea-fill-solid'} fill={`var(--palette-${color}-pattern)`} d={d} />\n\t\t\t<path\n\t\t\t\tfill={\n\t\t\t\t\tteenyTiny\n\t\t\t\t\t\t? `var(--palette-${color}-semi)`\n\t\t\t\t\t\t: `url(#${HASH_PATERN_ZOOM_NAMES[intZoom + (isDarkMode ? '_dark' : '_light')]})`\n\t\t\t\t}\n\t\t\t\td={d}\n\t\t\t/>\n\t\t</>\n\t)\n}\n\nexport function getShapeFillSvg({\n\td,\n\tcolor,\n\tfill,\n\tcolors,\n}: ShapeFillProps & { colors: TLExportColors }) {\n\tif (fill === 'none') {\n\t\treturn\n\t}\n\n\tif (fill === 'pattern') {\n\t\tconst gEl = document.createElementNS('http://www.w3.org/2000/svg', 'g')\n\t\tconst path1El = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\t\tpath1El.setAttribute('d', d)\n\t\tpath1El.setAttribute('fill', colors.pattern[color])\n\n\t\tconst path2El = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\t\tpath2El.setAttribute('d', d)\n\t\tpath2El.setAttribute('fill', `url(#hash_pattern)`)\n\n\t\tgEl.appendChild(path1El)\n\t\tgEl.appendChild(path2El)\n\t\treturn gEl\n\t}\n\n\tconst path = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\tpath.setAttribute('d', d)\n\n\tswitch (fill) {\n\t\tcase 'semi': {\n\t\t\tpath.setAttribute('fill', colors.solid)\n\t\t\tbreak\n\t\t}\n\t\tcase 'solid': {\n\t\t\t{\n\t\t\t\tpath.setAttribute('fill', colors.semi[color])\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t}\n\n\treturn path\n}\n\nexport function getSvgWithShapeFill(foregroundPath: SVGElement, backgroundPath?: SVGElement) {\n\tif (backgroundPath) {\n\t\t// If there is a fill element, return a group containing the fill and the path\n\t\tconst g = document.createElementNS('http://www.w3.org/2000/svg', 'g')\n\t\tg.appendChild(backgroundPath)\n\t\tg.appendChild(foregroundPath)\n\t\treturn g\n\t} else {\n\t\t// Otherwise, just return the path\n\t\treturn foregroundPath\n\t}\n}\n"],
  "mappings": "AAgBU,SAyBR,UAzBQ,KAyBR,YAzBQ;AAfV,YAAY,WAAW;AACvB,SAAS,gBAAgB;AACzB,SAAS,8BAA8B;AACvC,SAAS,iBAAiB;AASnB,MAAM,YAAY,MAAM,KAAK,SAASA,WAAU,EAAE,GAAG,OAAO,KAAK,GAAmB;AAC1F,UAAQ,MAAM;AAAA,IACb,KAAK,QAAQ;AACZ,aAAO,oBAAC,UAAK,WAAW,qBAAqB,MAAK,QAAO,GAAM;AAAA,IAChE;AAAA,IACA,KAAK,SAAS;AACb,aACC,oBAAC,UAAK,WAAW,yBAAyB,MAAM,iBAAiB,eAAe,GAAM;AAAA,IAExF;AAAA,IACA,KAAK,QAAQ;AACZ,aAAO,oBAAC,UAAK,WAAW,yBAAyB,MAAM,wBAAwB,GAAM;AAAA,IACtF;AAAA,IACA,KAAK,WAAW;AACf,aAAO,oBAAC,eAAY,OAAc,MAAY,GAAM;AAAA,IACrD;AAAA,EACD;AACD,CAAC;AAED,MAAM,cAAc,SAASC,aAAY,EAAE,GAAG,MAAM,GAAmB;AACtE,QAAM,SAAS,UAAU;AACzB,QAAM,YAAY,SAAS,aAAa,MAAM,OAAO,WAAW,CAAC,MAAM,CAAC;AACxE,QAAM,aAAa,SAAS,cAAc,MAAM,OAAO,YAAY,CAAC,MAAM,CAAC;AAE3E,QAAM,UAAU,KAAK,KAAK,SAAS;AACnC,QAAM,YAAY,OAAO,aAAa;AAEtC,SACC,iCACC;AAAA,wBAAC,UAAK,WAAW,yBAAyB,MAAM,iBAAiB,kBAAkB,GAAM;AAAA,IACzF;AAAA,MAAC;AAAA;AAAA,QACA,MACC,YACG,iBAAiB,gBACjB,QAAQ,uBAAuB,WAAW,aAAa,UAAU,SAAS;AAAA,QAE9E;AAAA;AAAA,IACD;AAAA,KACD;AAEF;AAEO,SAAS,gBAAgB;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAAgD;AAC/C,MAAI,SAAS,QAAQ;AACpB;AAAA,EACD;AAEA,MAAI,SAAS,WAAW;AACvB,UAAM,MAAM,SAAS,gBAAgB,8BAA8B,GAAG;AACtE,UAAM,UAAU,SAAS,gBAAgB,8BAA8B,MAAM;AAC7E,YAAQ,aAAa,KAAK,CAAC;AAC3B,YAAQ,aAAa,QAAQ,OAAO,QAAQ,KAAK,CAAC;AAElD,UAAM,UAAU,SAAS,gBAAgB,8BAA8B,MAAM;AAC7E,YAAQ,aAAa,KAAK,CAAC;AAC3B,YAAQ,aAAa,QAAQ,oBAAoB;AAEjD,QAAI,YAAY,OAAO;AACvB,QAAI,YAAY,OAAO;AACvB,WAAO;AAAA,EACR;AAEA,QAAM,OAAO,SAAS,gBAAgB,8BAA8B,MAAM;AAC1E,OAAK,aAAa,KAAK,CAAC;AAExB,UAAQ,MAAM;AAAA,IACb,KAAK,QAAQ;AACZ,WAAK,aAAa,QAAQ,OAAO,KAAK;AACtC;AAAA,IACD;AAAA,IACA,KAAK,SAAS;AACb;AACC,aAAK,aAAa,QAAQ,OAAO,KAAK,KAAK,CAAC;AAAA,MAC7C;AACA;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AACR;AAEO,SAAS,oBAAoB,gBAA4B,gBAA6B;AAC5F,MAAI,gBAAgB;AAEnB,UAAM,IAAI,SAAS,gBAAgB,8BAA8B,GAAG;AACpE,MAAE,YAAY,cAAc;AAC5B,MAAE,YAAY,cAAc;AAC5B,WAAO;AAAA,EACR,OAAO;AAEN,WAAO;AAAA,EACR;AACD;",
  "names": ["ShapeFill", "PatternFill"]
}
