{"ast":null,"code":"import _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { getEmbedInfo, useEditor } from \"@tldraw/editor\";\nimport { EMBED_DEFINITIONS } from \"@tldraw/tlschema\";\nimport { useRef, useState } from \"react\";\nimport { track } from \"signia-react\";\nimport { useAssetUrls } from \"../hooks/useAssetUrls.mjs\";\nimport { useTranslation } from \"../hooks/useTranslation/useTranslation.mjs\";\nimport { Button } from \"./primitives/Button.mjs\";\nimport * as Dialog from \"./primitives/Dialog.mjs\";\nimport { Icon } from \"./primitives/Icon.mjs\";\nimport { Input } from \"./primitives/Input.mjs\";\nvar EmbedDialog = track(function EmbedDialog2(_ref) {\n  var onClose = _ref.onClose;\n  var editor = useEditor();\n  var msg = useTranslation();\n  var assetUrls = useAssetUrls();\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    embedDefinition = _useState2[0],\n    setEmbedDefinition = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    url = _useState4[0],\n    setUrl = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    embedInfoForUrl = _useState6[0],\n    setEmbedInfoForUrl = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    showError = _useState8[0],\n    setShowError = _useState8[1];\n  var rShowErrorTimeout = useRef(-1);\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsxs(Dialog.Header, {\n      children: [/* @__PURE__ */jsx(Dialog.Title, {\n        children: embedDefinition ? \"\".concat(msg(\"embed-dialog.title\"), \" \\u2014 \").concat(embedDefinition.title) : msg(\"embed-dialog.title\")\n      }), /* @__PURE__ */jsx(Dialog.CloseButton, {})]\n    }), embedDefinition ? /* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsxs(Dialog.Body, {\n        className: \"tlui-embed-dialog__enter\",\n        children: [/* @__PURE__ */jsx(Input, {\n          className: \"tlui-embed-dialog__input\",\n          label: \"embed-dialog.url\",\n          placeholder: \"http://example.com\",\n          autofocus: true,\n          onValueChange: function onValueChange(value) {\n            setUrl(value);\n            var embedInfo = getEmbedInfo(value);\n            setEmbedInfoForUrl(embedInfo && embedInfo.definition.type === embedDefinition.type ? embedInfo : null);\n            setShowError(false);\n            clearTimeout(rShowErrorTimeout.current);\n            rShowErrorTimeout.current = setTimeout(function () {\n              return setShowError(!embedInfo);\n            }, 320);\n          }\n        }), url === \"\" ? /* @__PURE__ */jsxs(\"div\", {\n          className: \"tlui-embed-dialog__instruction\",\n          children: [/* @__PURE__ */jsx(\"span\", {\n            children: msg(\"embed-dialog.instruction\")\n          }), \" \", embedDefinition.instructionLink && /* @__PURE__ */jsxs(\"a\", {\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            href: embedDefinition.instructionLink,\n            className: \"tlui-embed-dialog__instruction__link\",\n            children: [\"Learn more.\", /* @__PURE__ */jsx(Icon, {\n              icon: \"external-link\",\n              small: true\n            })]\n          })]\n        }) : /* @__PURE__ */jsx(\"div\", {\n          className: \"tlui-embed-dialog__warning\",\n          children: showError ? msg(\"embed-dialog.invalid-url\") : \"\\xA0\"\n        })]\n      }), /* @__PURE__ */jsxs(Dialog.Footer, {\n        className: \"tlui-dialog__footer__actions\",\n        children: [/* @__PURE__ */jsx(Button, {\n          onClick: function onClick() {\n            setEmbedDefinition(null);\n            setEmbedInfoForUrl(null);\n            setUrl(\"\");\n          },\n          label: \"embed-dialog.back\"\n        }), /* @__PURE__ */jsx(\"div\", {\n          className: \"tlui-embed__spacer\"\n        }), /* @__PURE__ */jsx(Button, {\n          label: \"embed-dialog.cancel\",\n          onClick: onClose\n        }), /* @__PURE__ */jsx(Button, {\n          type: \"primary\",\n          disabled: !embedInfoForUrl,\n          label: \"embed-dialog.create\",\n          onClick: function onClick() {\n            if (!embedInfoForUrl) return;\n            editor.putExternalContent({\n              type: \"embed\",\n              url: url,\n              point: editor.viewportPageCenter,\n              embed: embedInfoForUrl.definition\n            });\n            onClose();\n          }\n        })]\n      })]\n    }) : /* @__PURE__ */jsxs(Fragment, {\n      children: [/* @__PURE__ */jsx(Dialog.Body, {\n        className: \"tlui-embed-dialog__list\",\n        children: EMBED_DEFINITIONS.map(function (def) {\n          return /* @__PURE__ */jsxs(\"button\", {\n            className: \"tlui-embed-dialog__item\",\n            onClick: function onClick() {\n              return setEmbedDefinition(def);\n            },\n            children: [/* @__PURE__ */jsx(\"div\", {\n              className: \"tlui-embed-dialog__item__image\",\n              children: /* @__PURE__ */jsx(\"div\", {\n                className: \"tlui-embed-dialog__item__image__img\",\n                style: {\n                  backgroundImage: \"url(\".concat(assetUrls.embedIcons[def.type], \")\")\n                }\n              })\n            }), /* @__PURE__ */jsx(\"div\", {\n              className: \"tlui-embed-dialog__item__title\",\n              children: def.title\n            })]\n          }, def.type);\n        })\n      }), /* @__PURE__ */jsx(\"div\", {\n        className: \"tlui-dialog__scrim\"\n      })]\n    })]\n  });\n});\nexport { EmbedDialog };","map":{"version":3,"names":["Fragment","jsx","jsxs","getEmbedInfo","useEditor","EMBED_DEFINITIONS","useRef","useState","track","useAssetUrls","useTranslation","Button","Dialog","Icon","Input","EmbedDialog","EmbedDialog2","_ref","onClose","editor","msg","assetUrls","_useState","_useState2","_slicedToArray","embedDefinition","setEmbedDefinition","_useState3","_useState4","url","setUrl","_useState5","_useState6","embedInfoForUrl","setEmbedInfoForUrl","_useState7","_useState8","showError","setShowError","rShowErrorTimeout","children","Header","Title","concat","title","CloseButton","Body","className","label","placeholder","autofocus","onValueChange","value","embedInfo","definition","type","clearTimeout","current","setTimeout","instructionLink","target","rel","href","icon","small","Footer","onClick","disabled","putExternalContent","point","viewportPageCenter","embed","map","def","style","backgroundImage","embedIcons"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/EmbedDialog.tsx"],"sourcesContent":["import { TLEmbedResult, getEmbedInfo, useEditor } from '@tldraw/editor'\nimport { EMBED_DEFINITIONS, EmbedDefinition } from '@tldraw/tlschema'\nimport { useRef, useState } from 'react'\nimport { track } from 'signia-react'\nimport { useAssetUrls } from '../hooks/useAssetUrls'\nimport { TLUiDialogProps } from '../hooks/useDialogsProvider'\nimport { useTranslation } from '../hooks/useTranslation/useTranslation'\nimport { Button } from './primitives/Button'\nimport * as Dialog from './primitives/Dialog'\nimport { Icon } from './primitives/Icon'\nimport { Input } from './primitives/Input'\n\nexport const EmbedDialog = track(function EmbedDialog({ onClose }: TLUiDialogProps) {\n\tconst editor = useEditor()\n\tconst msg = useTranslation()\n\tconst assetUrls = useAssetUrls()\n\n\t// The embed definition for the user's selected embed (set by the user clicking on an embed in stage 1)\n\tconst [embedDefinition, setEmbedDefinition] = useState<null | EmbedDefinition>(null)\n\n\t// The URL that the user has typed into (in stage 2)\n\tconst [url, setUrl] = useState<string>('')\n\n\t// The embed info for the user's selected embed (based on the URL they've entered in stage 2)\n\tconst [embedInfoForUrl, setEmbedInfoForUrl] = useState<null | TLEmbedResult>(null)\n\n\t// Should we show the \"invalid URL\" error message?\n\tconst [showError, setShowError] = useState(false)\n\tconst rShowErrorTimeout = useRef<any>(-1)\n\n\treturn (\n\t\t<>\n\t\t\t<Dialog.Header>\n\t\t\t\t<Dialog.Title>\n\t\t\t\t\t{embedDefinition\n\t\t\t\t\t\t? `${msg('embed-dialog.title')} â€” ${embedDefinition.title}`\n\t\t\t\t\t\t: msg('embed-dialog.title')}\n\t\t\t\t</Dialog.Title>\n\t\t\t\t<Dialog.CloseButton />\n\t\t\t</Dialog.Header>\n\t\t\t{embedDefinition ? (\n\t\t\t\t<>\n\t\t\t\t\t<Dialog.Body className=\"tlui-embed-dialog__enter\">\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName=\"tlui-embed-dialog__input\"\n\t\t\t\t\t\t\tlabel=\"embed-dialog.url\"\n\t\t\t\t\t\t\tplaceholder=\"http://example.com\"\n\t\t\t\t\t\t\tautofocus\n\t\t\t\t\t\t\tonValueChange={(value) => {\n\t\t\t\t\t\t\t\t// Set the url that the user has typed into the input\n\t\t\t\t\t\t\t\tsetUrl(value)\n\n\t\t\t\t\t\t\t\t// Set the embed info to either the embed info for the URL (if\n\t\t\t\t\t\t\t\t// that embed info can be found and of a type that matches the\n\t\t\t\t\t\t\t\t// user's selected definition type)\n\t\t\t\t\t\t\t\tconst embedInfo = getEmbedInfo(value)\n\t\t\t\t\t\t\t\tsetEmbedInfoForUrl(\n\t\t\t\t\t\t\t\t\tembedInfo && embedInfo.definition.type === embedDefinition.type ? embedInfo : null\n\t\t\t\t\t\t\t\t)\n\n\t\t\t\t\t\t\t\t// We want to hide the error when the user enters text,\n\t\t\t\t\t\t\t\t// and then show an error after a short delay if the user\n\t\t\t\t\t\t\t\t// has not yet entered a valid URL.\n\t\t\t\t\t\t\t\tsetShowError(false)\n\t\t\t\t\t\t\t\tclearTimeout(rShowErrorTimeout.current)\n\t\t\t\t\t\t\t\trShowErrorTimeout.current = setTimeout(() => setShowError(!embedInfo), 320)\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{url === '' ? (\n\t\t\t\t\t\t\t<div className=\"tlui-embed-dialog__instruction\">\n\t\t\t\t\t\t\t\t<span>{msg('embed-dialog.instruction')}</span>{' '}\n\t\t\t\t\t\t\t\t{embedDefinition.instructionLink && (\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t\t\t\thref={embedDefinition.instructionLink}\n\t\t\t\t\t\t\t\t\t\tclassName=\"tlui-embed-dialog__instruction__link\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tLearn more.\n\t\t\t\t\t\t\t\t\t\t<Icon icon=\"external-link\" small />\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<div className=\"tlui-embed-dialog__warning\">\n\t\t\t\t\t\t\t\t{showError ? msg('embed-dialog.invalid-url') : '\\xa0'}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Dialog.Body>\n\t\t\t\t\t<Dialog.Footer className=\"tlui-dialog__footer__actions\">\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetEmbedDefinition(null)\n\t\t\t\t\t\t\t\tsetEmbedInfoForUrl(null)\n\t\t\t\t\t\t\t\tsetUrl('')\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tlabel=\"embed-dialog.back\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<div className=\"tlui-embed__spacer\" />\n\t\t\t\t\t\t<Button label=\"embed-dialog.cancel\" onClick={onClose} />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\t\t\tdisabled={!embedInfoForUrl}\n\t\t\t\t\t\t\tlabel=\"embed-dialog.create\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tif (!embedInfoForUrl) return\n\n\t\t\t\t\t\t\t\teditor.putExternalContent({\n\t\t\t\t\t\t\t\t\ttype: 'embed',\n\t\t\t\t\t\t\t\t\turl,\n\t\t\t\t\t\t\t\t\tpoint: editor.viewportPageCenter,\n\t\t\t\t\t\t\t\t\tembed: embedInfoForUrl.definition,\n\t\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\t\tonClose()\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Dialog.Footer>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<>\n\t\t\t\t\t<Dialog.Body className=\"tlui-embed-dialog__list\">\n\t\t\t\t\t\t{EMBED_DEFINITIONS.map((def) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tkey={def.type}\n\t\t\t\t\t\t\t\t\tclassName=\"tlui-embed-dialog__item\"\n\t\t\t\t\t\t\t\t\tonClick={() => setEmbedDefinition(def)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<div className=\"tlui-embed-dialog__item__image\">\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"tlui-embed-dialog__item__image__img\"\n\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\tbackgroundImage: `url(${assetUrls.embedIcons[def.type]})`,\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className=\"tlui-embed-dialog__item__title\">{def.title}</div>\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</Dialog.Body>\n\t\t\t\t\t<div className=\"tlui-dialog__scrim\" />\n\t\t\t\t</>\n\t\t\t)}\n\t\t</>\n\t)\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}