import * as Y from 'yjs';
import { PartyKitRoom } from 'partykit/server';

interface CallbackOptions {
    debounceWait?: number;
    debounceMaxWait?: number;
    timeout?: number;
    objects?: Record<string, string>;
}
interface HandlerCallbackOptions extends CallbackOptions {
    handler: (doc: Y.Doc) => void;
    url?: never;
}
interface UrlCallbackOptions extends CallbackOptions {
    handler?: never;
    url: string;
}
type YPartyKitCallbackOptions = HandlerCallbackOptions | UrlCallbackOptions;
type YPartyKitOptions = {
    /**
     * disable gc when using snapshots!
     * */
    gc?: boolean;
    persist?: boolean;
    callback?: YPartyKitCallbackOptions;
    load?: () => Promise<Y.Doc>;
};
declare function onConnect(conn: WebSocket, room: PartyKitRoom, options?: YPartyKitOptions): Promise<void>;

export { YPartyKitOptions, onConnect };
