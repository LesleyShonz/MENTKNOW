{
  "version": 3,
  "sources": ["../../src/records/TLPointer.ts"],
  "sourcesContent": ["import { BaseRecord, createRecordType, defineMigrations, RecordId } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\n\n/**\n * TLPointer\n *\n * @public\n */\nexport interface TLPointer extends BaseRecord<'pointer', TLPointerId> {\n\tx: number\n\ty: number\n\tlastActivityTimestamp: number\n}\n\n/** @public */\nexport type TLPointerId = RecordId<TLPointer>\n\n/** @internal */\nexport const pointerValidator: T.Validator<TLPointer> = T.model(\n\t'pointer',\n\tT.object({\n\t\ttypeName: T.literal('pointer'),\n\t\tid: idValidator<TLPointerId>('pointer'),\n\t\tx: T.number,\n\t\ty: T.number,\n\t\tlastActivityTimestamp: T.number,\n\t})\n)\n\n/** @internal */\nexport const pointerMigrations = defineMigrations({})\n\n/** @public */\nexport const PointerRecordType = createRecordType<TLPointer>('pointer', {\n\tvalidator: pointerValidator,\n\tmigrations: pointerMigrations,\n\tscope: 'session',\n}).withDefaultProperties(\n\t(): Omit<TLPointer, 'id' | 'typeName'> => ({\n\t\tx: 0,\n\t\ty: 0,\n\t\tlastActivityTimestamp: 0,\n\t})\n)\n\n/** @public */\nexport const TLPOINTER_ID = PointerRecordType.createId('pointer')\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAyE;AACzE,sBAAkB;AAClB,0BAA4B;AAiBrB,MAAM,mBAA2C,kBAAE;AAAA,EACzD;AAAA,EACA,kBAAE,OAAO;AAAA,IACR,UAAU,kBAAE,QAAQ,SAAS;AAAA,IAC7B,QAAI,iCAAyB,SAAS;AAAA,IACtC,GAAG,kBAAE;AAAA,IACL,GAAG,kBAAE;AAAA,IACL,uBAAuB,kBAAE;AAAA,EAC1B,CAAC;AACF;AAGO,MAAM,wBAAoB,+BAAiB,CAAC,CAAC;AAG7C,MAAM,wBAAoB,+BAA4B,WAAW;AAAA,EACvE,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,OAAO;AACR,CAAC,EAAE;AAAA,EACF,OAA2C;AAAA,IAC1C,GAAG;AAAA,IACH,GAAG;AAAA,IACH,uBAAuB;AAAA,EACxB;AACD;AAGO,MAAM,eAAe,kBAAkB,SAAS,SAAS;",
  "names": []
}
