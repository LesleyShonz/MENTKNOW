{
  "version": 3,
  "sources": ["../../src/records/TLCamera.ts"],
  "sourcesContent": ["import { BaseRecord, createRecordType, defineMigrations, RecordId } from '@tldraw/store'\nimport { T } from '@tldraw/validate'\nimport { idValidator } from '../misc/id-validator'\n\n/**\n * A camera record.\n *\n * @public\n */\nexport interface TLCamera extends BaseRecord<'camera', TLCameraId> {\n\tx: number\n\ty: number\n\tz: number\n}\n\n/**\n * The id of a camera record.\n *\n * @public */\nexport type TLCameraId = RecordId<TLCamera>\n\n/** @internal */\nexport const cameraValidator: T.Validator<TLCamera> = T.model(\n\t'camera',\n\tT.object({\n\t\ttypeName: T.literal('camera'),\n\t\tid: idValidator<TLCameraId>('camera'),\n\t\tx: T.number,\n\t\ty: T.number,\n\t\tz: T.number,\n\t})\n)\n\n/** @internal */\nexport const cameraMigrations = defineMigrations({})\n\n/** @public */\nexport const CameraRecordType = createRecordType<TLCamera>('camera', {\n\tvalidator: cameraValidator,\n\tmigrations: cameraMigrations,\n\tscope: 'session',\n}).withDefaultProperties(\n\t(): Omit<TLCamera, 'id' | 'typeName'> => ({\n\t\tx: 0,\n\t\ty: 0,\n\t\tz: 1,\n\t})\n)\n"],
  "mappings": "AAAA,SAAqB,kBAAkB,wBAAkC;AACzE,SAAS,SAAS;AAClB,SAAS,mBAAmB;AAoBrB,MAAM,kBAAyC,EAAE;AAAA,EACvD;AAAA,EACA,EAAE,OAAO;AAAA,IACR,UAAU,EAAE,QAAQ,QAAQ;AAAA,IAC5B,IAAI,YAAwB,QAAQ;AAAA,IACpC,GAAG,EAAE;AAAA,IACL,GAAG,EAAE;AAAA,IACL,GAAG,EAAE;AAAA,EACN,CAAC;AACF;AAGO,MAAM,mBAAmB,iBAAiB,CAAC,CAAC;AAG5C,MAAM,mBAAmB,iBAA2B,UAAU;AAAA,EACpE,WAAW;AAAA,EACX,YAAY;AAAA,EACZ,OAAO;AACR,CAAC,EAAE;AAAA,EACF,OAA0C;AAAA,IACzC,GAAG;AAAA,IACH,GAAG;AAAA,IACH,GAAG;AAAA,EACJ;AACD;",
  "names": []
}
