{
  "version": 3,
  "sources": ["../../src/wrapJsx.ts"],
  "sourcesContent": ["// This file was copied and adapted with thanks from the preactjs/preact repo.\n// https://github.com/preactjs/signals/blob/main/packages/react/src/index.ts\n\n// The MIT License (MIT)\n\n// Copyright (c) 2022-present Preact Team\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n\nimport { Component, type FunctionComponent } from 'react'\nimport { track } from './track.js'\n\nconst ReactMemoType = Symbol.for('react.memo') // https://github.com/facebook/react/blob/346c7d4c43a0717302d446da9e7423a8e28d8996/packages/shared/ReactSymbols.js#L30\nconst ReactForwardRefType = Symbol.for('react.forward_ref')\nconst ProxyInstance = new WeakMap<FunctionComponent<any>, FunctionComponent<any>>()\n\nfunction proxyFunctionalComponent(Component: FunctionComponent<any>) {\n\tconst existing = ProxyInstance.get(Component)\n\tif (existing) return existing\n\tconst tracked = track(Component)\n\tProxyInstance.set(Component, tracked)\n\treturn tracked\n}\n\n/** @internal */\nexport function wrapJsx<T>(jsx: T): T {\n\tif (typeof jsx !== 'function') return jsx\n\n\treturn function (type: any, props: any, ...rest: any[]) {\n\t\tif (typeof type === 'function' && !(type instanceof Component)) {\n\t\t\ttype = proxyFunctionalComponent(type)\n\t\t} else if (type && typeof type === 'object') {\n\t\t\tif (type.$$typeof === ReactMemoType) {\n\t\t\t\ttype = proxyFunctionalComponent(type.type)\n\t\t\t} else if (type.$$typeof === ReactForwardRefType) {\n\t\t\t\ttype = proxyFunctionalComponent(type)\n\t\t\t}\n\t\t}\n\n\t\treturn jsx.call(jsx, type, props, ...rest)\n\t} as any as T\n}\n"],
  "mappings": ";AAyBA,SAAS,iBAAyC;AAClD,SAAS,aAAa;AAEtB,IAAM,gBAAgB,OAAO,IAAI,YAAY;AAC7C,IAAM,sBAAsB,OAAO,IAAI,mBAAmB;AAC1D,IAAM,gBAAgB,oBAAI,QAAwD;AAElF,SAAS,yBAAyBA,YAAmC;AACpE,QAAM,WAAW,cAAc,IAAIA,UAAS;AAC5C,MAAI;AAAU,WAAO;AACrB,QAAM,UAAU,MAAMA,UAAS;AAC/B,gBAAc,IAAIA,YAAW,OAAO;AACpC,SAAO;AACR;AAGO,SAAS,QAAW,KAAW;AACrC,MAAI,OAAO,QAAQ;AAAY,WAAO;AAEtC,SAAO,SAAU,MAAW,UAAe,MAAa;AACvD,QAAI,OAAO,SAAS,cAAc,EAAE,gBAAgB,YAAY;AAC/D,aAAO,yBAAyB,IAAI;AAAA,IACrC,WAAW,QAAQ,OAAO,SAAS,UAAU;AAC5C,UAAI,KAAK,aAAa,eAAe;AACpC,eAAO,yBAAyB,KAAK,IAAI;AAAA,MAC1C,WAAW,KAAK,aAAa,qBAAqB;AACjD,eAAO,yBAAyB,IAAI;AAAA,MACrC;AAAA,IACD;AAEA,WAAO,IAAI,KAAK,KAAK,MAAM,OAAO,GAAG,IAAI;AAAA,EAC1C;AACD;",
  "names": ["Component"]
}
