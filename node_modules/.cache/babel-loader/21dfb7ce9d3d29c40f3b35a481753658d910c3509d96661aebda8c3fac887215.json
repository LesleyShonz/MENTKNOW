{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _createForOfIteratorHelper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _slicedToArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { Fragment, jsx, jsxs } from \"react/jsx-runtime\";\nimport { createShapeId, debugFlags, featureFlags, hardResetEditor, uniqueId, useEditor } from \"@tldraw/editor\";\nimport * as React from \"react\";\nimport { track, useValue } from \"signia-react\";\nimport { useDialogs } from \"../hooks/useDialogsProvider.mjs\";\nimport { useToasts } from \"../hooks/useToastsProvider.mjs\";\nimport { useTranslation } from \"../hooks/useTranslation/useTranslation.mjs\";\nimport { Button } from \"./primitives/Button.mjs\";\nimport * as Dialog from \"./primitives/Dialog.mjs\";\nimport * as DropdownMenu from \"./primitives/DropdownMenu.mjs\";\nvar t = 0;\nfunction createNShapes(editor, n) {\n  var shapesToCreate = Array(n);\n  var cols = Math.floor(Math.sqrt(n));\n  for (var i = 0; i < n; i++) {\n    t++;\n    shapesToCreate[i] = {\n      id: createShapeId(\"box\" + t),\n      type: \"geo\",\n      x: i % cols * 132,\n      y: Math.floor(i / cols) * 132\n    };\n  }\n  editor.batch(function () {\n    editor.createShapes(shapesToCreate).setSelectedIds(shapesToCreate.map(function (s) {\n      return s.id;\n    }));\n  });\n}\nvar DebugPanel = React.memo(function DebugPanel2(_ref) {\n  var renderDebugMenuItems = _ref.renderDebugMenuItems;\n  var msg = useTranslation();\n  return /* @__PURE__ */jsxs(\"div\", {\n    className: \"tlui-debug-panel\",\n    children: [/* @__PURE__ */jsx(CurrentState, {}), /* @__PURE__ */jsx(ShapeCount, {}), /* @__PURE__ */jsxs(DropdownMenu.Root, {\n      id: \"debug\",\n      children: [/* @__PURE__ */jsx(DropdownMenu.Trigger, {\n        children: /* @__PURE__ */jsx(Button, {\n          icon: \"dots-horizontal\",\n          title: msg(\"debug-panel.more\")\n        })\n      }), /* @__PURE__ */jsx(DropdownMenu.Content, {\n        side: \"top\",\n        align: \"end\",\n        alignOffset: 0,\n        children: /* @__PURE__ */jsx(DebugMenuContent, {\n          renderDebugMenuItems: renderDebugMenuItems\n        })\n      })]\n    })]\n  });\n});\nvar CurrentState = track(function CurrentState2() {\n  var editor = useEditor();\n  return /* @__PURE__ */jsx(\"div\", {\n    className: \"tlui-debug-panel__current-state\",\n    children: editor.root.path.value\n  });\n});\nvar ShapeCount = function ShapeCount2() {\n  var editor = useEditor();\n  var count = useValue(\"rendering shapes count\", function () {\n    return editor.renderingShapes.length;\n  }, [editor]);\n  return /* @__PURE__ */jsxs(\"div\", {\n    children: [count, \" Shapes\"]\n  });\n};\nvar DebugMenuContent = track(function DebugMenuContent2(_ref2) {\n  var renderDebugMenuItems = _ref2.renderDebugMenuItems;\n  var editor = useEditor();\n  var _useToasts = useToasts(),\n    addToast = _useToasts.addToast;\n  var _useDialogs = useDialogs(),\n    addDialog = _useDialogs.addDialog;\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    error = _React$useState2[0],\n    setError = _React$useState2[1];\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsxs(DropdownMenu.Group, {\n      children: [/* @__PURE__ */jsx(DropdownMenu.Item, {\n        onClick: function onClick() {\n          addToast({\n            id: uniqueId(),\n            title: \"Something happened\",\n            description: \"Hey, attend to this thing over here. It might be important!\"\n            // icon?: string\n            // title?: string\n            // description?: string\n            // actions?: TLUiToastAction[]\n          });\n        },\n\n        children: /* @__PURE__ */jsx(\"span\", {\n          children: \"Show toast\"\n        })\n      }), /* @__PURE__ */jsx(DropdownMenu.Item, {\n        onClick: function onClick() {\n          addDialog({\n            component: function component(_ref3) {\n              var onClose = _ref3.onClose;\n              return /* @__PURE__ */jsx(ExampleDialog, {\n                displayDontShowAgain: true,\n                onCancel: function onCancel() {\n                  onClose();\n                },\n                onContinue: function onContinue() {\n                  onClose();\n                }\n              });\n            },\n            onClose: function onClose() {}\n          });\n        },\n        children: /* @__PURE__ */jsx(\"span\", {\n          children: \"Show dialog\"\n        })\n      }), /* @__PURE__ */jsx(DropdownMenu.Item, {\n        onClick: function onClick() {\n          return createNShapes(editor, 100);\n        },\n        children: /* @__PURE__ */jsx(\"span\", {\n          children: \"Create 100 shapes\"\n        })\n      }), /* @__PURE__ */jsx(DropdownMenu.Item, {\n        onClick: function onClick() {\n          function countDescendants(_ref4) {\n            var children = _ref4.children;\n            var count = 0;\n            if (!children.length) return 0;\n            for (var _i = 0, _arr = _toConsumableArray(children); _i < _arr.length; _i++) {\n              var el = _arr[_i];\n              count++;\n              count += countDescendants(el);\n            }\n            return count;\n          }\n          var selectedShapes = editor.selectedShapes;\n          var shapes = selectedShapes.length === 0 ? editor.renderingShapes : selectedShapes;\n          var elms = shapes.map(function (shape) {\n            return document.getElementById(shape.id).parentElement;\n          });\n          var descendants = elms.length;\n          var _iterator = _createForOfIteratorHelper(elms),\n            _step;\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var elm = _step.value;\n              descendants += countDescendants(elm);\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n          window.alert(\"Shapes \".concat(shapes.length, \", DOM nodes:\").concat(descendants));\n        },\n        children: /* @__PURE__ */jsx(\"span\", {\n          children: \"Count shapes and nodes\"\n        })\n      }), function () {\n        if (error) throw Error(\"oh no!\");\n      }(), /* @__PURE__ */jsx(DropdownMenu.Item, {\n        onClick: function onClick() {\n          setError(true);\n        },\n        children: /* @__PURE__ */jsx(\"span\", {\n          children: \"Throw error\"\n        })\n      }), /* @__PURE__ */jsx(DropdownMenu.Item, {\n        onClick: function onClick() {\n          hardResetEditor();\n        },\n        children: /* @__PURE__ */jsx(\"span\", {\n          children: \"Hard reset\"\n        })\n      })]\n    }), /* @__PURE__ */jsxs(DropdownMenu.Group, {\n      children: [/* @__PURE__ */jsx(Toggle, {\n        label: \"Read-only\",\n        value: editor.isReadOnly,\n        onChange: function onChange(r) {\n          return editor.setReadOnly(r);\n        }\n      }), /* @__PURE__ */jsx(DebugFlagToggle, {\n        flag: debugFlags.debugSvg\n      }), /* @__PURE__ */jsx(DebugFlagToggle, {\n        flag: debugFlags.forceSrgb\n      }), /* @__PURE__ */jsx(DebugFlagToggle, {\n        flag: debugFlags.debugCursors,\n        onChange: function onChange(enabled) {\n          if (enabled) {\n            var MAX_COLUMNS = 5;\n            var partials = CURSOR_NAMES.map(function (name, i) {\n              return {\n                id: createShapeId(),\n                type: \"geo\",\n                x: i % MAX_COLUMNS * 175,\n                y: Math.floor(i / MAX_COLUMNS) * 175,\n                props: {\n                  text: name,\n                  w: 150,\n                  h: 150,\n                  fill: \"semi\"\n                }\n              };\n            });\n            editor.createShapes(partials);\n          }\n        }\n      })]\n    }), /* @__PURE__ */jsx(DropdownMenu.Group, {\n      children: Object.values(featureFlags).map(function (flag) {\n        return /* @__PURE__ */jsx(DebugFlagToggle, {\n          flag: flag\n        }, flag.name);\n      })\n    }), renderDebugMenuItems === null || renderDebugMenuItems === void 0 ? void 0 : renderDebugMenuItems()]\n  });\n});\nfunction Toggle(_ref5) {\n  var label = _ref5.label,\n    value = _ref5.value,\n    onChange = _ref5.onChange;\n  return /* @__PURE__ */jsx(DropdownMenu.CheckboxItem, {\n    title: label,\n    checked: value,\n    onSelect: function onSelect() {\n      return onChange(!value);\n    },\n    children: label\n  });\n}\nvar DebugFlagToggle = track(function DebugFlagToggle2(_ref6) {\n  var flag = _ref6.flag,\n    _onChange = _ref6.onChange;\n  return /* @__PURE__ */jsx(Toggle, {\n    label: flag.name.replace(/([a-z0-9])([A-Z])/g, function (m) {\n      return \"\".concat(m[0], \" \").concat(m[1].toLowerCase());\n    }).replace(/^[a-z]/, function (m) {\n      return m.toUpperCase();\n    }),\n    value: flag.value,\n    onChange: function onChange(newValue) {\n      flag.set(newValue);\n      _onChange === null || _onChange === void 0 || _onChange(newValue);\n    }\n  });\n});\nvar CURSOR_NAMES = [\"none\", \"default\", \"pointer\", \"cross\", \"move\", \"grab\", \"grabbing\", \"text\", \"ew-resize\", \"ns-resize\", \"nesw-resize\", \"nwse-resize\", \"nwse-rotate\", \"nesw-rotate\", \"senw-rotate\", \"swne-rotate\", \"zoom-in\", \"zoom-out\"];\nfunction ExampleDialog(_ref7) {\n  var _ref7$title = _ref7.title,\n    title = _ref7$title === void 0 ? \"title\" : _ref7$title,\n    _ref7$body = _ref7.body,\n    body = _ref7$body === void 0 ? \"hello hello hello\" : _ref7$body,\n    _ref7$cancel = _ref7.cancel,\n    cancel = _ref7$cancel === void 0 ? \"Cancel\" : _ref7$cancel,\n    _ref7$confirm = _ref7.confirm,\n    confirm = _ref7$confirm === void 0 ? \"Continue\" : _ref7$confirm,\n    _ref7$displayDontShow = _ref7.displayDontShowAgain,\n    displayDontShowAgain = _ref7$displayDontShow === void 0 ? false : _ref7$displayDontShow,\n    onCancel = _ref7.onCancel,\n    onContinue = _ref7.onContinue;\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    dontShowAgain = _React$useState4[0],\n    setDontShowAgain = _React$useState4[1];\n  return /* @__PURE__ */jsxs(Fragment, {\n    children: [/* @__PURE__ */jsxs(Dialog.Header, {\n      children: [/* @__PURE__ */jsx(Dialog.Title, {\n        children: title\n      }), /* @__PURE__ */jsx(Dialog.CloseButton, {})]\n    }), /* @__PURE__ */jsx(Dialog.Body, {\n      style: {\n        maxWidth: 350\n      },\n      children: body\n    }), /* @__PURE__ */jsxs(Dialog.Footer, {\n      className: \"tlui-dialog__footer__actions\",\n      children: [displayDontShowAgain && /* @__PURE__ */jsx(Button, {\n        onClick: function onClick() {\n          return setDontShowAgain(!dontShowAgain);\n        },\n        iconLeft: dontShowAgain ? \"checkbox-checked\" : \"checkbox-empty\",\n        style: {\n          marginRight: \"auto\"\n        },\n        children: \"Don't show again\"\n      }), /* @__PURE__ */jsx(Button, {\n        onClick: onCancel,\n        children: cancel\n      }), /* @__PURE__ */jsx(Button, {\n        type: \"primary\",\n        onClick: function () {\n          var _onClick = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  return _context.abrupt(\"return\", onContinue());\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          function onClick() {\n            return _onClick.apply(this, arguments);\n          }\n          return onClick;\n        }(),\n        children: confirm\n      })]\n    })]\n  });\n}\nexport { DebugPanel };","map":{"version":3,"names":["Fragment","jsx","jsxs","createShapeId","debugFlags","featureFlags","hardResetEditor","uniqueId","useEditor","React","track","useValue","useDialogs","useToasts","useTranslation","Button","Dialog","DropdownMenu","t","createNShapes","editor","n","shapesToCreate","Array","cols","Math","floor","sqrt","i","id","type","x","y","batch","createShapes","setSelectedIds","map","s","DebugPanel","memo","DebugPanel2","_ref","renderDebugMenuItems","msg","className","children","CurrentState","ShapeCount","Root","Trigger","icon","title","Content","side","align","alignOffset","DebugMenuContent","CurrentState2","root","path","value","ShapeCount2","count","renderingShapes","length","DebugMenuContent2","_ref2","_useToasts","addToast","_useDialogs","addDialog","_React$useState","useState","_React$useState2","_slicedToArray","error","setError","Group","Item","onClick","description","component","_ref3","onClose","ExampleDialog","displayDontShowAgain","onCancel","onContinue","countDescendants","_ref4","_i","_arr","_toConsumableArray","el","selectedShapes","shapes","elms","shape","document","getElementById","parentElement","descendants","_iterator","_createForOfIteratorHelper","_step","done","elm","err","e","f","window","alert","concat","Error","Toggle","label","isReadOnly","onChange","r","setReadOnly","DebugFlagToggle","flag","debugSvg","forceSrgb","debugCursors","enabled","MAX_COLUMNS","partials","CURSOR_NAMES","name","props","text","w","h","fill","Object","values","_ref5","CheckboxItem","checked","onSelect","DebugFlagToggle2","_ref6","replace","m","toLowerCase","toUpperCase","newValue","set","_ref7","_ref7$title","_ref7$body","body","_ref7$cancel","cancel","_ref7$confirm","confirm","_ref7$displayDontShow","_React$useState3","_React$useState4","dontShowAgain","setDontShowAgain","Header","Title","CloseButton","Body","style","maxWidth","Footer","iconLeft","marginRight","_onClick","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","abrupt","stop","apply","arguments"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/DebugPanel.tsx"],"sourcesContent":["import {\n\tcreateShapeId,\n\tDebugFlag,\n\tdebugFlags,\n\tEditor,\n\tfeatureFlags,\n\thardResetEditor,\n\tTLShapePartial,\n\tuniqueId,\n\tuseEditor,\n} from '@tldraw/editor'\nimport * as React from 'react'\nimport { track, useValue } from 'signia-react'\nimport { useDialogs } from '../hooks/useDialogsProvider'\nimport { useToasts } from '../hooks/useToastsProvider'\nimport { useTranslation } from '../hooks/useTranslation/useTranslation'\nimport { Button } from './primitives/Button'\nimport * as Dialog from './primitives/Dialog'\nimport * as DropdownMenu from './primitives/DropdownMenu'\n\nlet t = 0\n\nfunction createNShapes(editor: Editor, n: number) {\n\tconst shapesToCreate: TLShapePartial[] = Array(n)\n\tconst cols = Math.floor(Math.sqrt(n))\n\n\tfor (let i = 0; i < n; i++) {\n\t\tt++\n\t\tshapesToCreate[i] = {\n\t\t\tid: createShapeId('box' + t),\n\t\t\ttype: 'geo',\n\t\t\tx: (i % cols) * 132,\n\t\t\ty: Math.floor(i / cols) * 132,\n\t\t}\n\t}\n\n\teditor.batch(() => {\n\t\teditor.createShapes(shapesToCreate).setSelectedIds(shapesToCreate.map((s) => s.id))\n\t})\n}\n\n/** @internal */\nexport const DebugPanel = React.memo(function DebugPanel({\n\trenderDebugMenuItems,\n}: {\n\trenderDebugMenuItems: (() => React.ReactNode) | null\n}) {\n\tconst msg = useTranslation()\n\treturn (\n\t\t<div className=\"tlui-debug-panel\">\n\t\t\t<CurrentState />\n\t\t\t<ShapeCount />\n\t\t\t<DropdownMenu.Root id=\"debug\">\n\t\t\t\t<DropdownMenu.Trigger>\n\t\t\t\t\t<Button icon=\"dots-horizontal\" title={msg('debug-panel.more')} />\n\t\t\t\t</DropdownMenu.Trigger>\n\t\t\t\t<DropdownMenu.Content side=\"top\" align=\"end\" alignOffset={0}>\n\t\t\t\t\t<DebugMenuContent renderDebugMenuItems={renderDebugMenuItems} />\n\t\t\t\t</DropdownMenu.Content>\n\t\t\t</DropdownMenu.Root>\n\t\t</div>\n\t)\n})\n\nconst CurrentState = track(function CurrentState() {\n\tconst editor = useEditor()\n\treturn <div className=\"tlui-debug-panel__current-state\">{editor.root.path.value}</div>\n})\n\nconst ShapeCount = function ShapeCount() {\n\tconst editor = useEditor()\n\tconst count = useValue('rendering shapes count', () => editor.renderingShapes.length, [editor])\n\n\treturn <div>{count} Shapes</div>\n}\n\nconst DebugMenuContent = track(function DebugMenuContent({\n\trenderDebugMenuItems,\n}: {\n\trenderDebugMenuItems: (() => React.ReactNode) | null\n}) {\n\tconst editor = useEditor()\n\tconst { addToast } = useToasts()\n\tconst { addDialog } = useDialogs()\n\n\tconst [error, setError] = React.useState<boolean>(false)\n\n\treturn (\n\t\t<>\n\t\t\t<DropdownMenu.Group>\n\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\taddToast({\n\t\t\t\t\t\t\tid: uniqueId(),\n\t\t\t\t\t\t\ttitle: 'Something happened',\n\t\t\t\t\t\t\tdescription: 'Hey, attend to this thing over here. It might be important!',\n\t\t\t\t\t\t\t// icon?: string\n\t\t\t\t\t\t\t// title?: string\n\t\t\t\t\t\t\t// description?: string\n\t\t\t\t\t\t\t// actions?: TLUiToastAction[]\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<span>Show toast</span>\n\t\t\t\t</DropdownMenu.Item>\n\n\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\taddDialog({\n\t\t\t\t\t\t\tcomponent: ({ onClose }) => (\n\t\t\t\t\t\t\t\t<ExampleDialog\n\t\t\t\t\t\t\t\t\tdisplayDontShowAgain\n\t\t\t\t\t\t\t\t\tonCancel={() => {\n\t\t\t\t\t\t\t\t\t\tonClose()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tonContinue={() => {\n\t\t\t\t\t\t\t\t\t\tonClose()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\t\t\tvoid null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t})\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<span>Show dialog</span>\n\t\t\t\t</DropdownMenu.Item>\n\t\t\t\t<DropdownMenu.Item onClick={() => createNShapes(editor, 100)}>\n\t\t\t\t\t<span>Create 100 shapes</span>\n\t\t\t\t</DropdownMenu.Item>\n\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tfunction countDescendants({ children }: HTMLElement) {\n\t\t\t\t\t\t\tlet count = 0\n\t\t\t\t\t\t\tif (!children.length) return 0\n\t\t\t\t\t\t\tfor (const el of [...(children as any)]) {\n\t\t\t\t\t\t\t\tcount++\n\t\t\t\t\t\t\t\tcount += countDescendants(el)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn count\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst { selectedShapes } = editor\n\n\t\t\t\t\t\tconst shapes = selectedShapes.length === 0 ? editor.renderingShapes : selectedShapes\n\n\t\t\t\t\t\tconst elms = shapes.map(\n\t\t\t\t\t\t\t(shape) => (document.getElementById(shape.id) as HTMLElement)!.parentElement!\n\t\t\t\t\t\t)\n\n\t\t\t\t\t\tlet descendants = elms.length\n\n\t\t\t\t\t\tfor (const elm of elms) {\n\t\t\t\t\t\t\tdescendants += countDescendants(elm)\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\twindow.alert(`Shapes ${shapes.length}, DOM nodes:${descendants}`)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<span>Count shapes and nodes</span>\n\t\t\t\t</DropdownMenu.Item>\n\n\t\t\t\t{(() => {\n\t\t\t\t\tif (error) throw Error('oh no!')\n\t\t\t\t})()}\n\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetError(true)\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<span>Throw error</span>\n\t\t\t\t</DropdownMenu.Item>\n\t\t\t\t<DropdownMenu.Item\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thardResetEditor()\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<span>Hard reset</span>\n\t\t\t\t</DropdownMenu.Item>\n\t\t\t</DropdownMenu.Group>\n\t\t\t<DropdownMenu.Group>\n\t\t\t\t<Toggle\n\t\t\t\t\tlabel=\"Read-only\"\n\t\t\t\t\tvalue={editor.isReadOnly}\n\t\t\t\t\tonChange={(r) => editor.setReadOnly(r)}\n\t\t\t\t/>\n\t\t\t\t<DebugFlagToggle flag={debugFlags.debugSvg} />\n\t\t\t\t<DebugFlagToggle flag={debugFlags.forceSrgb} />\n\t\t\t\t<DebugFlagToggle\n\t\t\t\t\tflag={debugFlags.debugCursors}\n\t\t\t\t\tonChange={(enabled) => {\n\t\t\t\t\t\tif (enabled) {\n\t\t\t\t\t\t\tconst MAX_COLUMNS = 5\n\t\t\t\t\t\t\tconst partials = CURSOR_NAMES.map((name, i) => {\n\t\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\t\tid: createShapeId(),\n\t\t\t\t\t\t\t\t\ttype: 'geo',\n\t\t\t\t\t\t\t\t\tx: (i % MAX_COLUMNS) * 175,\n\t\t\t\t\t\t\t\t\ty: Math.floor(i / MAX_COLUMNS) * 175,\n\t\t\t\t\t\t\t\t\tprops: {\n\t\t\t\t\t\t\t\t\t\ttext: name,\n\t\t\t\t\t\t\t\t\t\tw: 150,\n\t\t\t\t\t\t\t\t\t\th: 150,\n\t\t\t\t\t\t\t\t\t\tfill: 'semi',\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\n\t\t\t\t\t\t\teditor.createShapes(partials)\n\t\t\t\t\t\t}\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</DropdownMenu.Group>\n\t\t\t<DropdownMenu.Group>\n\t\t\t\t{Object.values(featureFlags).map((flag) => {\n\t\t\t\t\treturn <DebugFlagToggle key={flag.name} flag={flag} />\n\t\t\t\t})}\n\t\t\t</DropdownMenu.Group>\n\t\t\t{renderDebugMenuItems?.()}\n\t\t</>\n\t)\n})\n\nfunction Toggle({\n\tlabel,\n\tvalue,\n\tonChange,\n}: {\n\tlabel: string\n\tvalue: boolean\n\tonChange: (newValue: boolean) => void\n}) {\n\treturn (\n\t\t<DropdownMenu.CheckboxItem title={label} checked={value} onSelect={() => onChange(!value)}>\n\t\t\t{label}\n\t\t</DropdownMenu.CheckboxItem>\n\t)\n}\n\nconst DebugFlagToggle = track(function DebugFlagToggle({\n\tflag,\n\tonChange,\n}: {\n\tflag: DebugFlag<boolean>\n\tonChange?: (newValue: boolean) => void\n}) {\n\treturn (\n\t\t<Toggle\n\t\t\tlabel={flag.name\n\t\t\t\t.replace(/([a-z0-9])([A-Z])/g, (m) => `${m[0]} ${m[1].toLowerCase()}`)\n\t\t\t\t.replace(/^[a-z]/, (m) => m.toUpperCase())}\n\t\t\tvalue={flag.value}\n\t\t\tonChange={(newValue) => {\n\t\t\t\tflag.set(newValue)\n\t\t\t\tonChange?.(newValue)\n\t\t\t}}\n\t\t/>\n\t)\n})\n\nconst CURSOR_NAMES = [\n\t'none',\n\t'default',\n\t'pointer',\n\t'cross',\n\t'move',\n\t'grab',\n\t'grabbing',\n\t'text',\n\t'ew-resize',\n\t'ns-resize',\n\t'nesw-resize',\n\t'nwse-resize',\n\t'nwse-rotate',\n\t'nesw-rotate',\n\t'senw-rotate',\n\t'swne-rotate',\n\t'zoom-in',\n\t'zoom-out',\n]\n\nfunction ExampleDialog({\n\ttitle = 'title',\n\tbody = 'hello hello hello',\n\tcancel = 'Cancel',\n\tconfirm = 'Continue',\n\tdisplayDontShowAgain = false,\n\tonCancel,\n\tonContinue,\n}: {\n\ttitle?: string\n\tbody?: string\n\tcancel?: string\n\tconfirm?: string\n\tdisplayDontShowAgain?: boolean\n\tonCancel: () => void\n\tonContinue: () => void\n}) {\n\tconst [dontShowAgain, setDontShowAgain] = React.useState(false)\n\n\treturn (\n\t\t<>\n\t\t\t<Dialog.Header>\n\t\t\t\t<Dialog.Title>{title}</Dialog.Title>\n\t\t\t\t<Dialog.CloseButton />\n\t\t\t</Dialog.Header>\n\t\t\t<Dialog.Body style={{ maxWidth: 350 }}>{body}</Dialog.Body>\n\t\t\t<Dialog.Footer className=\"tlui-dialog__footer__actions\">\n\t\t\t\t{displayDontShowAgain && (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={() => setDontShowAgain(!dontShowAgain)}\n\t\t\t\t\t\ticonLeft={dontShowAgain ? 'checkbox-checked' : 'checkbox-empty'}\n\t\t\t\t\t\tstyle={{ marginRight: 'auto' }}\n\t\t\t\t\t>\n\t\t\t\t\t\t{`Don't show again`}\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t\t<Button onClick={onCancel}>{cancel}</Button>\n\t\t\t\t<Button type=\"primary\" onClick={async () => onContinue()}>\n\t\t\t\t\t{confirm}\n\t\t\t\t</Button>\n\t\t\t</Dialog.Footer>\n\t\t</>\n\t)\n}\n"],"mappings":";;;;;AAkDG,SAsCDA,QAAA,EAtCCC,GAAA,EAEAC,IAAA,QAFA;AAlDH,SACCC,aAAA,EAEAC,UAAA,EAEAC,YAAA,EACAC,eAAA,EAEAC,QAAA,EACAC,SAAA,QACM;AACP,YAAYC,KAAA,MAAW;AACvB,SAASC,KAAA,EAAOC,QAAA,QAAgB;AAChC,SAASC,UAAA,QAAkB;AAC3B,SAASC,SAAA,QAAiB;AAC1B,SAASC,cAAA,QAAsB;AAC/B,SAASC,MAAA,QAAc;AACvB,YAAYC,MAAA,MAAY;AACxB,YAAYC,YAAA,MAAkB;AAE9B,IAAIC,CAAA,GAAI;AAER,SAASC,cAAcC,MAAA,EAAgBC,CAAA,EAAW;EACjD,IAAMC,cAAA,GAAmCC,KAAA,CAAMF,CAAC;EAChD,IAAMG,IAAA,GAAOC,IAAA,CAAKC,KAAA,CAAMD,IAAA,CAAKE,IAAA,CAAKN,CAAC,CAAC;EAEpC,SAASO,CAAA,GAAI,GAAGA,CAAA,GAAIP,CAAA,EAAGO,CAAA,IAAK;IAC3BV,CAAA;IACAI,cAAA,CAAeM,CAAC,IAAI;MACnBC,EAAA,EAAI1B,aAAA,CAAc,QAAQe,CAAC;MAC3BY,IAAA,EAAM;MACNC,CAAA,EAAIH,CAAA,GAAIJ,IAAA,GAAQ;MAChBQ,CAAA,EAAGP,IAAA,CAAKC,KAAA,CAAME,CAAA,GAAIJ,IAAI,IAAI;IAC3B;EACD;EAEAJ,MAAA,CAAOa,KAAA,CAAM,YAAM;IAClBb,MAAA,CAAOc,YAAA,CAAaZ,cAAc,EAAEa,cAAA,CAAeb,cAAA,CAAec,GAAA,CAAI,UAACC,CAAA;MAAA,OAAMA,CAAA,CAAER,EAAE;IAAA,EAAC;EACnF,CAAC;AACF;AAGO,IAAMS,UAAA,GAAa7B,KAAA,CAAM8B,IAAA,CAAK,SAASC,YAAAC,IAAA,EAI3C;EAAA,IAHFC,oBAAA,GAAAD,IAAA,CAAAC,oBAAA;EAIA,IAAMC,GAAA,GAAM7B,cAAA,CAAe;EAC3B,OACC,eAAAZ,IAAA,CAAC;IAAI0C,SAAA,EAAU;IACdC,QAAA,kBAAA5C,GAAA,CAAC6C,YAAA,IAAa,GACd,eAAA7C,GAAA,CAAC8C,UAAA,IAAW,GACZ,eAAA7C,IAAA,CAACe,YAAA,CAAa+B,IAAA,EAAb;MAAkBnB,EAAA,EAAG;MACrBgB,QAAA,kBAAA5C,GAAA,CAACgB,YAAA,CAAagC,OAAA,EAAb;QACAJ,QAAA,iBAAA5C,GAAA,CAACc,MAAA;UAAOmC,IAAA,EAAK;UAAkBC,KAAA,EAAOR,GAAA,CAAI,kBAAkB;QAAA,CAAG;MAAA,CAChE,GACA,eAAA1C,GAAA,CAACgB,YAAA,CAAamC,OAAA,EAAb;QAAqBC,IAAA,EAAK;QAAMC,KAAA,EAAM;QAAMC,WAAA,EAAa;QACzDV,QAAA,iBAAA5C,GAAA,CAACuD,gBAAA;UAAiBd,oBAAA,EAAAA;QAAA,CAA4C;MAAA,CAC/D;IAAA,CACD;EAAA,CACD;AAEF,CAAC;AAED,IAAMI,YAAA,GAAepC,KAAA,CAAM,SAAS+C,cAAA,EAAe;EAClD,IAAMrC,MAAA,GAASZ,SAAA,CAAU;EACzB,OAAO,eAAAP,GAAA,CAAC;IAAI2C,SAAA,EAAU;IAAmCC,QAAA,EAAAzB,MAAA,CAAOsC,IAAA,CAAKC,IAAA,CAAKC;EAAA,CAAM;AACjF,CAAC;AAED,IAAMb,UAAA,GAAa,SAASc,YAAA,EAAa;EACxC,IAAMzC,MAAA,GAASZ,SAAA,CAAU;EACzB,IAAMsD,KAAA,GAAQnD,QAAA,CAAS,0BAA0B;IAAA,OAAMS,MAAA,CAAO2C,eAAA,CAAgBC,MAAA;EAAA,GAAQ,CAAC5C,MAAM,CAAC;EAE9F,OAAO,eAAAlB,IAAA,CAAC;IAAK2C,QAAA,GAAAiB,KAAA,EAAM;EAAA,CAAO;AAC3B;AAEA,IAAMN,gBAAA,GAAmB9C,KAAA,CAAM,SAASuD,kBAAAC,KAAA,EAIrC;EAAA,IAHFxB,oBAAA,GAAAwB,KAAA,CAAAxB,oBAAA;EAIA,IAAMtB,MAAA,GAASZ,SAAA,CAAU;EACzB,IAAA2D,UAAA,GAAqBtD,SAAA,CAAU;IAAvBuD,QAAA,GAAAD,UAAA,CAAAC,QAAA;EACR,IAAAC,WAAA,GAAsBzD,UAAA,CAAW;IAAzB0D,SAAA,GAAAD,WAAA,CAAAC,SAAA;EAER,IAAAC,eAAA,GAA0B9D,KAAA,CAAM+D,QAAA,CAAkB,KAAK;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAhDI,KAAA,GAAAF,gBAAA;IAAOG,QAAQ,GAAAH,gBAAA;EAEtB,OACC,eAAAvE,IAAA,CAAAF,QAAA;IACC6C,QAAA,kBAAA3C,IAAA,CAACe,YAAA,CAAa4D,KAAA,EAAb;MACAhC,QAAA,kBAAA5C,GAAA,CAACgB,YAAA,CAAa6D,IAAA,EAAb;QACAC,OAAA,EAAS,SAAAA,QAAA,EAAM;UACdX,QAAA,CAAS;YACRvC,EAAA,EAAItB,QAAA,CAAS;YACb4C,KAAA,EAAO;YACP6B,WAAA,EAAa;YAAA;YAAA;YAAA;YAAA;UAKd,CAAC;QACF;;QAEAnC,QAAA,iBAAA5C,GAAA,CAAC;UAAK4C,QAAA;QAAA,CAAU;MAAA,CACjB,GAEA,eAAA5C,GAAA,CAACgB,YAAA,CAAa6D,IAAA,EAAb;QACAC,OAAA,EAAS,SAAAA,QAAA,EAAM;UACdT,SAAA,CAAU;YACTW,SAAA,EAAW,SAAAA,UAAAC,KAAA;cAAA,IAAGC,OAAA,GAAAD,KAAA,CAAAC,OAAA;cAAA,OACb,eAAAlF,GAAA,CAACmF,aAAA;gBACAC,oBAAA,EAAoB;gBACpBC,QAAA,EAAU,SAAAA,SAAA,EAAM;kBACfH,OAAA,CAAQ;gBACT;gBACAI,UAAA,EAAY,SAAAA,WAAA,EAAM;kBACjBJ,OAAA,CAAQ;gBACT;cAAA,CACD;YAAA;YAEDA,OAAA,EAAS,SAAAA,QAAA,EAAM,CAEf;UACD,CAAC;QACF;QAEAtC,QAAA,iBAAA5C,GAAA,CAAC;UAAK4C,QAAA;QAAA,CAAW;MAAA,CAClB,GACA,eAAA5C,GAAA,CAACgB,YAAA,CAAa6D,IAAA,EAAb;QAAkBC,OAAA,EAAS,SAAAA,QAAA;UAAA,OAAM5D,aAAA,CAAcC,MAAA,EAAQ,GAAG;QAAA;QAC1DyB,QAAA,iBAAA5C,GAAA,CAAC;UAAK4C,QAAA;QAAA,CAAiB;MAAA,CACxB,GACA,eAAA5C,GAAA,CAACgB,YAAA,CAAa6D,IAAA,EAAb;QACAC,OAAA,EAAS,SAAAA,QAAA,EAAM;UACd,SAASS,iBAAAC,KAAA,EAA4C;YAAA,IAAzB5C,QAAA,GAAA4C,KAAA,CAAA5C,QAAA;YAC3B,IAAIiB,KAAA,GAAQ;YACZ,IAAI,CAACjB,QAAA,CAASmB,MAAA,EAAQ,OAAO;YAC7B,SAAA0B,EAAA,MAAAC,IAAA,GAAAC,kBAAA,CAAsB/C,QAAgB,GAAA6C,EAAA,GAAAC,IAAA,CAAA3B,MAAA,EAAA0B,EAAA,IAAG;cAAzC,IAAWG,EAAA,GAAAF,IAAA,CAAAD,EAAA;cACV5B,KAAA;cACAA,KAAA,IAAS0B,gBAAA,CAAiBK,EAAE;YAC7B;YACA,OAAO/B,KAAA;UACR;UAEA,IAAQgC,cAAA,GAAmB1E,MAAA,CAAnB0E,cAAA;UAER,IAAMC,MAAA,GAASD,cAAA,CAAe9B,MAAA,KAAW,IAAI5C,MAAA,CAAO2C,eAAA,GAAkB+B,cAAA;UAEtE,IAAME,IAAA,GAAOD,MAAA,CAAO3D,GAAA,CACnB,UAAC6D,KAAA;YAAA,OAAWC,QAAA,CAASC,cAAA,CAAeF,KAAA,CAAMpE,EAAE,EAAmBuE,aAAA;UAAA,CAChE;UAEA,IAAIC,WAAA,GAAcL,IAAA,CAAKhC,MAAA;UAAA,IAAAsC,SAAA,GAAAC,0BAAA,CAELP,IAAA;YAAAQ,KAAA;UAAA;YAAlB,KAAAF,SAAA,CAAAjE,CAAA,MAAAmE,KAAA,GAAAF,SAAA,CAAAjF,CAAA,IAAAoF,IAAA,GAAwB;cAAA,IAAbC,GAAA,GAAAF,KAAA,CAAA5C,KAAA;cACVyC,WAAA,IAAeb,gBAAA,CAAiBkB,GAAG;YACpC;UAAA,SAAAC,GAAA;YAAAL,SAAA,CAAAM,CAAA,CAAAD,GAAA;UAAA;YAAAL,SAAA,CAAAO,CAAA;UAAA;UAEAC,MAAA,CAAOC,KAAA,WAAAC,MAAA,CAAgBjB,MAAA,CAAO/B,MAAA,kBAAAgD,MAAA,CAAqBX,WAAA,CAAa;QACjE;QAEAxD,QAAA,iBAAA5C,GAAA,CAAC;UAAK4C,QAAA;QAAA,CAAsB;MAAA,CAC7B,GAEE,YAAM;QACP,IAAI8B,KAAA,EAAO,MAAMsC,KAAA,CAAM,QAAQ;MAChC,EAAG,GACH,eAAAhH,GAAA,CAACgB,YAAA,CAAa6D,IAAA,EAAb;QACAC,OAAA,EAAS,SAAAA,QAAA,EAAM;UACdH,QAAA,CAAS,IAAI;QACd;QAEA/B,QAAA,iBAAA5C,GAAA,CAAC;UAAK4C,QAAA;QAAA,CAAW;MAAA,CAClB,GACA,eAAA5C,GAAA,CAACgB,YAAA,CAAa6D,IAAA,EAAb;QACAC,OAAA,EAAS,SAAAA,QAAA,EAAM;UACdzE,eAAA,CAAgB;QACjB;QAEAuC,QAAA,iBAAA5C,GAAA,CAAC;UAAK4C,QAAA;QAAA,CAAU;MAAA,CACjB;IAAA,CACD,GACA,eAAA3C,IAAA,CAACe,YAAA,CAAa4D,KAAA,EAAb;MACAhC,QAAA,kBAAA5C,GAAA,CAACiH,MAAA;QACAC,KAAA,EAAM;QACNvD,KAAA,EAAOxC,MAAA,CAAOgG,UAAA;QACdC,QAAA,EAAU,SAAAA,SAACC,CAAA;UAAA,OAAMlG,MAAA,CAAOmG,WAAA,CAAYD,CAAC;QAAA;MAAA,CACtC,GACA,eAAArH,GAAA,CAACuH,eAAA;QAAgBC,IAAA,EAAMrH,UAAA,CAAWsH;MAAA,CAAU,GAC5C,eAAAzH,GAAA,CAACuH,eAAA;QAAgBC,IAAA,EAAMrH,UAAA,CAAWuH;MAAA,CAAW,GAC7C,eAAA1H,GAAA,CAACuH,eAAA;QACAC,IAAA,EAAMrH,UAAA,CAAWwH,YAAA;QACjBP,QAAA,EAAU,SAAAA,SAACQ,OAAA,EAAY;UACtB,IAAIA,OAAA,EAAS;YACZ,IAAMC,WAAA,GAAc;YACpB,IAAMC,QAAA,GAAWC,YAAA,CAAa5F,GAAA,CAAI,UAAC6F,IAAA,EAAMrG,CAAA,EAAM;cAC9C,OAAO;gBACNC,EAAA,EAAI1B,aAAA,CAAc;gBAClB2B,IAAA,EAAM;gBACNC,CAAA,EAAIH,CAAA,GAAIkG,WAAA,GAAe;gBACvB9F,CAAA,EAAGP,IAAA,CAAKC,KAAA,CAAME,CAAA,GAAIkG,WAAW,IAAI;gBACjCI,KAAA,EAAO;kBACNC,IAAA,EAAMF,IAAA;kBACNG,CAAA,EAAG;kBACHC,CAAA,EAAG;kBACHC,IAAA,EAAM;gBACP;cACD;YACD,CAAC;YAEDlH,MAAA,CAAOc,YAAA,CAAa6F,QAAQ;UAC7B;QACD;MAAA,CACD;IAAA,CACD,GACA,eAAA9H,GAAA,CAACgB,YAAA,CAAa4D,KAAA,EAAb;MACChC,QAAA,EAAA0F,MAAA,CAAOC,MAAA,CAAOnI,YAAY,EAAE+B,GAAA,CAAI,UAACqF,IAAA,EAAS;QAC1C,OAAO,eAAAxH,GAAA,CAACuH,eAAA;UAAgCC,IAAA,EAAAA;QAAA,GAAXA,IAAA,CAAKQ,IAAkB;MACrD,CAAC;IAAA,CACF,GACCvF,oBAAA,aAAAA,oBAAA,uBAAAA,oBAAA,CAAuB;EAAA,CACzB;AAEF,CAAC;AAED,SAASwE,OAAAuB,KAAA,EAQN;EAAA,IAPFtB,KAAA,GAAAsB,KAAA,CAAAtB,KAAA;IACAvD,KAAA,GAAA6E,KAAA,CAAA7E,KAAA;IACAyD,QAAA,GAAAoB,KAAA,CAAApB,QAAA;EAMA,OACC,eAAApH,GAAA,CAACgB,YAAA,CAAayH,YAAA,EAAb;IAA0BvF,KAAA,EAAOgE,KAAA;IAAOwB,OAAA,EAAS/E,KAAA;IAAOgF,QAAA,EAAU,SAAAA,SAAA;MAAA,OAAMvB,QAAA,CAAS,CAACzD,KAAK;IAAA;IACtFf,QAAA,EAAAsE;EAAA,CACF;AAEF;AAEA,IAAMK,eAAA,GAAkB9G,KAAA,CAAM,SAASmI,iBAAAC,KAAA,EAMpC;EAAA,IALFrB,IAAA,GAAAqB,KAAA,CAAArB,IAAA;IACAJ,SAAA,GAAAyB,KAAA,CAAAzB,QAAA;EAKA,OACE,eAAApH,GAAA,CAAAiH,MAAA,EACA;IAGAC,KAAO,EAAAM,IAAK,CAAAQ,IAAA,CAAAc,OAAA,iCAAAC,CAAA;MAAA,UAAAhC,MAAA,CAAAgC,CAAA,UAAAhC,MAAA,CAAAgC,CAAA,IAAAC,WAAA;IAAA,GAAAF,OAAA,qBAAAC,CAAA;MAAA,OAAAA,CAAA,CAAAE,WAAA;IAAA;IACZtF,KAAA,EAAA6D,IAAW,CAAA7D,KAAA;IACVyD,QAAK,EAAI,SAAAA,SAAA8B,QAAQ;MACjB1B,IAAA,CAAA2B,GAAA,CAAWD,QAAQ;MACpB9B,SAAA,aAAAA,SAAA,eAAAA,SAAA,CAAA8B,QAAA;IAAA;EACD,CAED;AAEoB,EACpB;AAAA,IACAnB,YAAA,IACA,QACA,WACA,WACA,SACA,QACA,QACA,YACA,QACA,aACA,aACA,eACA,eACA,eACA,eACA,eACA,eACD,WAEA,UAAS,CAAc;AACd,SACD5C,cAAAiE,KAAA,EAiBP;EAAA,IAAAC,WAAA,GAAAD,KAAA,CAhBAlG,KAAA;IAAAA,KAAA,GAAAmG,WAAA,qBAAS,GAAAA,WAAA;IAAAC,UAAA,GAAAF,KAAA,CACTG,IAAA;IAAAA,IAAA,GAAAD,UAAA,iCAAU,GAAAA,UAAA;IAAAE,YAAA,GAAAJ,KAAA,CACVK,MAAA;IAAAA,MAAA,GAAAD,YAAA,yBAAAA,YAAA;IAAAE,aAAA,GAAAN,KAAA,CACAO,OAAA;IAAAA,OAAA,GAAAD,aAAA,2BAAAA,aAAA;IAAAE,qBAAA,GAAAR,KAAA,CACAhE,oBAAA;IAAAA,oBAAA,GAAAwE,qBAAA,sBAAAA,qBAAA;IACDvE,QAQG,GAAA+D,KAAA,CARH/D,QAQG;IACFC,UAAO,GAAA8D,KAAA,CAAP9D,UAAO;EAIL,IAAAuE,gBAAA,GACCrJ,KAAA,CAAA+D,QAAA;IAAAuF,gBAAA,GAAArF,cAAA,CAAAoF,gBAAA;IADDE,aAAA,GAAAD,gBAAA;IAAAE,gBAAC,GAAAF,gBAAA;EACA,sBAAA7J,IAAC,CAAAF,QAAO,EAAP;IAAc6C,QAAA,GAAM,eACrB3C,IAAA,CAAAc,MAAC,CAAAkJ,MAAO;MAAArH,QAAY,kBACrB5C,GAAA,CAAAe,MAAA,CAAAmJ,KAAA;QAAAtH,QAAA,EAAAM;MAAA,IACA,eAAAlD,GAAC,CAAAe,MAAO,CAAAoJ,WAAK,EAAO,EAAE;IACtB,IACE,eAAAnK,GAAA,CAAAe,MACA,CAAAqJ,IAAA;MAAAC,KAAA;QAAAC,QAAA;MAAA;MAAA1H,QAAA,EAAA2G;IAAA,mBAACtJ,IAAA,CAAAc,MAAA,CAAAwJ,MAAA;MAAA5H,SAAA;MAAAC,QAAA,GAAAwC,oBAAA,mBAAApF,GAAA,CAAAc,MACA,EAA8C;QAE9CgE,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAAkF,gBAAoB,EAAAD,aAAA;QAAA;QAE5BS,QAAA,EAAAT,aAAA;QAAAM,KAAA;UAAAI,WAAA;QAAA;QACF7H,QAAA;MAED,CACA,GAEA,eACD5C,GAAA,CAAAc,MAAA;QAAAgE,OAAA,EAAAO,QAAA;QAAAzC,QAAA,EAAA6G;MAAA,IACD,eAAAzJ,GAAA,CAAAc,MAAA;QAAAe,IAAA;QAAAiD,OAAA;UAAA,IAAA4F,QAAA,GAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;YAAA,OAAAF,mBAAA,GAAAG,IAAA,UAAAC,SAAAC,QAAA;cAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;gBAAA;kBAAA,OAAAF,QAAA,CAAAG,MAAA,WAAA9F,UAAA;gBAAA;gBAAA;kBAAA,OAAA2F,QAAA,CAAAI,IAAA;cAAA;YAAA,GAAAP,OAAA;UAAA;UAAA,SAAAhG,QAAA;YAAA,OAAA4F,QAAA,CAAAY,KAAA,OAAAC,SAAA;UAAA;UAAA,OAAAzG,OAAA;QAAA;QAAAlC,QAAA,EAAA+G;MAAA;IAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}