{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport { jsx } from \"react/jsx-runtime\";\nimport { ANIMATION_MEDIUM_MS, normalizeWheel, useContainer, useEditor, useQuickReactor } from \"@tldraw/editor\";\nimport { Box2d, Vec2d, intersectPolygonPolygon } from \"@tldraw/primitives\";\nimport * as React from \"react\";\nimport { track } from \"signia-react\";\nimport { MinimapManager } from \"./MinimapManager.mjs\";\nvar Minimap = track(function Minimap2(_ref) {\n  var shapeFill = _ref.shapeFill,\n    selectFill = _ref.selectFill,\n    viewportFill = _ref.viewportFill;\n  var editor = useEditor();\n  var rCanvas = React.useRef(null);\n  var container = useContainer();\n  var rPointing = React.useRef(false);\n  var minimap = React.useMemo(function () {\n    return new MinimapManager(editor, editor.devicePixelRatio);\n  }, [editor]);\n  var isDarkMode = editor.isDarkMode;\n  React.useEffect(function () {\n    var raf = requestAnimationFrame(function () {\n      var style = getComputedStyle(container);\n      minimap.colors = {\n        shapeFill: style.getPropertyValue(shapeFill).trim(),\n        selectFill: style.getPropertyValue(selectFill).trim(),\n        viewportFill: style.getPropertyValue(viewportFill).trim()\n      };\n      minimap.render();\n    });\n    return function () {\n      cancelAnimationFrame(raf);\n    };\n  }, [container, selectFill, shapeFill, viewportFill, minimap, isDarkMode]);\n  var onDoubleClick = React.useCallback(function (e) {\n    if (!editor.currentPageShapeIds.size) return;\n    var _minimap$minimapScree = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, false),\n      x = _minimap$minimapScree.x,\n      y = _minimap$minimapScree.y;\n    var clampedPoint = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, true);\n    minimap.originPagePoint.setTo(clampedPoint);\n    minimap.originPageCenter.setTo(editor.viewportPageBounds.center);\n    editor.centerOnPoint(x, y, {\n      duration: ANIMATION_MEDIUM_MS\n    });\n  }, [editor, minimap]);\n  var onPointerDown = React.useCallback(function (e) {\n    e.currentTarget.setPointerCapture(e.pointerId);\n    if (!editor.currentPageShapeIds.size) return;\n    rPointing.current = true;\n    minimap.isInViewport = false;\n    var _minimap$minimapScree2 = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, false),\n      x = _minimap$minimapScree2.x,\n      y = _minimap$minimapScree2.y;\n    var clampedPoint = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, true);\n    var _vpPageBounds = editor.viewportPageBounds;\n    minimap.originPagePoint.setTo(clampedPoint);\n    minimap.originPageCenter.setTo(_vpPageBounds.center);\n    minimap.isInViewport = _vpPageBounds.containsPoint(clampedPoint);\n    if (!minimap.isInViewport) {\n      editor.centerOnPoint(x, y, {\n        duration: ANIMATION_MEDIUM_MS\n      });\n    }\n  }, [editor, minimap]);\n  var onPointerMove = React.useCallback(function (e) {\n    if (rPointing.current) {\n      var _minimap$minimapScree3 = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, e.shiftKey, true),\n        x = _minimap$minimapScree3.x,\n        y = _minimap$minimapScree3.y;\n      if (minimap.isInViewport) {\n        var delta = Vec2d.Sub({\n          x: x,\n          y: y\n        }, minimap.originPagePoint);\n        var center = Vec2d.Add(minimap.originPageCenter, delta);\n        editor.centerOnPoint(center.x, center.y);\n        return;\n      }\n      editor.centerOnPoint(x, y);\n    }\n    var pagePoint = minimap.getPagePoint(e.clientX, e.clientY);\n    var screenPoint = editor.pageToScreen(pagePoint.x, pagePoint.y);\n    var info = _objectSpread(_objectSpread({\n      type: \"pointer\",\n      target: \"canvas\",\n      name: \"pointer_move\"\n    }, getPointerInfo(e)), {}, {\n      point: screenPoint,\n      isPen: editor.isPenMode\n    });\n    editor.dispatch(info);\n  }, [editor, minimap]);\n  var onPointerUp = React.useCallback(function (_e) {\n    rPointing.current = false;\n  }, []);\n  var onWheel = React.useCallback(function (e) {\n    var offset = normalizeWheel(e);\n    editor.dispatch({\n      type: \"wheel\",\n      name: \"wheel\",\n      delta: offset,\n      shiftKey: e.shiftKey,\n      altKey: e.altKey,\n      ctrlKey: e.metaKey || e.ctrlKey\n    });\n  }, [editor]);\n  useQuickReactor(\"update dpr\", function () {\n    var devicePixelRatio = editor.devicePixelRatio;\n    minimap.setDpr(devicePixelRatio);\n    var canvas = rCanvas.current;\n    var rect = canvas.getBoundingClientRect();\n    var width = rect.width * devicePixelRatio;\n    var height = rect.height * devicePixelRatio;\n    canvas.width = width;\n    canvas.height = height;\n    minimap.canvasScreenBounds.set(rect.x, rect.y, width, height);\n    minimap.cvs = rCanvas.current;\n  }, [editor, minimap]);\n  var presences = React.useMemo(function () {\n    return editor.store.query.records(\"instance_presence\");\n  }, [editor]);\n  useQuickReactor(\"minimap render when pagebounds or collaborators changes\", function () {\n    var devicePixelRatio = editor.devicePixelRatio,\n      viewportPageBounds = editor.viewportPageBounds,\n      allShapesCommonBounds = editor.allShapesCommonBounds;\n    devicePixelRatio;\n    minimap.contentPageBounds = allShapesCommonBounds ? Box2d.Expand(allShapesCommonBounds, viewportPageBounds) : viewportPageBounds;\n    minimap.updateContentScreenBounds();\n    var allShapeBounds = [];\n    editor.currentPageShapeIds.forEach(function (id) {\n      var pageBounds = editor.getPageBoundsById(id);\n      var pageMask = editor.getPageMaskById(id);\n      if (pageMask) {\n        var intersection = intersectPolygonPolygon(pageMask, pageBounds.corners);\n        if (!intersection) {\n          return;\n        }\n        pageBounds = Box2d.FromPoints(intersection);\n      }\n      if (pageBounds) {\n        pageBounds.id = id;\n        allShapeBounds.push(pageBounds);\n      }\n    });\n    minimap.pageBounds = allShapeBounds;\n    minimap.collaborators = presences.value;\n    minimap.render();\n  }, [editor, minimap]);\n  return /* @__PURE__ */jsx(\"div\", {\n    className: \"tlui-minimap\",\n    children: /* @__PURE__ */jsx(\"canvas\", {\n      ref: rCanvas,\n      className: \"tlui-minimap__canvas\",\n      onDoubleClick: onDoubleClick,\n      onPointerMove: onPointerMove,\n      onPointerDown: onPointerDown,\n      onPointerUp: onPointerUp,\n      onWheel: onWheel\n    })\n  });\n});\nfunction getPointerInfo(e) {\n  ;\n  e.isKilled = true;\n  return {\n    point: {\n      x: e.clientX,\n      y: e.clientY,\n      z: e.pressure\n    },\n    shiftKey: e.shiftKey,\n    altKey: e.altKey,\n    ctrlKey: e.metaKey || e.ctrlKey,\n    pointerId: e.pointerId,\n    button: e.button,\n    isPen: e.pointerType === \"pen\"\n  };\n}\nexport { Minimap };","map":{"version":3,"names":["jsx","ANIMATION_MEDIUM_MS","normalizeWheel","useContainer","useEditor","useQuickReactor","Box2d","Vec2d","intersectPolygonPolygon","React","track","MinimapManager","Minimap","Minimap2","_ref","shapeFill","selectFill","viewportFill","editor","rCanvas","useRef","container","rPointing","minimap","useMemo","devicePixelRatio","isDarkMode","useEffect","raf","requestAnimationFrame","style","getComputedStyle","colors","getPropertyValue","trim","render","cancelAnimationFrame","onDoubleClick","useCallback","e","currentPageShapeIds","size","_minimap$minimapScree","minimapScreenPointToPagePoint","clientX","clientY","x","y","clampedPoint","originPagePoint","setTo","originPageCenter","viewportPageBounds","center","centerOnPoint","duration","onPointerDown","currentTarget","setPointerCapture","pointerId","current","isInViewport","_minimap$minimapScree2","_vpPageBounds","containsPoint","onPointerMove","_minimap$minimapScree3","shiftKey","delta","Sub","Add","pagePoint","getPagePoint","screenPoint","pageToScreen","info","_objectSpread","type","target","name","getPointerInfo","point","isPen","isPenMode","dispatch","onPointerUp","_e","onWheel","offset","altKey","ctrlKey","metaKey","setDpr","canvas","rect","getBoundingClientRect","width","height","canvasScreenBounds","set","cvs","presences","store","query","records","allShapesCommonBounds","contentPageBounds","Expand","updateContentScreenBounds","allShapeBounds","forEach","id","pageBounds","getPageBoundsById","pageMask","getPageMaskById","intersection","corners","FromPoints","push","collaborators","value","className","children","ref","isKilled","z","pressure","button","pointerType"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/components/NavigationZone/Minimap.tsx"],"sourcesContent":["import {\n\tANIMATION_MEDIUM_MS,\n\tTLPointerEventInfo,\n\tTLShapeId,\n\tnormalizeWheel,\n\tuseContainer,\n\tuseEditor,\n\tuseQuickReactor,\n} from '@tldraw/editor'\nimport { Box2d, Vec2d, intersectPolygonPolygon } from '@tldraw/primitives'\nimport * as React from 'react'\nimport { track } from 'signia-react'\nimport { MinimapManager } from './MinimapManager'\n\nexport interface MinimapProps {\n\tshapeFill: string\n\tselectFill: string\n\tviewportFill: string\n}\n\nexport const Minimap = track(function Minimap({\n\tshapeFill,\n\tselectFill,\n\tviewportFill,\n}: MinimapProps) {\n\tconst editor = useEditor()\n\n\tconst rCanvas = React.useRef<HTMLCanvasElement>(null!)\n\n\tconst container = useContainer()\n\n\tconst rPointing = React.useRef(false)\n\n\tconst minimap = React.useMemo(() => new MinimapManager(editor, editor.devicePixelRatio), [editor])\n\n\tconst isDarkMode = editor.isDarkMode\n\n\tReact.useEffect(() => {\n\t\t// Must check after render\n\t\tconst raf = requestAnimationFrame(() => {\n\t\t\tconst style = getComputedStyle(container)\n\n\t\t\tminimap.colors = {\n\t\t\t\tshapeFill: style.getPropertyValue(shapeFill).trim(),\n\t\t\t\tselectFill: style.getPropertyValue(selectFill).trim(),\n\t\t\t\tviewportFill: style.getPropertyValue(viewportFill).trim(),\n\t\t\t}\n\n\t\t\tminimap.render()\n\t\t})\n\t\treturn () => {\n\t\t\tcancelAnimationFrame(raf)\n\t\t}\n\t}, [container, selectFill, shapeFill, viewportFill, minimap, isDarkMode])\n\n\tconst onDoubleClick = React.useCallback(\n\t\t(e: React.MouseEvent<HTMLCanvasElement>) => {\n\t\t\tif (!editor.currentPageShapeIds.size) return\n\n\t\t\tconst { x, y } = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, false)\n\n\t\t\tconst clampedPoint = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, true)\n\n\t\t\tminimap.originPagePoint.setTo(clampedPoint)\n\t\t\tminimap.originPageCenter.setTo(editor.viewportPageBounds.center)\n\n\t\t\teditor.centerOnPoint(x, y, { duration: ANIMATION_MEDIUM_MS })\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onPointerDown = React.useCallback(\n\t\t(e: React.PointerEvent<HTMLCanvasElement>) => {\n\t\t\te.currentTarget.setPointerCapture(e.pointerId)\n\t\t\tif (!editor.currentPageShapeIds.size) return\n\n\t\t\trPointing.current = true\n\n\t\t\tminimap.isInViewport = false\n\n\t\t\tconst { x, y } = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, false)\n\n\t\t\tconst clampedPoint = minimap.minimapScreenPointToPagePoint(e.clientX, e.clientY, false, true)\n\n\t\t\tconst _vpPageBounds = editor.viewportPageBounds\n\n\t\t\tminimap.originPagePoint.setTo(clampedPoint)\n\t\t\tminimap.originPageCenter.setTo(_vpPageBounds.center)\n\n\t\t\tminimap.isInViewport = _vpPageBounds.containsPoint(clampedPoint)\n\n\t\t\tif (!minimap.isInViewport) {\n\t\t\t\teditor.centerOnPoint(x, y, { duration: ANIMATION_MEDIUM_MS })\n\t\t\t}\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onPointerMove = React.useCallback(\n\t\t(e: React.PointerEvent<HTMLCanvasElement>) => {\n\t\t\tif (rPointing.current) {\n\t\t\t\tconst { x, y } = minimap.minimapScreenPointToPagePoint(\n\t\t\t\t\te.clientX,\n\t\t\t\t\te.clientY,\n\t\t\t\t\te.shiftKey,\n\t\t\t\t\ttrue\n\t\t\t\t)\n\n\t\t\t\tif (minimap.isInViewport) {\n\t\t\t\t\tconst delta = Vec2d.Sub({ x, y }, minimap.originPagePoint)\n\t\t\t\t\tconst center = Vec2d.Add(minimap.originPageCenter, delta)\n\t\t\t\t\teditor.centerOnPoint(center.x, center.y)\n\t\t\t\t\treturn\n\t\t\t\t}\n\n\t\t\t\teditor.centerOnPoint(x, y)\n\t\t\t}\n\n\t\t\tconst pagePoint = minimap.getPagePoint(e.clientX, e.clientY)\n\n\t\t\tconst screenPoint = editor.pageToScreen(pagePoint.x, pagePoint.y)\n\n\t\t\tconst info: TLPointerEventInfo = {\n\t\t\t\ttype: 'pointer',\n\t\t\t\ttarget: 'canvas',\n\t\t\t\tname: 'pointer_move',\n\t\t\t\t...getPointerInfo(e),\n\t\t\t\tpoint: screenPoint,\n\t\t\t\tisPen: editor.isPenMode,\n\t\t\t}\n\n\t\t\teditor.dispatch(info)\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst onPointerUp = React.useCallback((_e: React.PointerEvent<HTMLCanvasElement>) => {\n\t\trPointing.current = false\n\t}, [])\n\n\tconst onWheel = React.useCallback(\n\t\t(e: React.WheelEvent<HTMLCanvasElement>) => {\n\t\t\tconst offset = normalizeWheel(e)\n\n\t\t\teditor.dispatch({\n\t\t\t\ttype: 'wheel',\n\t\t\t\tname: 'wheel',\n\t\t\t\tdelta: offset,\n\t\t\t\tshiftKey: e.shiftKey,\n\t\t\t\taltKey: e.altKey,\n\t\t\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\t\t})\n\t\t},\n\t\t[editor]\n\t)\n\n\t// Update the minimap's dpr when the dpr changes\n\tuseQuickReactor(\n\t\t'update dpr',\n\t\t() => {\n\t\t\tconst { devicePixelRatio } = editor\n\t\t\tminimap.setDpr(devicePixelRatio)\n\n\t\t\tconst canvas = rCanvas.current as HTMLCanvasElement\n\t\t\tconst rect = canvas.getBoundingClientRect()\n\t\t\tconst width = rect.width * devicePixelRatio\n\t\t\tconst height = rect.height * devicePixelRatio\n\n\t\t\t// These must happen in order\n\t\t\tcanvas.width = width\n\t\t\tcanvas.height = height\n\t\t\tminimap.canvasScreenBounds.set(rect.x, rect.y, width, height)\n\n\t\t\tminimap.cvs = rCanvas.current\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\tconst presences = React.useMemo(() => {\n\t\treturn editor.store.query.records('instance_presence')\n\t}, [editor])\n\n\tuseQuickReactor(\n\t\t'minimap render when pagebounds or collaborators changes',\n\t\t() => {\n\t\t\tconst { devicePixelRatio, viewportPageBounds, allShapesCommonBounds } = editor\n\n\t\t\tdevicePixelRatio // dereference dpr so that it renders then, too\n\n\t\t\tminimap.contentPageBounds = allShapesCommonBounds\n\t\t\t\t? Box2d.Expand(allShapesCommonBounds, viewportPageBounds)\n\t\t\t\t: viewportPageBounds\n\n\t\t\tminimap.updateContentScreenBounds()\n\n\t\t\t// All shape bounds\n\n\t\t\tconst allShapeBounds = [] as (Box2d & { id: TLShapeId })[]\n\n\t\t\teditor.currentPageShapeIds.forEach((id) => {\n\t\t\t\tlet pageBounds = editor.getPageBoundsById(id)! as Box2d & { id: TLShapeId }\n\n\t\t\t\tconst pageMask = editor.getPageMaskById(id)\n\n\t\t\t\tif (pageMask) {\n\t\t\t\t\tconst intersection = intersectPolygonPolygon(pageMask, pageBounds.corners)\n\t\t\t\t\tif (!intersection) {\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\t\t\t\tpageBounds = Box2d.FromPoints(intersection) as Box2d & { id: TLShapeId }\n\t\t\t\t}\n\n\t\t\t\tif (pageBounds) {\n\t\t\t\t\tpageBounds.id = id // kinda dirty but we want to include the id here\n\t\t\t\t\tallShapeBounds.push(pageBounds)\n\t\t\t\t}\n\t\t\t})\n\n\t\t\tminimap.pageBounds = allShapeBounds\n\n\t\t\t// Collaborators\n\n\t\t\tminimap.collaborators = presences.value\n\n\t\t\tminimap.render()\n\t\t},\n\t\t[editor, minimap]\n\t)\n\n\treturn (\n\t\t<div className=\"tlui-minimap\">\n\t\t\t<canvas\n\t\t\t\tref={rCanvas}\n\t\t\t\tclassName=\"tlui-minimap__canvas\"\n\t\t\t\tonDoubleClick={onDoubleClick}\n\t\t\t\tonPointerMove={onPointerMove}\n\t\t\t\tonPointerDown={onPointerDown}\n\t\t\t\tonPointerUp={onPointerUp}\n\t\t\t\tonWheel={onWheel}\n\t\t\t/>\n\t\t</div>\n\t)\n})\n\nfunction getPointerInfo(e: React.PointerEvent | PointerEvent) {\n\t;(e as any).isKilled = true\n\n\treturn {\n\t\tpoint: {\n\t\t\tx: e.clientX,\n\t\t\ty: e.clientY,\n\t\t\tz: e.pressure,\n\t\t},\n\t\tshiftKey: e.shiftKey,\n\t\taltKey: e.altKey,\n\t\tctrlKey: e.metaKey || e.ctrlKey,\n\t\tpointerId: e.pointerId,\n\t\tbutton: e.button,\n\t\tisPen: e.pointerType === 'pen',\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}