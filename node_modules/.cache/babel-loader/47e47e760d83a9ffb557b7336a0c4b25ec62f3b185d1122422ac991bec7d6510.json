{"ast":null,"code":"import _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport { createShapeId } from \"@tldraw/tlschema\";\nimport { StateNode } from \"../../../tools/StateNode.mjs\";\nvar Pointing = /*#__PURE__*/function (_StateNode) {\n  _inherits(Pointing, _StateNode);\n  var _super = _createSuper(Pointing);\n  function Pointing() {\n    var _this;\n    _classCallCheck(this, Pointing);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty(_assertThisInitialized(_this), \"shape\", void 0);\n    _defineProperty(_assertThisInitialized(_this), \"onExit\", function () {\n      _this.editor.setHintingIds([]);\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerMove\", function (info) {\n      if (_this.editor.inputs.isDragging) {\n        var originPagePoint = _this.editor.inputs.originPagePoint;\n        var id = createShapeId();\n        _this.editor.mark(\"creating\");\n        _this.editor.createShapes([{\n          id: id,\n          type: \"text\",\n          x: originPagePoint.x,\n          y: originPagePoint.y,\n          props: {\n            text: \"\",\n            autoSize: false,\n            w: 20\n          }\n        }]);\n        _this.editor.select(id);\n        _this.shape = _this.editor.getShapeById(id);\n        if (!_this.shape) return;\n        _this.editor.setSelectedTool(\"select.resizing\", _objectSpread(_objectSpread({}, info), {}, {\n          target: \"selection\",\n          handle: \"right\",\n          isCreating: true,\n          creationCursorOffset: {\n            x: 1,\n            y: 1\n          },\n          editAfterComplete: true,\n          onInteractionEnd: \"text\"\n        }));\n      }\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onPointerUp\", function () {\n      _this.complete();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onComplete\", function () {\n      _this.cancel();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onCancel\", function () {\n      _this.cancel();\n    });\n    _defineProperty(_assertThisInitialized(_this), \"onInterrupt\", function () {\n      _this.cancel();\n    });\n    return _this;\n  }\n  _createClass(Pointing, [{\n    key: \"complete\",\n    value: function complete() {\n      var _this$editor$root$cur;\n      this.editor.mark(\"creating text shape\");\n      var id = createShapeId();\n      var _this$editor$inputs$c = this.editor.inputs.currentPagePoint,\n        x = _this$editor$inputs$c.x,\n        y = _this$editor$inputs$c.y;\n      this.editor.createShapes([{\n        id: id,\n        type: \"text\",\n        x: x,\n        y: y,\n        props: {\n          text: \"\",\n          autoSize: true\n        }\n      }], true);\n      this.editor.setEditingId(id);\n      this.editor.setSelectedTool(\"select\");\n      (_this$editor$root$cur = this.editor.root.current.value) === null || _this$editor$root$cur === void 0 || _this$editor$root$cur.transition(\"editing_shape\", {});\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      this.parent.transition(\"idle\", {});\n      this.editor.bailToMark(\"creating\");\n    }\n  }]);\n  return Pointing;\n}(StateNode);\n_defineProperty(Pointing, \"id\", \"pointing\");\nexport { Pointing };","map":{"version":3,"names":["createShapeId","StateNode","Pointing","_StateNode","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","_defineProperty","_assertThisInitialized","editor","setHintingIds","info","inputs","isDragging","originPagePoint","id","mark","createShapes","type","x","y","props","text","autoSize","w","select","shape","getShapeById","setSelectedTool","_objectSpread","target","handle","isCreating","creationCursorOffset","editAfterComplete","onInteractionEnd","complete","cancel","_createClass","key","value","_this$editor$root$cur","_this$editor$inputs$c","currentPagePoint","setEditingId","root","current","transition","parent","bailToMark"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/editor/src/lib/editor/shapes/text/toolStates/Pointing.ts"],"sourcesContent":["import { createShapeId, TLTextShape } from '@tldraw/tlschema'\nimport { StateNode } from '../../../tools/StateNode'\nimport { TLEventHandlers } from '../../../types/event-types'\n\nexport class Pointing extends StateNode {\n\tstatic override id = 'pointing'\n\n\tshape?: TLTextShape\n\n\tonExit = () => {\n\t\tthis.editor.setHintingIds([])\n\t}\n\n\tonPointerMove: TLEventHandlers['onPointerMove'] = (info) => {\n\t\tif (this.editor.inputs.isDragging) {\n\t\t\tconst {\n\t\t\t\tinputs: { originPagePoint },\n\t\t\t} = this.editor\n\n\t\t\tconst id = createShapeId()\n\n\t\t\tthis.editor.mark('creating')\n\n\t\t\tthis.editor.createShapes<TLTextShape>([\n\t\t\t\t{\n\t\t\t\t\tid,\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tx: originPagePoint.x,\n\t\t\t\t\ty: originPagePoint.y,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\tautoSize: false,\n\t\t\t\t\t\tw: 20,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t])\n\n\t\t\tthis.editor.select(id)\n\n\t\t\tthis.shape = this.editor.getShapeById(id)\n\t\t\tif (!this.shape) return\n\n\t\t\tthis.editor.setSelectedTool('select.resizing', {\n\t\t\t\t...info,\n\t\t\t\ttarget: 'selection',\n\t\t\t\thandle: 'right',\n\t\t\t\tisCreating: true,\n\t\t\t\tcreationCursorOffset: { x: 1, y: 1 },\n\t\t\t\teditAfterComplete: true,\n\t\t\t\tonInteractionEnd: 'text',\n\t\t\t})\n\t\t}\n\t}\n\n\tonPointerUp = () => {\n\t\tthis.complete()\n\t}\n\n\tonComplete = () => {\n\t\tthis.cancel()\n\t}\n\tonCancel = () => {\n\t\tthis.cancel()\n\t}\n\n\tonInterrupt = () => {\n\t\tthis.cancel()\n\t}\n\n\tcomplete() {\n\t\tthis.editor.mark('creating text shape')\n\t\tconst id = createShapeId()\n\t\tconst { x, y } = this.editor.inputs.currentPagePoint\n\t\tthis.editor.createShapes(\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\tid,\n\t\t\t\t\ttype: 'text',\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\ttext: '',\n\t\t\t\t\t\tautoSize: true,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t],\n\t\t\ttrue\n\t\t)\n\n\t\tthis.editor.setEditingId(id)\n\t\tthis.editor.setSelectedTool('select')\n\t\tthis.editor.root.current.value?.transition('editing_shape', {})\n\t}\n\n\tcancel() {\n\t\tthis.parent.transition('idle', {})\n\t\tthis.editor.bailToMark('creating')\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}