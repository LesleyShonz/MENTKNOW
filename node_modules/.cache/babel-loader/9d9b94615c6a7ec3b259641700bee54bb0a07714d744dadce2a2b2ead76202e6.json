{"ast":null,"code":"import _defineProperty from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { jsx } from \"react/jsx-runtime\";\nimport { GeoShapeGeoStyle, featureFlags, useEditor } from \"@tldraw/editor\";\nimport * as React from \"react\";\nimport { useValue } from \"signia-react\";\nimport { EmbedDialog } from \"../components/EmbedDialog.mjs\";\nimport { useDialogs } from \"./useDialogsProvider.mjs\";\nimport { useEvents } from \"./useEventsProvider.mjs\";\nimport { useInsertMedia } from \"./useInsertMedia.mjs\";\nvar ToolsContext = React.createContext({});\nfunction ToolsProvider(_ref) {\n  var overrides = _ref.overrides,\n    children = _ref.children;\n  var editor = useEditor();\n  var trackEvent = useEvents();\n  var _useDialogs = useDialogs(),\n    addDialog = _useDialogs.addDialog;\n  var insertMedia = useInsertMedia();\n  var highlighterEnabled = useValue(featureFlags.highlighterTool);\n  var tools = React.useMemo(function () {\n    var toolsArray = [{\n      id: \"select\",\n      label: \"tool.select\",\n      icon: \"tool-pointer\",\n      kbd: \"v\",\n      readonlyOk: true,\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"select\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"select\"\n        });\n      }\n    }, {\n      id: \"hand\",\n      label: \"tool.hand\",\n      icon: \"tool-hand\",\n      kbd: \"h\",\n      readonlyOk: true,\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"hand\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"hand\"\n        });\n      }\n    }, {\n      id: \"eraser\",\n      label: \"tool.eraser\",\n      icon: \"tool-eraser\",\n      kbd: \"e\",\n      readonlyOk: false,\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"eraser\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"eraser\"\n        });\n      }\n    }, {\n      id: \"draw\",\n      label: \"tool.draw\",\n      readonlyOk: false,\n      icon: \"tool-pencil\",\n      kbd: \"d,b,x\",\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"draw\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"draw\"\n        });\n      }\n    }].concat(_toConsumableArray(_toConsumableArray(GeoShapeGeoStyle.values).map(function (id) {\n      return {\n        id: id,\n        label: \"tool.\".concat(id),\n        readonlyOk: false,\n        meta: {\n          geo: id\n        },\n        kbd: id === \"rectangle\" ? \"r\" : id === \"ellipse\" ? \"o\" : void 0,\n        icon: \"geo-\" + id,\n        onSelect: function onSelect(source) {\n          editor.batch(function () {\n            editor.updateInstanceState({\n              stylesForNextShape: _objectSpread(_objectSpread({}, editor.instanceState.stylesForNextShape), {}, _defineProperty({}, GeoShapeGeoStyle.id, id))\n            }, true);\n            editor.setSelectedTool(\"geo\");\n            trackEvent(\"select-tool\", {\n              source: source,\n              id: \"geo-\".concat(id)\n            });\n          });\n        }\n      };\n    })), [{\n      id: \"arrow\",\n      label: \"tool.arrow\",\n      readonlyOk: false,\n      icon: \"tool-arrow\",\n      kbd: \"a\",\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"arrow\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"arrow\"\n        });\n      }\n    }, {\n      id: \"line\",\n      label: \"tool.line\",\n      readonlyOk: false,\n      icon: \"tool-line\",\n      kbd: \"l\",\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"line\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"line\"\n        });\n      }\n    }, {\n      id: \"frame\",\n      label: \"tool.frame\",\n      readonlyOk: false,\n      icon: \"tool-frame\",\n      kbd: \"f\",\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"frame\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"frame\"\n        });\n      }\n    }, {\n      id: \"text\",\n      label: \"tool.text\",\n      readonlyOk: false,\n      icon: \"tool-text\",\n      kbd: \"t\",\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"text\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"text\"\n        });\n      }\n    }, {\n      id: \"asset\",\n      label: \"tool.asset\",\n      readonlyOk: false,\n      icon: \"tool-media\",\n      kbd: \"$u\",\n      onSelect: function onSelect(source) {\n        insertMedia();\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"media\"\n        });\n      }\n    }, {\n      id: \"note\",\n      label: \"tool.note\",\n      readonlyOk: false,\n      icon: \"tool-note\",\n      kbd: \"n\",\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"note\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"note\"\n        });\n      }\n    }, {\n      id: \"laser\",\n      label: \"tool.laser\",\n      readonlyOk: true,\n      icon: \"tool-laser\",\n      kbd: \"k\",\n      onSelect: function onSelect(source) {\n        editor.setSelectedTool(\"laser\");\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"laser\"\n        });\n      }\n    }, {\n      id: \"embed\",\n      label: \"tool.embed\",\n      readonlyOk: false,\n      icon: \"tool-embed\",\n      onSelect: function onSelect(source) {\n        addDialog({\n          component: EmbedDialog\n        });\n        trackEvent(\"select-tool\", {\n          source: source,\n          id: \"embed\"\n        });\n      }\n    }]);\n    if (highlighterEnabled) {\n      toolsArray.push({\n        id: \"highlight\",\n        label: \"tool.highlight\",\n        readonlyOk: true,\n        icon: \"tool-highlight\",\n        // TODO: pick a better shortcut\n        kbd: \"!d\",\n        onSelect: function onSelect(source) {\n          editor.setSelectedTool(\"highlight\");\n          trackEvent(\"select-tool\", {\n            source: source,\n            id: \"highlight\"\n          });\n        }\n      });\n    }\n    var tools2 = Object.fromEntries(toolsArray.map(function (t) {\n      return [t.id, t];\n    }));\n    if (overrides) {\n      return overrides(editor, tools2, {\n        insertMedia: insertMedia\n      });\n    }\n    return tools2;\n  }, [highlighterEnabled, overrides, editor, trackEvent, insertMedia, addDialog]);\n  return /* @__PURE__ */jsx(ToolsContext.Provider, {\n    value: tools,\n    children: children\n  });\n}\nfunction useTools() {\n  var ctx = React.useContext(ToolsContext);\n  if (!ctx) {\n    throw new Error(\"useTools must be used within a ToolProvider\");\n  }\n  return ctx;\n}\nexport { ToolsContext, ToolsProvider, useTools };","map":{"version":3,"names":["jsx","GeoShapeGeoStyle","featureFlags","useEditor","React","useValue","EmbedDialog","useDialogs","useEvents","useInsertMedia","ToolsContext","createContext","ToolsProvider","_ref","overrides","children","editor","trackEvent","_useDialogs","addDialog","insertMedia","highlighterEnabled","highlighterTool","tools","useMemo","toolsArray","id","label","icon","kbd","readonlyOk","onSelect","source","setSelectedTool","concat","_toConsumableArray","values","map","meta","geo","batch","updateInstanceState","stylesForNextShape","_objectSpread","instanceState","_defineProperty","component","push","tools2","Object","fromEntries","t","Provider","value","useTools","ctx","useContext","Error"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/ui/src/lib/hooks/useTools.tsx"],"sourcesContent":["import { Editor, GeoShapeGeoStyle, featureFlags, useEditor } from '@tldraw/editor'\nimport * as React from 'react'\nimport { useValue } from 'signia-react'\nimport { EmbedDialog } from '../components/EmbedDialog'\nimport { TLUiIconType } from '../icon-types'\nimport { useDialogs } from './useDialogsProvider'\nimport { TLUiEventSource, useEvents } from './useEventsProvider'\nimport { useInsertMedia } from './useInsertMedia'\nimport { TLUiTranslationKey } from './useTranslation/TLUiTranslationKey'\n\n/** @public */\nexport interface TLUiToolItem {\n\tid: string\n\tlabel: TLUiTranslationKey\n\tshortcutsLabel?: TLUiTranslationKey\n\ticon: TLUiIconType\n\tonSelect: (source: TLUiEventSource) => void\n\tkbd?: string\n\treadonlyOk: boolean\n\tmeta?: {\n\t\t[key: string]: any\n\t}\n}\n\n/** @public */\nexport type TLUiToolsContextType = Record<string, TLUiToolItem>\n\n/** @internal */\nexport const ToolsContext = React.createContext({} as TLUiToolsContextType)\n\n/** @public */\nexport type TLUiToolsProviderProps = {\n\toverrides?: (\n\t\teditor: Editor,\n\t\ttools: TLUiToolsContextType,\n\t\thelpers: { insertMedia: () => void }\n\t) => TLUiToolsContextType\n\tchildren: any\n}\n\n/** @internal */\nexport function ToolsProvider({ overrides, children }: TLUiToolsProviderProps) {\n\tconst editor = useEditor()\n\tconst trackEvent = useEvents()\n\n\tconst { addDialog } = useDialogs()\n\tconst insertMedia = useInsertMedia()\n\n\tconst highlighterEnabled = useValue(featureFlags.highlighterTool)\n\n\tconst tools = React.useMemo<TLUiToolsContextType>(() => {\n\t\tconst toolsArray: TLUiToolItem[] = [\n\t\t\t{\n\t\t\t\tid: 'select',\n\t\t\t\tlabel: 'tool.select',\n\t\t\t\ticon: 'tool-pointer',\n\t\t\t\tkbd: 'v',\n\t\t\t\treadonlyOk: true,\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('select')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'select' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'hand',\n\t\t\t\tlabel: 'tool.hand',\n\t\t\t\ticon: 'tool-hand',\n\t\t\t\tkbd: 'h',\n\t\t\t\treadonlyOk: true,\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('hand')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'hand' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'eraser',\n\t\t\t\tlabel: 'tool.eraser',\n\t\t\t\ticon: 'tool-eraser',\n\t\t\t\tkbd: 'e',\n\t\t\t\treadonlyOk: false,\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('eraser')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'eraser' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'draw',\n\t\t\t\tlabel: 'tool.draw',\n\t\t\t\treadonlyOk: false,\n\t\t\t\ticon: 'tool-pencil',\n\t\t\t\tkbd: 'd,b,x',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('draw')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'draw' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t...[...GeoShapeGeoStyle.values].map((id) => ({\n\t\t\t\tid,\n\t\t\t\tlabel: `tool.${id}` as TLUiTranslationKey,\n\t\t\t\treadonlyOk: false,\n\t\t\t\tmeta: {\n\t\t\t\t\tgeo: id,\n\t\t\t\t},\n\t\t\t\tkbd: id === 'rectangle' ? 'r' : id === 'ellipse' ? 'o' : undefined,\n\t\t\t\ticon: ('geo-' + id) as TLUiIconType,\n\t\t\t\tonSelect(source: TLUiEventSource) {\n\t\t\t\t\teditor.batch(() => {\n\t\t\t\t\t\teditor.updateInstanceState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstylesForNextShape: {\n\t\t\t\t\t\t\t\t\t...editor.instanceState.stylesForNextShape,\n\t\t\t\t\t\t\t\t\t[GeoShapeGeoStyle.id]: id,\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t)\n\t\t\t\t\t\teditor.setSelectedTool('geo')\n\t\t\t\t\t\ttrackEvent('select-tool', { source, id: `geo-${id}` })\n\t\t\t\t\t})\n\t\t\t\t},\n\t\t\t})),\n\t\t\t{\n\t\t\t\tid: 'arrow',\n\t\t\t\tlabel: 'tool.arrow',\n\t\t\t\treadonlyOk: false,\n\t\t\t\ticon: 'tool-arrow',\n\t\t\t\tkbd: 'a',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('arrow')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'arrow' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'line',\n\t\t\t\tlabel: 'tool.line',\n\t\t\t\treadonlyOk: false,\n\t\t\t\ticon: 'tool-line',\n\t\t\t\tkbd: 'l',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('line')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'line' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'frame',\n\t\t\t\tlabel: 'tool.frame',\n\t\t\t\treadonlyOk: false,\n\t\t\t\ticon: 'tool-frame',\n\t\t\t\tkbd: 'f',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('frame')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'frame' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'text',\n\t\t\t\tlabel: 'tool.text',\n\t\t\t\treadonlyOk: false,\n\t\t\t\ticon: 'tool-text',\n\t\t\t\tkbd: 't',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('text')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'text' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'asset',\n\t\t\t\tlabel: 'tool.asset',\n\t\t\t\treadonlyOk: false,\n\t\t\t\ticon: 'tool-media',\n\t\t\t\tkbd: '$u',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\tinsertMedia()\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'media' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'note',\n\t\t\t\tlabel: 'tool.note',\n\t\t\t\treadonlyOk: false,\n\t\t\t\ticon: 'tool-note',\n\t\t\t\tkbd: 'n',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('note')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'note' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'laser',\n\t\t\t\tlabel: 'tool.laser',\n\t\t\t\treadonlyOk: true,\n\t\t\t\ticon: 'tool-laser',\n\t\t\t\tkbd: 'k',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('laser')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'laser' })\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 'embed',\n\t\t\t\tlabel: 'tool.embed',\n\t\t\t\treadonlyOk: false,\n\t\t\t\ticon: 'tool-embed',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\taddDialog({ component: EmbedDialog })\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'embed' })\n\t\t\t\t},\n\t\t\t},\n\t\t]\n\n\t\tif (highlighterEnabled) {\n\t\t\ttoolsArray.push({\n\t\t\t\tid: 'highlight',\n\t\t\t\tlabel: 'tool.highlight',\n\t\t\t\treadonlyOk: true,\n\t\t\t\ticon: 'tool-highlight',\n\t\t\t\t// TODO: pick a better shortcut\n\t\t\t\tkbd: '!d',\n\t\t\t\tonSelect(source) {\n\t\t\t\t\teditor.setSelectedTool('highlight')\n\t\t\t\t\ttrackEvent('select-tool', { source, id: 'highlight' })\n\t\t\t\t},\n\t\t\t})\n\t\t}\n\n\t\tconst tools = Object.fromEntries(toolsArray.map((t) => [t.id, t]))\n\n\t\tif (overrides) {\n\t\t\treturn overrides(editor, tools, { insertMedia })\n\t\t}\n\n\t\treturn tools\n\t}, [highlighterEnabled, overrides, editor, trackEvent, insertMedia, addDialog])\n\n\treturn <ToolsContext.Provider value={tools}>{children}</ToolsContext.Provider>\n}\n\n/** @public */\nexport function useTools() {\n\tconst ctx = React.useContext(ToolsContext)\n\n\tif (!ctx) {\n\t\tthrow new Error('useTools must be used within a ToolProvider')\n\t}\n\n\treturn ctx\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}