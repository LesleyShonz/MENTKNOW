{"ast":null,"code":"import _regeneratorRuntime from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _toConsumableArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _toArray from \"/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@babel/runtime/helpers/esm/toArray.js\";\nvar DIGITS = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\";\nvar INTEGER_ZERO = \"a0\";\nvar SMALLEST_INTEGER = \"A00000000000000000000000000\";\nfunction getIntegerLength(head) {\n  if (head >= \"a\" && head <= \"z\") {\n    return head.charCodeAt(0) - \"a\".charCodeAt(0) + 2;\n  } else if (head >= \"A\" && head <= \"Z\") {\n    return \"Z\".charCodeAt(0) - head.charCodeAt(0) + 2;\n  } else {\n    throw new Error(\"Invalid index key head: \" + head);\n  }\n}\nfunction validateInteger(int) {\n  if (int.length !== getIntegerLength(int.charAt(0))) {\n    throw new Error(\"invalid integer part of index key: \" + int);\n  }\n}\nfunction isNotUndefined(n) {\n  if (n === void 0) throw Error(\"n is undefined\");\n}\nfunction incrementInteger(x) {\n  validateInteger(x);\n  var _x$split = x.split(\"\"),\n    _x$split2 = _toArray(_x$split),\n    head = _x$split2[0],\n    digs = _x$split2.slice(1);\n  var carry = true;\n  for (var i = digs.length - 1; carry && i >= 0; i--) {\n    var d = DIGITS.indexOf(digs[i]) + 1;\n    if (d === DIGITS.length) {\n      digs[i] = \"0\";\n    } else {\n      digs[i] = DIGITS.charAt(d);\n      carry = false;\n    }\n  }\n  if (carry) {\n    if (head === \"Z\") return \"a0\";\n    if (head === \"z\") return void 0;\n    var h = String.fromCharCode(head.charCodeAt(0) + 1);\n    if (h > \"a\") {\n      digs.push(\"0\");\n    } else {\n      digs.pop();\n    }\n    return h + digs.join(\"\");\n  } else {\n    return head + digs.join(\"\");\n  }\n}\nfunction decrementInteger(x) {\n  validateInteger(x);\n  var _x$split3 = x.split(\"\"),\n    _x$split4 = _toArray(_x$split3),\n    head = _x$split4[0],\n    digs = _x$split4.slice(1);\n  var borrow = true;\n  for (var i = digs.length - 1; borrow && i >= 0; i--) {\n    var d = DIGITS.indexOf(digs[i]) - 1;\n    if (d === -1) {\n      digs[i] = DIGITS.slice(-1);\n    } else {\n      digs[i] = DIGITS.charAt(d);\n      borrow = false;\n    }\n  }\n  if (borrow) {\n    if (head === \"a\") return \"Z\" + DIGITS.slice(-1);\n    if (head === \"A\") return void 0;\n    var h = String.fromCharCode(head.charCodeAt(0) - 1);\n    if (h < \"Z\") {\n      digs.push(DIGITS.slice(-1));\n    } else {\n      digs.pop();\n    }\n    return h + digs.join(\"\");\n  } else {\n    return head + digs.join(\"\");\n  }\n}\nfunction midpoint(a, b) {\n  if (b !== void 0 && a >= b) {\n    throw new Error(a + \" >= \" + b);\n  }\n  if (a.slice(-1) === \"0\" || b && b.slice(-1) === \"0\") {\n    throw new Error(\"trailing zero\");\n  }\n  if (b) {\n    var n = 0;\n    while ((a.charAt(n) || \"0\") === b.charAt(n)) {\n      n++;\n    }\n    if (n > 0) {\n      return b.slice(0, n) + midpoint(a.slice(n), b.slice(n));\n    }\n  }\n  var digitA = a ? DIGITS.indexOf(a.charAt(0)) : 0;\n  var digitB = b !== void 0 ? DIGITS.indexOf(b.charAt(0)) : DIGITS.length;\n  if (digitB - digitA > 1) {\n    var midDigit = Math.round(0.5 * (digitA + digitB));\n    return DIGITS.charAt(midDigit);\n  } else {\n    if (b && b.length > 1) {\n      return b.slice(0, 1);\n    } else {\n      return DIGITS.charAt(digitA) + midpoint(a.slice(1), void 0);\n    }\n  }\n}\nfunction getIntegerPart(index) {\n  var integerPartLength = getIntegerLength(index.charAt(0));\n  if (integerPartLength > index.length) {\n    throw new Error(\"invalid index: \" + index);\n  }\n  return index.slice(0, integerPartLength);\n}\nfunction validateOrder(index) {\n  if (index === SMALLEST_INTEGER) {\n    throw new Error(\"invalid index: \" + index);\n  }\n  var i = getIntegerPart(index);\n  var f = index.slice(i.length);\n  if (f.slice(-1) === \"0\") {\n    throw new Error(\"invalid index: \" + index);\n  }\n}\nfunction generateKeyBetween(a, b) {\n  if (a !== void 0) validateOrder(a);\n  if (b !== void 0) validateOrder(b);\n  if (a !== void 0 && b !== void 0 && a >= b) {\n    throw new Error(a + \" >= \" + b);\n  }\n  if (a === void 0 && b === void 0) {\n    return INTEGER_ZERO;\n  }\n  if (a === void 0) {\n    if (b === void 0) throw Error(\"b is undefined\");\n    var ib2 = getIntegerPart(b);\n    var fb2 = b.slice(ib2.length);\n    if (ib2 === SMALLEST_INTEGER) {\n      return ib2 + midpoint(\"\", fb2);\n    }\n    if (ib2 < b) {\n      return ib2;\n    }\n    var ibl = decrementInteger(ib2);\n    isNotUndefined(ibl);\n    return ibl;\n  }\n  if (b === void 0) {\n    var ia2 = getIntegerPart(a);\n    var fa2 = a.slice(ia2.length);\n    var i2 = incrementInteger(ia2);\n    return i2 === void 0 ? ia2 + midpoint(fa2, void 0) : i2;\n  }\n  var ia = getIntegerPart(a);\n  var fa = a.slice(ia.length);\n  var ib = getIntegerPart(b);\n  var fb = b.slice(ib.length);\n  if (ia === ib) {\n    return ia + midpoint(fa, fb);\n  }\n  var i = incrementInteger(ia);\n  isNotUndefined(i);\n  return i < b ? i : ia + midpoint(fa, void 0);\n}\nfunction generateNKeysBetween(a, b, n) {\n  if (n === 0) return [];\n  if (n === 1) return [generateKeyBetween(a, b)];\n  if (b === void 0) {\n    var c2 = generateKeyBetween(a, b);\n    var result = [c2];\n    for (var i = 0; i < n - 1; i++) {\n      c2 = generateKeyBetween(c2, b);\n      result.push(c2);\n    }\n    return result;\n  }\n  if (a === void 0) {\n    var _c = generateKeyBetween(a, b);\n    var _result = [_c];\n    for (var _i = 0; _i < n - 1; _i++) {\n      _c = generateKeyBetween(a, _c);\n      _result.push(_c);\n    }\n    _result.reverse();\n    return _result;\n  }\n  var mid = Math.floor(n / 2);\n  var c = generateKeyBetween(a, b);\n  return [].concat(_toConsumableArray(generateNKeysBetween(a, c, mid)), [c], _toConsumableArray(generateNKeysBetween(c, b, n - mid - 1)));\n}\nfunction getCounter() {\n  var index = \"a0\";\n  return function () {\n    index = generateKeyBetween(index, void 0);\n    return index;\n  };\n}\nfunction iterableRange() {\n  var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  return /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var index, i;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          index = \"a0\";\n          i = 0;\n        case 2:\n          if (!(i < n)) {\n            _context.next = 9;\n            break;\n          }\n          i++;\n          index = generateKeyBetween(index, void 0);\n          _context.next = 7;\n          return index;\n        case 7:\n          _context.next = 2;\n          break;\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  })();\n}\nexport { decrementInteger, generateKeyBetween, generateNKeysBetween, getCounter, getIntegerLength, getIntegerPart, incrementInteger, isNotUndefined, iterableRange, midpoint, validateInteger, validateOrder };","map":{"version":3,"names":["DIGITS","INTEGER_ZERO","SMALLEST_INTEGER","getIntegerLength","head","charCodeAt","Error","validateInteger","int","length","charAt","isNotUndefined","n","incrementInteger","x","_x$split","split","_x$split2","_toArray","digs","slice","carry","i","d","indexOf","h","String","fromCharCode","push","pop","join","decrementInteger","_x$split3","_x$split4","borrow","midpoint","a","b","digitA","digitB","midDigit","Math","round","getIntegerPart","index","integerPartLength","validateOrder","f","generateKeyBetween","ib2","fb2","ibl","ia2","fa2","i2","ia","fa","ib","fb","generateNKeysBetween","c2","result","reverse","mid","floor","c","concat","_toConsumableArray","getCounter","iterableRange","arguments","undefined","_regeneratorRuntime","mark","_callee","wrap","_callee$","_context","prev","next","stop"],"sources":["/Users/lesleyshinhiwa/Downloads/tldraw-partykit-example-2/Co/node_modules/@tldraw/indices/src/lib/dgreensp/dgreensp.ts"],"sourcesContent":["// Adapted from https://observablehq.com/@dgreensp/implementing-fractional-indexing\n// by @dgreensp (twitter @DavidLG)\n\nconst DIGITS = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\nconst INTEGER_ZERO = 'a0'\nconst SMALLEST_INTEGER = 'A00000000000000000000000000'\n\n/**\n * Get the length of an integer.\n *\n * @param head - The integer to use.\n */\nexport function getIntegerLength(head: string): number {\n\tif (head >= 'a' && head <= 'z') {\n\t\treturn head.charCodeAt(0) - 'a'.charCodeAt(0) + 2\n\t} else if (head >= 'A' && head <= 'Z') {\n\t\treturn 'Z'.charCodeAt(0) - head.charCodeAt(0) + 2\n\t} else {\n\t\tthrow new Error('Invalid index key head: ' + head)\n\t}\n}\n\n/**\n * Validate an integer.\n *\n * @param int - The integer to use.\n */\nexport function validateInteger(int: string): asserts int is string {\n\tif (int.length !== getIntegerLength(int.charAt(0))) {\n\t\tthrow new Error('invalid integer part of index key: ' + int)\n\t}\n}\n\nexport function isNotUndefined(n: string | undefined): asserts n is string {\n\tif (n === undefined) throw Error('n is undefined')\n}\n\n/**\n * Increment an integer.\n *\n * @param x - The integer to increment\n */\nexport function incrementInteger(x: string): string | undefined {\n\tvalidateInteger(x)\n\tconst [head, ...digs] = x.split('')\n\tlet carry = true\n\tfor (let i = digs.length - 1; carry && i >= 0; i--) {\n\t\tconst d = DIGITS.indexOf(digs[i]) + 1\n\t\tif (d === DIGITS.length) {\n\t\t\tdigs[i] = '0'\n\t\t} else {\n\t\t\tdigs[i] = DIGITS.charAt(d)\n\t\t\tcarry = false\n\t\t}\n\t}\n\tif (carry) {\n\t\tif (head === 'Z') return 'a0'\n\t\tif (head === 'z') return undefined\n\t\tconst h = String.fromCharCode(head.charCodeAt(0) + 1)\n\t\tif (h > 'a') {\n\t\t\tdigs.push('0')\n\t\t} else {\n\t\t\tdigs.pop()\n\t\t}\n\t\treturn h + digs.join('')\n\t} else {\n\t\treturn head + digs.join('')\n\t}\n}\n\n/**\n * Decrement an integer.\n *\n * @param x - The integer to decrement\n */\nexport function decrementInteger(x: string): string | undefined {\n\tvalidateInteger(x)\n\tconst [head, ...digs] = x.split('')\n\tlet borrow = true\n\tfor (let i = digs.length - 1; borrow && i >= 0; i--) {\n\t\tconst d = DIGITS.indexOf(digs[i]) - 1\n\t\tif (d === -1) {\n\t\t\tdigs[i] = DIGITS.slice(-1)\n\t\t} else {\n\t\t\tdigs[i] = DIGITS.charAt(d)\n\t\t\tborrow = false\n\t\t}\n\t}\n\tif (borrow) {\n\t\tif (head === 'a') return 'Z' + DIGITS.slice(-1)\n\t\tif (head === 'A') return undefined\n\t\tconst h = String.fromCharCode(head.charCodeAt(0) - 1)\n\t\tif (h < 'Z') {\n\t\t\tdigs.push(DIGITS.slice(-1))\n\t\t} else {\n\t\t\tdigs.pop()\n\t\t}\n\t\treturn h + digs.join('')\n\t} else {\n\t\treturn head + digs.join('')\n\t}\n}\n\n/**\n * Get the midpoint between two indexs.\n *\n * @param a - The start index.\n * @param b - The end index.\n */\nexport function midpoint(a: string, b: string | undefined): string {\n\tif (b !== undefined && a >= b) {\n\t\tthrow new Error(a + ' >= ' + b)\n\t}\n\tif (a.slice(-1) === '0' || (b && b.slice(-1) === '0')) {\n\t\tthrow new Error('trailing zero')\n\t}\n\tif (b) {\n\t\tlet n = 0\n\t\twhile ((a.charAt(n) || '0') === b.charAt(n)) {\n\t\t\tn++\n\t\t}\n\t\tif (n > 0) {\n\t\t\treturn b.slice(0, n) + midpoint(a.slice(n), b.slice(n))\n\t\t}\n\t}\n\tconst digitA = a ? DIGITS.indexOf(a.charAt(0)) : 0\n\tconst digitB = b !== undefined ? DIGITS.indexOf(b.charAt(0)) : DIGITS.length\n\tif (digitB - digitA > 1) {\n\t\tconst midDigit = Math.round(0.5 * (digitA + digitB))\n\t\treturn DIGITS.charAt(midDigit)\n\t} else {\n\t\tif (b && b.length > 1) {\n\t\t\treturn b.slice(0, 1)\n\t\t} else {\n\t\t\treturn DIGITS.charAt(digitA) + midpoint(a.slice(1), undefined)\n\t\t}\n\t}\n}\n\n/**\n * Get the integer part of an index.\n *\n * @param index - The index to use.\n */\nexport function getIntegerPart(index: string): string {\n\tconst integerPartLength = getIntegerLength(index.charAt(0))\n\tif (integerPartLength > index.length) {\n\t\tthrow new Error('invalid index: ' + index)\n\t}\n\treturn index.slice(0, integerPartLength)\n}\n\n/**\n * Validate an index.\n *\n * @param x - The index to validate.\n */\nexport function validateOrder(index: string): asserts index is string {\n\tif (index === SMALLEST_INTEGER) {\n\t\tthrow new Error('invalid index: ' + index)\n\t}\n\t// getIntegerPart will throw if the first character is bad,\n\t// or the key is too short.  we'd call it to check these things\n\t// even if we didn't need the result\n\tconst i = getIntegerPart(index)\n\tconst f = index.slice(i.length)\n\tif (f.slice(-1) === '0') {\n\t\tthrow new Error('invalid index: ' + index)\n\t}\n}\n\n/**\n * A string made up of an integer part followed by a fraction part. The fraction point consists of\n * zero or more digits with no trailing zeros.\n */\nexport type OrderKey = string\n\n/**\n * Generate an index key at the midpoint between a start and end.\n *\n * @param a - The start index key string.\n * @param b - The end index key string, greater than A.\n */\nexport function generateKeyBetween(a: OrderKey | undefined, b: OrderKey | undefined): OrderKey {\n\tif (a !== undefined) validateOrder(a)\n\tif (b !== undefined) validateOrder(b)\n\tif (a !== undefined && b !== undefined && a >= b) {\n\t\tthrow new Error(a + ' >= ' + b)\n\t}\n\tif (a === undefined && b === undefined) {\n\t\treturn INTEGER_ZERO\n\t}\n\tif (a === undefined) {\n\t\tif (b === undefined) throw Error('b is undefined')\n\t\tconst ib = getIntegerPart(b)\n\t\tconst fb = b.slice(ib.length)\n\t\tif (ib === SMALLEST_INTEGER) {\n\t\t\treturn ib + midpoint('', fb)\n\t\t}\n\t\tif (ib < b) {\n\t\t\treturn ib\n\t\t}\n\t\tconst ibl = decrementInteger(ib)\n\t\tisNotUndefined(ibl)\n\t\treturn ibl\n\t}\n\tif (b === undefined) {\n\t\tconst ia = getIntegerPart(a)\n\t\tconst fa = a.slice(ia.length)\n\t\tconst i = incrementInteger(ia)\n\t\treturn i === undefined ? ia + midpoint(fa, undefined) : i\n\t}\n\tconst ia = getIntegerPart(a)\n\tconst fa = a.slice(ia.length)\n\tconst ib = getIntegerPart(b)\n\tconst fb = b.slice(ib.length)\n\tif (ia === ib) {\n\t\treturn ia + midpoint(fa, fb)\n\t}\n\tconst i = incrementInteger(ia)\n\tisNotUndefined(i)\n\treturn i < b ? i : ia + midpoint(fa, undefined)\n}\n\n/**\n * Generate N number of index keys between the start and end index.\n *\n * @param a - The start index key string.\n * @param b - The end index key, greater than A string.\n * @param n - The number of index keys to generate.\n */\nexport function generateNKeysBetween(\n\ta: string | undefined,\n\tb: string | undefined,\n\tn: number\n): string[] {\n\tif (n === 0) return []\n\tif (n === 1) return [generateKeyBetween(a, b)]\n\tif (b === undefined) {\n\t\tlet c = generateKeyBetween(a, b)\n\t\tconst result = [c]\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tc = generateKeyBetween(c, b)\n\t\t\tresult.push(c)\n\t\t}\n\t\treturn result\n\t}\n\tif (a === undefined) {\n\t\tlet c = generateKeyBetween(a, b)\n\t\tconst result = [c]\n\t\tfor (let i = 0; i < n - 1; i++) {\n\t\t\tc = generateKeyBetween(a, c)\n\t\t\tresult.push(c)\n\t\t}\n\t\tresult.reverse()\n\t\treturn result\n\t}\n\tconst mid = Math.floor(n / 2)\n\tconst c = generateKeyBetween(a, b)\n\treturn [...generateNKeysBetween(a, c, mid), c, ...generateNKeysBetween(c, b, n - mid - 1)]\n}\n\nexport function getCounter() {\n\tlet index = 'a0'\n\treturn () => {\n\t\tindex = generateKeyBetween(index, undefined)\n\t\treturn index\n\t}\n}\n\nexport function* iterableRange(n = 1) {\n\tlet index = 'a0'\n\tlet i = 0\n\twhile (i < n) {\n\t\ti++\n\t\tindex = generateKeyBetween(index, undefined)\n\t\tyield index\n\t}\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}