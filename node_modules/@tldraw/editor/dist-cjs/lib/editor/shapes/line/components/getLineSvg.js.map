{
  "version": 3,
  "sources": ["../../../../../../src/lib/editor/shapes/line/components/getLineSvg.ts"],
  "sourcesContent": ["import { CubicSpline2d, Polyline2d } from '@tldraw/primitives'\nimport { TLDefaultDashStyle, TLLineShape } from '@tldraw/tlschema'\nimport { getPerfectDashProps } from '../../shared/getPerfectDashProps'\nimport { getLineDrawPath } from './getLinePath'\n\nexport function getDrawLineShapeSvg({\n\tshape,\n\tstrokeWidth,\n\tspline,\n\tcolor,\n}: {\n\tshape: TLLineShape\n\tstrokeWidth: number\n\tspline: CubicSpline2d | Polyline2d\n\tcolor: string\n}) {\n\tconst pfPath = getLineDrawPath(shape, spline, strokeWidth)\n\n\tconst p = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\tp.setAttribute('stroke-width', '0')\n\tp.setAttribute('stroke', 'none')\n\tp.setAttribute('fill', color)\n\tp.setAttribute('d', pfPath)\n\n\treturn p\n}\n\nexport function getDashedLineShapeSvg({\n\tdash,\n\tstrokeWidth,\n\tspline,\n\tcolor,\n}: {\n\tdash: TLDefaultDashStyle\n\tstrokeWidth: number\n\tspline: CubicSpline2d | Polyline2d\n\tcolor: string\n}) {\n\tconst { segments } = spline\n\n\tconst g = document.createElementNS('http://www.w3.org/2000/svg', 'g')\n\tg.setAttribute('stroke', color)\n\tg.setAttribute('stroke-width', strokeWidth.toString())\n\n\tsegments.forEach((segment, i) => {\n\t\tconst path = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\t\tconst { strokeDasharray, strokeDashoffset } = getPerfectDashProps(segment.length, strokeWidth, {\n\t\t\tstyle: dash,\n\t\t\tstart: i > 0 ? 'outset' : 'none',\n\t\t\tend: i < segments.length - 1 ? 'outset' : 'none',\n\t\t})\n\n\t\tpath.setAttribute('stroke-dasharray', strokeDasharray.toString())\n\t\tpath.setAttribute('stroke-dashoffset', strokeDashoffset.toString())\n\t\tpath.setAttribute('d', segment.path)\n\t\tpath.setAttribute('fill', 'none')\n\t\tg.appendChild(path)\n\t})\n\n\treturn g\n}\n\nexport function getSolidLineShapeSvg({\n\tstrokeWidth,\n\tspline,\n\tcolor,\n}: {\n\tstrokeWidth: number\n\tspline: CubicSpline2d | Polyline2d\n\tcolor: string\n}) {\n\tconst { path } = spline\n\n\tconst p = document.createElementNS('http://www.w3.org/2000/svg', 'path')\n\tp.setAttribute('stroke-width', strokeWidth.toString())\n\tp.setAttribute('stroke', color)\n\tp.setAttribute('fill', 'none')\n\tp.setAttribute('d', path)\n\n\treturn p\n}\n\nexport function getLineSvg(\n\tshape: TLLineShape,\n\tspline: CubicSpline2d | Polyline2d,\n\tcolor: string,\n\tstrokeWidth: number\n) {\n\tswitch (shape.props.dash) {\n\t\tcase 'draw':\n\t\t\treturn getDrawLineShapeSvg({\n\t\t\t\tshape,\n\t\t\t\tstrokeWidth,\n\t\t\t\tspline,\n\t\t\t\tcolor,\n\t\t\t})\n\n\t\tcase 'solid':\n\t\t\treturn getSolidLineShapeSvg({\n\t\t\t\tstrokeWidth,\n\t\t\t\tspline,\n\t\t\t\tcolor,\n\t\t\t})\n\t\tdefault:\n\t\t\treturn getDashedLineShapeSvg({\n\t\t\t\tstrokeWidth,\n\t\t\t\tspline,\n\t\t\t\tdash: shape.props.dash,\n\t\t\t\tcolor,\n\t\t\t})\n\t}\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,iCAAoC;AACpC,yBAAgC;AAEzB,SAAS,oBAAoB;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,aAAS,oCAAgB,OAAO,QAAQ,WAAW;AAEzD,QAAM,IAAI,SAAS,gBAAgB,8BAA8B,MAAM;AACvE,IAAE,aAAa,gBAAgB,GAAG;AAClC,IAAE,aAAa,UAAU,MAAM;AAC/B,IAAE,aAAa,QAAQ,KAAK;AAC5B,IAAE,aAAa,KAAK,MAAM;AAE1B,SAAO;AACR;AAEO,SAAS,sBAAsB;AAAA,EACrC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACD,GAKG;AACF,QAAM,EAAE,SAAS,IAAI;AAErB,QAAM,IAAI,SAAS,gBAAgB,8BAA8B,GAAG;AACpE,IAAE,aAAa,UAAU,KAAK;AAC9B,IAAE,aAAa,gBAAgB,YAAY,SAAS,CAAC;AAErD,WAAS,QAAQ,CAAC,SAAS,MAAM;AAChC,UAAM,OAAO,SAAS,gBAAgB,8BAA8B,MAAM;AAC1E,UAAM,EAAE,iBAAiB,iBAAiB,QAAI,gDAAoB,QAAQ,QAAQ,aAAa;AAAA,MAC9F,OAAO;AAAA,MACP,OAAO,IAAI,IAAI,WAAW;AAAA,MAC1B,KAAK,IAAI,SAAS,SAAS,IAAI,WAAW;AAAA,IAC3C,CAAC;AAED,SAAK,aAAa,oBAAoB,gBAAgB,SAAS,CAAC;AAChE,SAAK,aAAa,qBAAqB,iBAAiB,SAAS,CAAC;AAClE,SAAK,aAAa,KAAK,QAAQ,IAAI;AACnC,SAAK,aAAa,QAAQ,MAAM;AAChC,MAAE,YAAY,IAAI;AAAA,EACnB,CAAC;AAED,SAAO;AACR;AAEO,SAAS,qBAAqB;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AACD,GAIG;AACF,QAAM,EAAE,KAAK,IAAI;AAEjB,QAAM,IAAI,SAAS,gBAAgB,8BAA8B,MAAM;AACvE,IAAE,aAAa,gBAAgB,YAAY,SAAS,CAAC;AACrD,IAAE,aAAa,UAAU,KAAK;AAC9B,IAAE,aAAa,QAAQ,MAAM;AAC7B,IAAE,aAAa,KAAK,IAAI;AAExB,SAAO;AACR;AAEO,SAAS,WACf,OACA,QACA,OACA,aACC;AACD,UAAQ,MAAM,MAAM,MAAM;AAAA,IACzB,KAAK;AACJ,aAAO,oBAAoB;AAAA,QAC1B;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IAEF,KAAK;AACJ,aAAO,qBAAqB;AAAA,QAC3B;AAAA,QACA;AAAA,QACA;AAAA,MACD,CAAC;AAAA,IACF;AACC,aAAO,sBAAsB;AAAA,QAC5B;AAAA,QACA;AAAA,QACA,MAAM,MAAM,MAAM;AAAA,QAClB;AAAA,MACD,CAAC;AAAA,EACH;AACD;",
  "names": []
}
