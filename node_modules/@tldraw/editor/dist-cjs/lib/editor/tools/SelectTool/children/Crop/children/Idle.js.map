{
  "version": 3,
  "sources": ["../../../../../../../../src/lib/editor/tools/SelectTool/children/Crop/children/Idle.ts"],
  "sourcesContent": ["import { Vec2d } from '@tldraw/primitives'\nimport { TLEventHandlers, TLExitEventHandler } from '../../../../../types/event-types'\nimport { StateNode } from '../../../../StateNode'\nimport { ShapeWithCrop, getTranslateCroppedImageChange } from './crop_helpers'\n\nexport class Idle extends StateNode {\n\tstatic override id = 'idle'\n\n\tonEnter = () => {\n\t\tthis.editor.setCursor({ type: 'default' })\n\n\t\tconst { onlySelectedShape } = this.editor\n\n\t\t// well this fucking sucks. what the fuck.\n\t\t// it's possible for a user to enter cropping, then undo\n\t\t// (which clears the cropping id) but still remain in this state.\n\t\tthis.editor.on('change-history', this.cleanupCroppingState)\n\n\t\tthis.editor.mark('crop')\n\n\t\tif (onlySelectedShape) {\n\t\t\tthis.editor.setCroppingId(onlySelectedShape.id)\n\t\t}\n\t}\n\n\tonExit: TLExitEventHandler = () => {\n\t\tthis.editor.setCursor({ type: 'default' })\n\n\t\tthis.editor.off('change-history', this.cleanupCroppingState)\n\t}\n\n\tonCancel: TLEventHandlers['onCancel'] = () => {\n\t\tthis.editor.setCroppingId(null)\n\t\tthis.editor.setSelectedTool('select.idle', {})\n\t}\n\n\tonPointerDown: TLEventHandlers['onPointerDown'] = (info) => {\n\t\tif (this.editor.isMenuOpen) return\n\n\t\tif (info.ctrlKey) {\n\t\t\tthis.editor.setCroppingId(null)\n\t\t\tthis.editor.setSelectedTool('select.brushing', info)\n\t\t\treturn\n\t\t}\n\n\t\tswitch (info.target) {\n\t\t\tcase 'canvas': {\n\t\t\t\tthis.cancel()\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'shape': {\n\t\t\t\tif (info.shape.id === this.editor.croppingId) {\n\t\t\t\t\tthis.editor.setSelectedTool('select.crop.pointing_crop', info)\n\t\t\t\t\treturn\n\t\t\t\t} else {\n\t\t\t\t\tif (this.editor.getShapeUtil(info.shape)?.canCrop(info.shape)) {\n\t\t\t\t\t\tthis.editor.setCroppingId(info.shape.id)\n\t\t\t\t\t\tthis.editor.setSelectedIds([info.shape.id])\n\t\t\t\t\t\tthis.editor.setSelectedTool('select.crop.pointing_crop', info)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.cancel()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 'selection': {\n\t\t\t\tswitch (info.handle) {\n\t\t\t\t\tcase 'mobile_rotate':\n\t\t\t\t\tcase 'top_left_rotate':\n\t\t\t\t\tcase 'top_right_rotate':\n\t\t\t\t\tcase 'bottom_left_rotate':\n\t\t\t\t\tcase 'bottom_right_rotate': {\n\t\t\t\t\t\tthis.editor.setSelectedTool('select.pointing_rotate_handle', {\n\t\t\t\t\t\t\t...info,\n\t\t\t\t\t\t\tonInteractionEnd: 'select.crop',\n\t\t\t\t\t\t})\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase 'top':\n\t\t\t\t\tcase 'right':\n\t\t\t\t\tcase 'bottom':\n\t\t\t\t\tcase 'left': {\n\t\t\t\t\t\tthis.editor.setSelectedTool('select.pointing_crop_handle', {\n\t\t\t\t\t\t\t...info,\n\t\t\t\t\t\t\tonInteractionEnd: 'select.crop',\n\t\t\t\t\t\t})\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tcase 'top_left':\n\t\t\t\t\tcase 'top_right':\n\t\t\t\t\tcase 'bottom_left':\n\t\t\t\t\tcase 'bottom_right': {\n\t\t\t\t\t\tthis.editor.setSelectedTool('select.pointing_crop_handle', {\n\t\t\t\t\t\t\t...info,\n\t\t\t\t\t\t\tonInteractionEnd: 'select.crop',\n\t\t\t\t\t\t})\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tdefault: {\n\t\t\t\t\t\tthis.cancel()\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tonDoubleClick: TLEventHandlers['onDoubleClick'] = (info) => {\n\t\t// Without this, the double click's \"settle\" would trigger the reset\n\t\t// after the user double clicked the edge to begin cropping\n\t\tif (info.phase !== 'up') return\n\n\t\tif (!this.editor.croppingId) return\n\t\tconst shape = this.editor.getShapeById(this.editor.croppingId)\n\t\tif (!shape) return\n\n\t\tconst util = this.editor.getShapeUtil(shape)\n\t\tif (!util) return\n\n\t\tif (info.target === 'selection') {\n\t\t\tutil.onDoubleClickEdge?.(shape)\n\t\t}\n\t}\n\n\tonKeyDown: TLEventHandlers['onKeyDown'] = () => {\n\t\tthis.nudgeCroppingImage(false)\n\t}\n\n\tonKeyRepeat: TLEventHandlers['onKeyRepeat'] = () => {\n\t\tthis.nudgeCroppingImage(true)\n\t}\n\n\tonKeyUp: TLEventHandlers['onKeyUp'] = (info) => {\n\t\tswitch (info.code) {\n\t\t\tcase 'Enter': {\n\t\t\t\tthis.editor.setCroppingId(null)\n\t\t\t\tthis.editor.setSelectedTool('select.idle', {})\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate cancel() {\n\t\tthis.editor.setCroppingId(null)\n\t\tthis.editor.setSelectedTool('select.idle', {})\n\t}\n\n\tprivate cleanupCroppingState = () => {\n\t\tif (!this.editor.croppingId) {\n\t\t\tthis.editor.setSelectedTool('select.idle', {})\n\t\t}\n\t}\n\n\tprivate nudgeCroppingImage(ephemeral = false) {\n\t\tconst {\n\t\t\teditor: {\n\t\t\t\tinputs: { keys },\n\t\t\t},\n\t\t} = this\n\n\t\t// We want to use the \"actual\" shift key state,\n\t\t// not the one that's in the editor.inputs.shiftKey,\n\t\t// because that one uses a short timeout on release\n\t\tconst shiftKey = keys.has('ShiftLeft')\n\n\t\tconst delta = new Vec2d(0, 0)\n\n\t\tif (keys.has('ArrowLeft')) delta.x += 1\n\t\tif (keys.has('ArrowRight')) delta.x -= 1\n\t\tif (keys.has('ArrowUp')) delta.y += 1\n\t\tif (keys.has('ArrowDown')) delta.y -= 1\n\n\t\tif (delta.equals(new Vec2d(0, 0))) return\n\n\t\tif (shiftKey) delta.mul(10)\n\n\t\tconst shape = this.editor.getShapeById(this.editor.croppingId!) as ShapeWithCrop\n\t\tif (!shape) return\n\t\tconst partial = getTranslateCroppedImageChange(this.editor, shape, delta)\n\n\t\tif (partial) {\n\t\t\tif (!ephemeral) {\n\t\t\t\t// We don't want to create new marks if the user\n\t\t\t\t// is just holding down the arrow keys\n\t\t\t\tthis.editor.mark('translate crop')\n\t\t\t}\n\n\t\t\tthis.editor.updateShapes<ShapeWithCrop>([partial])\n\t\t}\n\t}\n}\n"],
  "mappings": "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",
  "names": []
}
